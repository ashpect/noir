import { WitnessMap, StackItem, WitnessStack } from '@noir-lang/acvm_js';

// See `nested_acir_call_circuit` integration test in `acir/tests/test_program_serialization.rs`.
export const bytecode = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 0, 255, 181, 144, 161, 10, 2, 65, 16, 134, 119, 102, 203, 50,
  200, 33, 19, 55, 201, 6, 57, 77, 186, 62, 130, 8, 38, 49, 90, 108, 62, 128, 24, 228, 180,
  93, 179, 138, 213, 96, 244, 9, 68, 31, 231, 154, 209, 98, 119, 118, 175, 25, 206, 45, 254,
  48, 225, 135, 127, 134, 111, 126, 186, 130, 209, 156, 249, 150, 1, 86, 140, 6, 44, 26, 252,
  242, 154, 247, 84, 112, 78, 142, 58, 160, 154, 197, 97, 59, 38, 197, 188, 78, 239, 106,
  124, 92, 63, 118, 211, 231, 40, 95, 46, 202, 242, 54, 153, 223, 123, 151, 97, 181, 153,
  173, 6, 146, 212, 182, 206, 53, 202, 34, 41, 167, 250, 66, 66, 231, 128, 90, 208, 150, 187,
  73, 40, 42, 25, 4, 3, 8, 254, 186, 215, 246, 153, 60, 135, 113, 98, 45, 53, 154, 19, 231,
  197, 209, 1, 164, 179, 127, 224, 65, 122, 79, 17, 70, 125, 0, 65, 207, 145, 175, 213, 1, 0,
  0,
]);

export const initialWitnessMap: WitnessMap = new Map([
  [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
  [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
]);

const inner_call_witness: StackItem = {
  index: 2,
  witness: new Map([
    [0, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const nested_call_witness: StackItem = {
  index: 1,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const main_witness: StackItem = {
  index: 0,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

export const expectedWitnessStack: WitnessStack = [
  inner_call_witness,
  nested_call_witness,
  inner_call_witness,
  nested_call_witness,
  main_witness,
];

export const expectedCompressedWitnessStack = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 2, 255, 237, 145, 177, 13, 0, 32, 8, 4, 17, 117, 31, 75, 75, 87, 113, 255, 37, 44, 196, 5,
  228, 42, 194, 39, 132, 238, 114, 249, 239, 114, 163, 118, 47, 203, 254, 240, 101, 23, 152, 213, 120, 199, 73, 58, 42,
  200, 170, 176, 87, 238, 27, 119, 95, 201, 238, 190, 89, 7, 37, 195, 196, 176, 4, 5, 0, 0,
]);
