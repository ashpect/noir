// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: acir/circuit.proto
// Protobuf C++ Version: 5.29.3

#include "acir/circuit.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace acvm {
namespace acir {
namespace circuit {

inline constexpr OpcodeLocation_BrilligLocation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : acir_index_{::uint64_t{0u}},
        brillig_index_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OpcodeLocation_BrilligLocation::OpcodeLocation_BrilligLocation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OpcodeLocation_BrilligLocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpcodeLocation_BrilligLocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpcodeLocation_BrilligLocationDefaultTypeInternal() {}
  union {
    OpcodeLocation_BrilligLocation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpcodeLocation_BrilligLocationDefaultTypeInternal _OpcodeLocation_BrilligLocation_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ExpressionWidth_Unbounded::ExpressionWidth_Unbounded(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ExpressionWidth_UnboundedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExpressionWidth_UnboundedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExpressionWidth_UnboundedDefaultTypeInternal() {}
  union {
    ExpressionWidth_Unbounded _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExpressionWidth_UnboundedDefaultTypeInternal _ExpressionWidth_Unbounded_default_instance_;

inline constexpr ExpressionWidth_Bounded::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : width_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExpressionWidth_Bounded::ExpressionWidth_Bounded(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExpressionWidth_BoundedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExpressionWidth_BoundedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExpressionWidth_BoundedDefaultTypeInternal() {}
  union {
    ExpressionWidth_Bounded _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExpressionWidth_BoundedDefaultTypeInternal _ExpressionWidth_Bounded_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR BlockType_ReturnData::BlockType_ReturnData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct BlockType_ReturnDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockType_ReturnDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockType_ReturnDataDefaultTypeInternal() {}
  union {
    BlockType_ReturnData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockType_ReturnDataDefaultTypeInternal _BlockType_ReturnData_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR BlockType_Memory::BlockType_Memory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct BlockType_MemoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockType_MemoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockType_MemoryDefaultTypeInternal() {}
  union {
    BlockType_Memory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockType_MemoryDefaultTypeInternal _BlockType_Memory_default_instance_;

inline constexpr BlockType_CallData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlockType_CallData::BlockType_CallData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockType_CallDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockType_CallDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockType_CallDataDefaultTypeInternal() {}
  union {
    BlockType_CallData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockType_CallDataDefaultTypeInternal _BlockType_CallData_default_instance_;

inline constexpr BlackBoxFuncCall_BigIntSub::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lhs_{0u},
        rhs_{0u},
        output_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntSub::BlackBoxFuncCall_BigIntSub(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_BigIntSubDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntSubDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_BigIntSubDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_BigIntSub _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_BigIntSubDefaultTypeInternal _BlackBoxFuncCall_BigIntSub_default_instance_;

inline constexpr BlackBoxFuncCall_BigIntMul::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lhs_{0u},
        rhs_{0u},
        output_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntMul::BlackBoxFuncCall_BigIntMul(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_BigIntMulDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntMulDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_BigIntMulDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_BigIntMul _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_BigIntMulDefaultTypeInternal _BlackBoxFuncCall_BigIntMul_default_instance_;

inline constexpr BlackBoxFuncCall_BigIntDiv::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lhs_{0u},
        rhs_{0u},
        output_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntDiv::BlackBoxFuncCall_BigIntDiv(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_BigIntDivDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntDivDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_BigIntDivDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_BigIntDiv _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_BigIntDivDefaultTypeInternal _BlackBoxFuncCall_BigIntDiv_default_instance_;

inline constexpr BlackBoxFuncCall_BigIntAdd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lhs_{0u},
        rhs_{0u},
        output_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntAdd::BlackBoxFuncCall_BigIntAdd(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_BigIntAddDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntAddDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_BigIntAddDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_BigIntAdd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_BigIntAddDefaultTypeInternal _BlackBoxFuncCall_BigIntAdd_default_instance_;

inline constexpr OpcodeLocation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR OpcodeLocation::OpcodeLocation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OpcodeLocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpcodeLocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpcodeLocationDefaultTypeInternal() {}
  union {
    OpcodeLocation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpcodeLocationDefaultTypeInternal _OpcodeLocation_default_instance_;

inline constexpr ExpressionWidth::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ExpressionWidth::ExpressionWidth(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExpressionWidthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExpressionWidthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExpressionWidthDefaultTypeInternal() {}
  union {
    ExpressionWidth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExpressionWidthDefaultTypeInternal _ExpressionWidth_default_instance_;

inline constexpr ConstantOrWitnessEnum::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ConstantOrWitnessEnum::ConstantOrWitnessEnum(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConstantOrWitnessEnumDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConstantOrWitnessEnumDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConstantOrWitnessEnumDefaultTypeInternal() {}
  union {
    ConstantOrWitnessEnum _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConstantOrWitnessEnumDefaultTypeInternal _ConstantOrWitnessEnum_default_instance_;

inline constexpr BrilligOutputs_Array::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BrilligOutputs_Array::BrilligOutputs_Array(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BrilligOutputs_ArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrilligOutputs_ArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrilligOutputs_ArrayDefaultTypeInternal() {}
  union {
    BrilligOutputs_Array _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrilligOutputs_ArrayDefaultTypeInternal _BrilligOutputs_Array_default_instance_;

inline constexpr BlockType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BlockType::BlockType(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockTypeDefaultTypeInternal() {}
  union {
    BlockType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockTypeDefaultTypeInternal _BlockType_default_instance_;

inline constexpr BlackBoxFuncCall_BigIntToLeBytes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : outputs_{},
        input_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntToLeBytes::BlackBoxFuncCall_BigIntToLeBytes(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_BigIntToLeBytesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntToLeBytesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_BigIntToLeBytesDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_BigIntToLeBytes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_BigIntToLeBytesDefaultTypeInternal _BlackBoxFuncCall_BigIntToLeBytes_default_instance_;

inline constexpr Opcode_MemoryInit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        init_{},
        block_type_{nullptr},
        block_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Opcode_MemoryInit::Opcode_MemoryInit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Opcode_MemoryInitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Opcode_MemoryInitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Opcode_MemoryInitDefaultTypeInternal() {}
  union {
    Opcode_MemoryInit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Opcode_MemoryInitDefaultTypeInternal _Opcode_MemoryInit_default_instance_;

inline constexpr FunctionInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_{nullptr},
        num_bits_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR FunctionInput::FunctionInput(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FunctionInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionInputDefaultTypeInternal() {}
  union {
    FunctionInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionInputDefaultTypeInternal _FunctionInput_default_instance_;

inline constexpr BrilligOutputs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BrilligOutputs::BrilligOutputs(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BrilligOutputsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrilligOutputsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrilligOutputsDefaultTypeInternal() {}
  union {
    BrilligOutputs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrilligOutputsDefaultTypeInternal _BrilligOutputs_default_instance_;

inline constexpr Opcode_Call::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        inputs_{},
        outputs_{},
        predicate_{nullptr},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Opcode_Call::Opcode_Call(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Opcode_CallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Opcode_CallDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Opcode_CallDefaultTypeInternal() {}
  union {
    Opcode_Call _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Opcode_CallDefaultTypeInternal _Opcode_Call_default_instance_;

inline constexpr MemOp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        operation_{nullptr},
        index_{nullptr},
        value_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MemOp::MemOp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MemOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MemOpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MemOpDefaultTypeInternal() {}
  union {
    MemOp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MemOpDefaultTypeInternal _MemOp_default_instance_;

inline constexpr ExpressionOrMemory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ExpressionOrMemory::ExpressionOrMemory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExpressionOrMemoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExpressionOrMemoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExpressionOrMemoryDefaultTypeInternal() {}
  union {
    ExpressionOrMemory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExpressionOrMemoryDefaultTypeInternal _ExpressionOrMemory_default_instance_;

inline constexpr BrilligInputs_Array::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BrilligInputs_Array::BrilligInputs_Array(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BrilligInputs_ArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrilligInputs_ArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrilligInputs_ArrayDefaultTypeInternal() {}
  union {
    BrilligInputs_Array _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrilligInputs_ArrayDefaultTypeInternal _BrilligInputs_Array_default_instance_;

inline constexpr BlackBoxFuncCall_XOR::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lhs_{nullptr},
        rhs_{nullptr},
        output_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_XOR::BlackBoxFuncCall_XOR(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_XORDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_XORDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_XORDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_XOR _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_XORDefaultTypeInternal _BlackBoxFuncCall_XOR_default_instance_;

inline constexpr BlackBoxFuncCall_Sha256Compression::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inputs_{},
        hash_values_{},
        outputs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_Sha256Compression::BlackBoxFuncCall_Sha256Compression(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_Sha256CompressionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_Sha256CompressionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_Sha256CompressionDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_Sha256Compression _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_Sha256CompressionDefaultTypeInternal _BlackBoxFuncCall_Sha256Compression_default_instance_;

inline constexpr BlackBoxFuncCall_RecursiveAggregation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        verification_key_{},
        proof_{},
        public_inputs_{},
        key_hash_{nullptr},
        proof_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_RecursiveAggregation::BlackBoxFuncCall_RecursiveAggregation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_RecursiveAggregationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_RecursiveAggregationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_RecursiveAggregationDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_RecursiveAggregation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_RecursiveAggregationDefaultTypeInternal _BlackBoxFuncCall_RecursiveAggregation_default_instance_;

inline constexpr BlackBoxFuncCall_RANGE::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_RANGE::BlackBoxFuncCall_RANGE(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_RANGEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_RANGEDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_RANGEDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_RANGE _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_RANGEDefaultTypeInternal _BlackBoxFuncCall_RANGE_default_instance_;

inline constexpr BlackBoxFuncCall_Poseidon2Permutation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inputs_{},
        outputs_{},
        len_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_Poseidon2Permutation::BlackBoxFuncCall_Poseidon2Permutation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_Poseidon2PermutationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_Poseidon2PermutationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_Poseidon2PermutationDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_Poseidon2Permutation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_Poseidon2PermutationDefaultTypeInternal _BlackBoxFuncCall_Poseidon2Permutation_default_instance_;

inline constexpr BlackBoxFuncCall_MultiScalarMul::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : points_{},
        scalars_{},
        outputs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_MultiScalarMul::BlackBoxFuncCall_MultiScalarMul(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_MultiScalarMulDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_MultiScalarMulDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_MultiScalarMulDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_MultiScalarMul _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_MultiScalarMulDefaultTypeInternal _BlackBoxFuncCall_MultiScalarMul_default_instance_;

inline constexpr BlackBoxFuncCall_Keccakf1600::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inputs_{},
        outputs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_Keccakf1600::BlackBoxFuncCall_Keccakf1600(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_Keccakf1600DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_Keccakf1600DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_Keccakf1600DefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_Keccakf1600 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_Keccakf1600DefaultTypeInternal _BlackBoxFuncCall_Keccakf1600_default_instance_;

inline constexpr BlackBoxFuncCall_EmbeddedCurveAdd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : input1_{},
        input2_{},
        outputs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_EmbeddedCurveAdd::BlackBoxFuncCall_EmbeddedCurveAdd(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_EmbeddedCurveAddDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_EmbeddedCurveAddDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_EmbeddedCurveAddDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_EmbeddedCurveAdd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_EmbeddedCurveAddDefaultTypeInternal _BlackBoxFuncCall_EmbeddedCurveAdd_default_instance_;

inline constexpr BlackBoxFuncCall_EcdsaSecp256r1::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_key_x_{},
        public_key_y_{},
        signature_{},
        hashed_message_{},
        output_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_EcdsaSecp256r1::BlackBoxFuncCall_EcdsaSecp256r1(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_EcdsaSecp256r1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_EcdsaSecp256r1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_EcdsaSecp256r1DefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_EcdsaSecp256r1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_EcdsaSecp256r1DefaultTypeInternal _BlackBoxFuncCall_EcdsaSecp256r1_default_instance_;

inline constexpr BlackBoxFuncCall_EcdsaSecp256k1::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_key_x_{},
        public_key_y_{},
        signature_{},
        hashed_message_{},
        output_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_EcdsaSecp256k1::BlackBoxFuncCall_EcdsaSecp256k1(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_EcdsaSecp256k1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_EcdsaSecp256k1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_EcdsaSecp256k1DefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_EcdsaSecp256k1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_EcdsaSecp256k1DefaultTypeInternal _BlackBoxFuncCall_EcdsaSecp256k1_default_instance_;

inline constexpr BlackBoxFuncCall_Blake3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inputs_{},
        outputs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_Blake3::BlackBoxFuncCall_Blake3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_Blake3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_Blake3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_Blake3DefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_Blake3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_Blake3DefaultTypeInternal _BlackBoxFuncCall_Blake3_default_instance_;

inline constexpr BlackBoxFuncCall_Blake2s::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inputs_{},
        outputs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_Blake2s::BlackBoxFuncCall_Blake2s(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_Blake2sDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_Blake2sDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_Blake2sDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_Blake2s _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_Blake2sDefaultTypeInternal _BlackBoxFuncCall_Blake2s_default_instance_;

inline constexpr BlackBoxFuncCall_BigIntFromLeBytes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inputs_{},
        modulus_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        output_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntFromLeBytes::BlackBoxFuncCall_BigIntFromLeBytes(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_BigIntFromLeBytesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_BigIntFromLeBytesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_BigIntFromLeBytesDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_BigIntFromLeBytes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_BigIntFromLeBytesDefaultTypeInternal _BlackBoxFuncCall_BigIntFromLeBytes_default_instance_;

inline constexpr BlackBoxFuncCall_AND::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lhs_{nullptr},
        rhs_{nullptr},
        output_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_AND::BlackBoxFuncCall_AND(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_ANDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_ANDDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_ANDDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_AND _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_ANDDefaultTypeInternal _BlackBoxFuncCall_AND_default_instance_;

inline constexpr BlackBoxFuncCall_AES128Encrypt::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inputs_{},
        iv_{},
        key_{},
        outputs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall_AES128Encrypt::BlackBoxFuncCall_AES128Encrypt(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCall_AES128EncryptDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCall_AES128EncryptDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCall_AES128EncryptDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall_AES128Encrypt _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCall_AES128EncryptDefaultTypeInternal _BlackBoxFuncCall_AES128Encrypt_default_instance_;

inline constexpr Opcode_MemoryOp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        op_{nullptr},
        predicate_{nullptr},
        block_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Opcode_MemoryOp::Opcode_MemoryOp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Opcode_MemoryOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Opcode_MemoryOpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Opcode_MemoryOpDefaultTypeInternal() {}
  union {
    Opcode_MemoryOp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Opcode_MemoryOpDefaultTypeInternal _Opcode_MemoryOp_default_instance_;

inline constexpr BrilligInputs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BrilligInputs::BrilligInputs(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BrilligInputsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrilligInputsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrilligInputsDefaultTypeInternal() {}
  union {
    BrilligInputs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrilligInputsDefaultTypeInternal _BrilligInputs_default_instance_;

inline constexpr BlackBoxFuncCall::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BlackBoxFuncCall::BlackBoxFuncCall(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackBoxFuncCallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackBoxFuncCallDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackBoxFuncCallDefaultTypeInternal() {}
  union {
    BlackBoxFuncCall _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackBoxFuncCallDefaultTypeInternal _BlackBoxFuncCall_default_instance_;

inline constexpr AssertionPayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        error_selector_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AssertionPayload::AssertionPayload(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AssertionPayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssertionPayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssertionPayloadDefaultTypeInternal() {}
  union {
    AssertionPayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssertionPayloadDefaultTypeInternal _AssertionPayload_default_instance_;

inline constexpr Opcode_BrilligCall::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        inputs_{},
        outputs_{},
        predicate_{nullptr},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Opcode_BrilligCall::Opcode_BrilligCall(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Opcode_BrilligCallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Opcode_BrilligCallDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Opcode_BrilligCallDefaultTypeInternal() {}
  union {
    Opcode_BrilligCall _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Opcode_BrilligCallDefaultTypeInternal _Opcode_BrilligCall_default_instance_;

inline constexpr AssertMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        location_{nullptr},
        payload_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AssertMessage::AssertMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AssertMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssertMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssertMessageDefaultTypeInternal() {}
  union {
    AssertMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssertMessageDefaultTypeInternal _AssertMessage_default_instance_;

inline constexpr Opcode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Opcode::Opcode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OpcodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpcodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpcodeDefaultTypeInternal() {}
  union {
    Opcode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpcodeDefaultTypeInternal _Opcode_default_instance_;

inline constexpr Circuit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        opcodes_{},
        private_parameters_{},
        public_parameters_{},
        return_values_{},
        assert_messages_{},
        expression_width_{nullptr},
        current_witness_index_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Circuit::Circuit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CircuitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CircuitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CircuitDefaultTypeInternal() {}
  union {
    Circuit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CircuitDefaultTypeInternal _Circuit_default_instance_;
}  // namespace circuit
}  // namespace acir
}  // namespace acvm
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_acir_2fcircuit_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_acir_2fcircuit_2eproto = nullptr;
const ::uint32_t
    TableStruct_acir_2fcircuit_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Circuit, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Circuit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Circuit, _impl_.current_witness_index_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Circuit, _impl_.opcodes_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Circuit, _impl_.expression_width_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Circuit, _impl_.private_parameters_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Circuit, _impl_.public_parameters_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Circuit, _impl_.return_values_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Circuit, _impl_.assert_messages_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionWidth_Unbounded, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionWidth_Bounded, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionWidth_Bounded, _impl_.width_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionWidth, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionWidth, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionWidth, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::AssertMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::AssertMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::AssertMessage, _impl_.location_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::AssertMessage, _impl_.payload_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::OpcodeLocation_BrilligLocation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::OpcodeLocation_BrilligLocation, _impl_.acir_index_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::OpcodeLocation_BrilligLocation, _impl_.brillig_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::OpcodeLocation, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::OpcodeLocation, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::OpcodeLocation, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::AssertionPayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::AssertionPayload, _impl_.error_selector_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::AssertionPayload, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionOrMemory, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionOrMemory, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionOrMemory, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_MemoryOp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_MemoryOp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_MemoryOp, _impl_.block_id_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_MemoryOp, _impl_.op_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_MemoryOp, _impl_.predicate_),
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_MemoryInit, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_MemoryInit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_MemoryInit, _impl_.block_id_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_MemoryInit, _impl_.init_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_MemoryInit, _impl_.block_type_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_BrilligCall, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_BrilligCall, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_BrilligCall, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_BrilligCall, _impl_.inputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_BrilligCall, _impl_.outputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_BrilligCall, _impl_.predicate_),
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_Call, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_Call, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_Call, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_Call, _impl_.inputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_Call, _impl_.outputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode_Call, _impl_.predicate_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt, _impl_.inputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt, _impl_.iv_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt, _impl_.outputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_AND, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_AND, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_AND, _impl_.lhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_AND, _impl_.rhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_AND, _impl_.output_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_XOR, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_XOR, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_XOR, _impl_.lhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_XOR, _impl_.rhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_XOR, _impl_.output_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_RANGE, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_RANGE, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_RANGE, _impl_.input_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Blake2s, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Blake2s, _impl_.inputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Blake2s, _impl_.outputs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Blake3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Blake3, _impl_.inputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Blake3, _impl_.outputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1, _impl_.public_key_x_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1, _impl_.public_key_y_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1, _impl_.hashed_message_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1, _impl_.output_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1, _impl_.public_key_x_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1, _impl_.public_key_y_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1, _impl_.hashed_message_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1, _impl_.output_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul, _impl_.points_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul, _impl_.scalars_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul, _impl_.outputs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.input1_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.input2_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.outputs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Keccakf1600, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Keccakf1600, _impl_.inputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Keccakf1600, _impl_.outputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation, _impl_.verification_key_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation, _impl_.proof_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation, _impl_.public_inputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation, _impl_.key_hash_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation, _impl_.proof_type_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntAdd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntAdd, _impl_.lhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntAdd, _impl_.rhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntAdd, _impl_.output_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntSub, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntSub, _impl_.lhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntSub, _impl_.rhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntSub, _impl_.output_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntMul, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntMul, _impl_.lhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntMul, _impl_.rhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntMul, _impl_.output_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntDiv, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntDiv, _impl_.lhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntDiv, _impl_.rhs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntDiv, _impl_.output_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes, _impl_.inputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes, _impl_.modulus_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes, _impl_.output_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntToLeBytes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntToLeBytes, _impl_.input_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_BigIntToLeBytes, _impl_.outputs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation, _impl_.inputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation, _impl_.outputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation, _impl_.len_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression, _impl_.inputs_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression, _impl_.hash_values_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression, _impl_.outputs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::FunctionInput, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::FunctionInput, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::FunctionInput, _impl_.input_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::FunctionInput, _impl_.num_bits_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ConstantOrWitnessEnum, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ConstantOrWitnessEnum, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ConstantOrWitnessEnum, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::MemOp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::MemOp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::MemOp, _impl_.operation_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::MemOp, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::MemOp, _impl_.value_),
        0,
        1,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlockType_Memory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlockType_CallData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlockType_CallData, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlockType_ReturnData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlockType, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlockType, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlockType, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligInputs_Array, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligInputs_Array, _impl_.values_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligInputs, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligInputs, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligInputs, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligOutputs_Array, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligOutputs_Array, _impl_.values_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligOutputs, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligOutputs, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligOutputs, _impl_.value_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::acvm::acir::circuit::Circuit)},
        {22, -1, -1, sizeof(::acvm::acir::circuit::ExpressionWidth_Unbounded)},
        {30, -1, -1, sizeof(::acvm::acir::circuit::ExpressionWidth_Bounded)},
        {39, -1, -1, sizeof(::acvm::acir::circuit::ExpressionWidth)},
        {50, 60, -1, sizeof(::acvm::acir::circuit::AssertMessage)},
        {62, -1, -1, sizeof(::acvm::acir::circuit::OpcodeLocation_BrilligLocation)},
        {72, -1, -1, sizeof(::acvm::acir::circuit::OpcodeLocation)},
        {83, -1, -1, sizeof(::acvm::acir::circuit::AssertionPayload)},
        {93, -1, -1, sizeof(::acvm::acir::circuit::ExpressionOrMemory)},
        {104, 115, -1, sizeof(::acvm::acir::circuit::Opcode_MemoryOp)},
        {118, 129, -1, sizeof(::acvm::acir::circuit::Opcode_MemoryInit)},
        {132, 144, -1, sizeof(::acvm::acir::circuit::Opcode_BrilligCall)},
        {148, 160, -1, sizeof(::acvm::acir::circuit::Opcode_Call)},
        {164, -1, -1, sizeof(::acvm::acir::circuit::Opcode)},
        {179, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt)},
        {191, 202, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_AND)},
        {205, 216, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_XOR)},
        {219, 228, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_RANGE)},
        {229, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_Blake2s)},
        {239, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_Blake3)},
        {249, 262, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1)},
        {267, 280, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1)},
        {285, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul)},
        {296, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd)},
        {307, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_Keccakf1600)},
        {317, 330, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation)},
        {335, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_BigIntAdd)},
        {346, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_BigIntSub)},
        {357, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_BigIntMul)},
        {368, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_BigIntDiv)},
        {379, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes)},
        {390, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_BigIntToLeBytes)},
        {400, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation)},
        {411, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression)},
        {422, -1, -1, sizeof(::acvm::acir::circuit::BlackBoxFuncCall)},
        {451, 461, -1, sizeof(::acvm::acir::circuit::FunctionInput)},
        {463, -1, -1, sizeof(::acvm::acir::circuit::ConstantOrWitnessEnum)},
        {474, 485, -1, sizeof(::acvm::acir::circuit::MemOp)},
        {488, -1, -1, sizeof(::acvm::acir::circuit::BlockType_Memory)},
        {496, -1, -1, sizeof(::acvm::acir::circuit::BlockType_CallData)},
        {505, -1, -1, sizeof(::acvm::acir::circuit::BlockType_ReturnData)},
        {513, -1, -1, sizeof(::acvm::acir::circuit::BlockType)},
        {525, -1, -1, sizeof(::acvm::acir::circuit::BrilligInputs_Array)},
        {534, -1, -1, sizeof(::acvm::acir::circuit::BrilligInputs)},
        {546, -1, -1, sizeof(::acvm::acir::circuit::BrilligOutputs_Array)},
        {555, -1, -1, sizeof(::acvm::acir::circuit::BrilligOutputs)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::acvm::acir::circuit::_Circuit_default_instance_._instance,
    &::acvm::acir::circuit::_ExpressionWidth_Unbounded_default_instance_._instance,
    &::acvm::acir::circuit::_ExpressionWidth_Bounded_default_instance_._instance,
    &::acvm::acir::circuit::_ExpressionWidth_default_instance_._instance,
    &::acvm::acir::circuit::_AssertMessage_default_instance_._instance,
    &::acvm::acir::circuit::_OpcodeLocation_BrilligLocation_default_instance_._instance,
    &::acvm::acir::circuit::_OpcodeLocation_default_instance_._instance,
    &::acvm::acir::circuit::_AssertionPayload_default_instance_._instance,
    &::acvm::acir::circuit::_ExpressionOrMemory_default_instance_._instance,
    &::acvm::acir::circuit::_Opcode_MemoryOp_default_instance_._instance,
    &::acvm::acir::circuit::_Opcode_MemoryInit_default_instance_._instance,
    &::acvm::acir::circuit::_Opcode_BrilligCall_default_instance_._instance,
    &::acvm::acir::circuit::_Opcode_Call_default_instance_._instance,
    &::acvm::acir::circuit::_Opcode_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_AES128Encrypt_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_AND_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_XOR_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_RANGE_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_Blake2s_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_Blake3_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_EcdsaSecp256k1_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_EcdsaSecp256r1_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_MultiScalarMul_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_EmbeddedCurveAdd_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_Keccakf1600_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_RecursiveAggregation_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_BigIntAdd_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_BigIntSub_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_BigIntMul_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_BigIntDiv_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_BigIntFromLeBytes_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_BigIntToLeBytes_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_Poseidon2Permutation_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_Sha256Compression_default_instance_._instance,
    &::acvm::acir::circuit::_BlackBoxFuncCall_default_instance_._instance,
    &::acvm::acir::circuit::_FunctionInput_default_instance_._instance,
    &::acvm::acir::circuit::_ConstantOrWitnessEnum_default_instance_._instance,
    &::acvm::acir::circuit::_MemOp_default_instance_._instance,
    &::acvm::acir::circuit::_BlockType_Memory_default_instance_._instance,
    &::acvm::acir::circuit::_BlockType_CallData_default_instance_._instance,
    &::acvm::acir::circuit::_BlockType_ReturnData_default_instance_._instance,
    &::acvm::acir::circuit::_BlockType_default_instance_._instance,
    &::acvm::acir::circuit::_BrilligInputs_Array_default_instance_._instance,
    &::acvm::acir::circuit::_BrilligInputs_default_instance_._instance,
    &::acvm::acir::circuit::_BrilligOutputs_Array_default_instance_._instance,
    &::acvm::acir::circuit::_BrilligOutputs_default_instance_._instance,
};
const char descriptor_table_protodef_acir_2fcircuit_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022acir/circuit.proto\022\021acvm.acir.circuit\032"
    "\021acir/native.proto\"\354\002\n\007Circuit\022\035\n\025curren"
    "t_witness_index\030\001 \001(\r\022*\n\007opcodes\030\002 \003(\0132\031"
    ".acvm.acir.circuit.Opcode\022<\n\020expression_"
    "width\030\003 \001(\0132\".acvm.acir.circuit.Expressi"
    "onWidth\0225\n\022private_parameters\030\004 \003(\0132\031.ac"
    "vm.acir.native.Witness\0224\n\021public_paramet"
    "ers\030\005 \003(\0132\031.acvm.acir.native.Witness\0220\n\r"
    "return_values\030\006 \003(\0132\031.acvm.acir.native.W"
    "itness\0229\n\017assert_messages\030\007 \003(\0132 .acvm.a"
    "cir.circuit.AssertMessage\"\303\001\n\017Expression"
    "Width\022A\n\tunbounded\030\001 \001(\0132,.acvm.acir.cir"
    "cuit.ExpressionWidth.UnboundedH\000\022=\n\007boun"
    "ded\030\002 \001(\0132*.acvm.acir.circuit.Expression"
    "Width.BoundedH\000\032\013\n\tUnbounded\032\030\n\007Bounded\022"
    "\r\n\005width\030\001 \001(\004B\007\n\005value\"z\n\rAssertMessage"
    "\0223\n\010location\030\001 \001(\0132!.acvm.acir.circuit.O"
    "pcodeLocation\0224\n\007payload\030\002 \001(\0132#.acvm.ac"
    "ir.circuit.AssertionPayload\"\255\001\n\016OpcodeLo"
    "cation\022\016\n\004acir\030\001 \001(\004H\000\022D\n\007brillig\030\002 \001(\0132"
    "1.acvm.acir.circuit.OpcodeLocation.Brill"
    "igLocationH\000\032<\n\017BrilligLocation\022\022\n\nacir_"
    "index\030\001 \001(\004\022\025\n\rbrillig_index\030\002 \001(\004B\007\n\005va"
    "lue\"b\n\020AssertionPayload\022\026\n\016error_selecto"
    "r\030\001 \001(\004\0226\n\007payload\030\002 \003(\0132%.acvm.acir.cir"
    "cuit.ExpressionOrMemory\"c\n\022ExpressionOrM"
    "emory\0222\n\nexpression\030\001 \001(\0132\034.acvm.acir.na"
    "tive.ExpressionH\000\022\020\n\006memory\030\002 \001(\rH\000B\007\n\005v"
    "alue\"\350\007\n\006Opcode\0223\n\013assert_zero\030\001 \001(\0132\034.a"
    "cvm.acir.native.ExpressionH\000\022A\n\022blackbox"
    "_func_call\030\002 \001(\0132#.acvm.acir.circuit.Bla"
    "ckBoxFuncCallH\000\0227\n\tmemory_op\030\003 \001(\0132\".acv"
    "m.acir.circuit.Opcode.MemoryOpH\000\022;\n\013memo"
    "ry_init\030\004 \001(\0132$.acvm.acir.circuit.Opcode"
    ".MemoryInitH\000\022=\n\014brillig_call\030\005 \001(\0132%.ac"
    "vm.acir.circuit.Opcode.BrilligCallH\000\022.\n\004"
    "call\030\006 \001(\0132\036.acvm.acir.circuit.Opcode.Ca"
    "llH\000\032\206\001\n\010MemoryOp\022\020\n\010block_id\030\001 \001(\r\022$\n\002o"
    "p\030\002 \001(\0132\030.acvm.acir.circuit.MemOp\0224\n\tpre"
    "dicate\030\003 \001(\0132\034.acvm.acir.native.Expressi"
    "onH\000\210\001\001B\014\n\n_predicate\032y\n\nMemoryInit\022\020\n\010b"
    "lock_id\030\001 \001(\r\022\'\n\004init\030\002 \003(\0132\031.acvm.acir."
    "native.Witness\0220\n\nblock_type\030\003 \001(\0132\034.acv"
    "m.acir.circuit.BlockType\032\303\001\n\013BrilligCall"
    "\022\n\n\002id\030\001 \001(\r\0220\n\006inputs\030\002 \003(\0132 .acvm.acir"
    ".circuit.BrilligInputs\0222\n\007outputs\030\003 \003(\0132"
    "!.acvm.acir.circuit.BrilligOutputs\0224\n\tpr"
    "edicate\030\004 \001(\0132\034.acvm.acir.native.Express"
    "ionH\000\210\001\001B\014\n\n_predicate\032\255\001\n\004Call\022\n\n\002id\030\001 "
    "\001(\r\022)\n\006inputs\030\002 \003(\0132\031.acvm.acir.native.W"
    "itness\022*\n\007outputs\030\003 \003(\0132\031.acvm.acir.nati"
    "ve.Witness\0224\n\tpredicate\030\004 \001(\0132\034.acvm.aci"
    "r.native.ExpressionH\000\210\001\001B\014\n\n_predicateB\007"
    "\n\005value\"\236!\n\020BlackBoxFuncCall\022K\n\016aes128_e"
    "ncrypt\030\001 \001(\01321.acvm.acir.circuit.BlackBo"
    "xFuncCall.AES128EncryptH\000\0226\n\003and\030\002 \001(\0132\'"
    ".acvm.acir.circuit.BlackBoxFuncCall.ANDH"
    "\000\0226\n\003xor\030\003 \001(\0132\'.acvm.acir.circuit.Black"
    "BoxFuncCall.XORH\000\022:\n\005range\030\004 \001(\0132).acvm."
    "acir.circuit.BlackBoxFuncCall.RANGEH\000\022>\n"
    "\007blake2s\030\005 \001(\0132+.acvm.acir.circuit.Black"
    "BoxFuncCall.Blake2sH\000\022<\n\006blake3\030\006 \001(\0132*."
    "acvm.acir.circuit.BlackBoxFuncCall.Blake"
    "3H\000\022M\n\017ecdsa_secp256k1\030\007 \001(\01322.acvm.acir"
    ".circuit.BlackBoxFuncCall.EcdsaSecp256k1"
    "H\000\022M\n\017ecdsa_secp256r1\030\010 \001(\01322.acvm.acir."
    "circuit.BlackBoxFuncCall.EcdsaSecp256r1H"
    "\000\022N\n\020multi_scalar_mul\030\t \001(\01322.acvm.acir."
    "circuit.BlackBoxFuncCall.MultiScalarMulH"
    "\000\022R\n\022embedded_curve_add\030\n \001(\01324.acvm.aci"
    "r.circuit.BlackBoxFuncCall.EmbeddedCurve"
    "AddH\000\022G\n\014keccak_f1600\030\013 \001(\0132/.acvm.acir."
    "circuit.BlackBoxFuncCall.Keccakf1600H\000\022Y"
    "\n\025recursive_aggregation\030\014 \001(\01328.acvm.aci"
    "r.circuit.BlackBoxFuncCall.RecursiveAggr"
    "egationH\000\022D\n\013big_int_add\030\r \001(\0132-.acvm.ac"
    "ir.circuit.BlackBoxFuncCall.BigIntAddH\000\022"
    "D\n\013big_int_sub\030\016 \001(\0132-.acvm.acir.circuit"
    ".BlackBoxFuncCall.BigIntSubH\000\022D\n\013big_int"
    "_mul\030\017 \001(\0132-.acvm.acir.circuit.BlackBoxF"
    "uncCall.BigIntMulH\000\022D\n\013big_int_div\030\020 \001(\013"
    "2-.acvm.acir.circuit.BlackBoxFuncCall.Bi"
    "gIntDivH\000\022V\n\025big_int_from_le_bytes\030\021 \001(\013"
    "25.acvm.acir.circuit.BlackBoxFuncCall.Bi"
    "gIntFromLeBytesH\000\022R\n\023big_int_to_le_bytes"
    "\030\022 \001(\01323.acvm.acir.circuit.BlackBoxFuncC"
    "all.BigIntToLeBytesH\000\022Y\n\025poseidon2_permu"
    "tation\030\023 \001(\01328.acvm.acir.circuit.BlackBo"
    "xFuncCall.Poseidon2PermutationH\000\022S\n\022sha2"
    "56_compression\030\024 \001(\01325.acvm.acir.circuit"
    ".BlackBoxFuncCall.Sha256CompressionH\000\032\312\001"
    "\n\rAES128Encrypt\0220\n\006inputs\030\001 \003(\0132 .acvm.a"
    "cir.circuit.FunctionInput\022,\n\002iv\030\002 \003(\0132 ."
    "acvm.acir.circuit.FunctionInput\022-\n\003key\030\003"
    " \003(\0132 .acvm.acir.circuit.FunctionInput\022*"
    "\n\007outputs\030\004 \003(\0132\031.acvm.acir.native.Witne"
    "ss\032\216\001\n\003AND\022-\n\003lhs\030\001 \001(\0132 .acvm.acir.circ"
    "uit.FunctionInput\022-\n\003rhs\030\002 \001(\0132 .acvm.ac"
    "ir.circuit.FunctionInput\022)\n\006output\030\003 \001(\013"
    "2\031.acvm.acir.native.Witness\032\216\001\n\003XOR\022-\n\003l"
    "hs\030\001 \001(\0132 .acvm.acir.circuit.FunctionInp"
    "ut\022-\n\003rhs\030\002 \001(\0132 .acvm.acir.circuit.Func"
    "tionInput\022)\n\006output\030\003 \001(\0132\031.acvm.acir.na"
    "tive.Witness\0328\n\005RANGE\022/\n\005input\030\001 \001(\0132 .a"
    "cvm.acir.circuit.FunctionInput\032g\n\007Blake2"
    "s\0220\n\006inputs\030\001 \003(\0132 .acvm.acir.circuit.Fu"
    "nctionInput\022*\n\007outputs\030\002 \003(\0132\031.acvm.acir"
    ".native.Witness\032f\n\006Blake3\0220\n\006inputs\030\001 \003("
    "\0132 .acvm.acir.circuit.FunctionInput\022*\n\007o"
    "utputs\030\002 \003(\0132\031.acvm.acir.native.Witness\032"
    "\232\002\n\016EcdsaSecp256k1\0226\n\014public_key_x\030\001 \003(\013"
    "2 .acvm.acir.circuit.FunctionInput\0226\n\014pu"
    "blic_key_y\030\002 \003(\0132 .acvm.acir.circuit.Fun"
    "ctionInput\0223\n\tsignature\030\003 \003(\0132 .acvm.aci"
    "r.circuit.FunctionInput\0228\n\016hashed_messag"
    "e\030\004 \003(\0132 .acvm.acir.circuit.FunctionInpu"
    "t\022)\n\006output\030\005 \001(\0132\031.acvm.acir.native.Wit"
    "ness\032\232\002\n\016EcdsaSecp256r1\0226\n\014public_key_x\030"
    "\001 \003(\0132 .acvm.acir.circuit.FunctionInput\022"
    "6\n\014public_key_y\030\002 \003(\0132 .acvm.acir.circui"
    "t.FunctionInput\0223\n\tsignature\030\003 \003(\0132 .acv"
    "m.acir.circuit.FunctionInput\0228\n\016hashed_m"
    "essage\030\004 \003(\0132 .acvm.acir.circuit.Functio"
    "nInput\022)\n\006output\030\005 \001(\0132\031.acvm.acir.nativ"
    "e.Witness\032\241\001\n\016MultiScalarMul\0220\n\006points\030\001"
    " \003(\0132 .acvm.acir.circuit.FunctionInput\0221"
    "\n\007scalars\030\002 \003(\0132 .acvm.acir.circuit.Func"
    "tionInput\022*\n\007outputs\030\003 \003(\0132\031.acvm.acir.n"
    "ative.Witness\032\242\001\n\020EmbeddedCurveAdd\0220\n\006in"
    "put1\030\001 \003(\0132 .acvm.acir.circuit.FunctionI"
    "nput\0220\n\006input2\030\002 \003(\0132 .acvm.acir.circuit"
    ".FunctionInput\022*\n\007outputs\030\003 \003(\0132\031.acvm.a"
    "cir.native.Witness\032k\n\013Keccakf1600\0220\n\006inp"
    "uts\030\001 \003(\0132 .acvm.acir.circuit.FunctionIn"
    "put\022*\n\007outputs\030\002 \003(\0132\031.acvm.acir.native."
    "Witness\032\204\002\n\024RecursiveAggregation\022:\n\020veri"
    "fication_key\030\001 \003(\0132 .acvm.acir.circuit.F"
    "unctionInput\022/\n\005proof\030\002 \003(\0132 .acvm.acir."
    "circuit.FunctionInput\0227\n\rpublic_inputs\030\003"
    " \003(\0132 .acvm.acir.circuit.FunctionInput\0222"
    "\n\010key_hash\030\004 \001(\0132 .acvm.acir.circuit.Fun"
    "ctionInput\022\022\n\nproof_type\030\005 \001(\r\0325\n\tBigInt"
    "Add\022\013\n\003lhs\030\001 \001(\r\022\013\n\003rhs\030\002 \001(\r\022\016\n\006output\030"
    "\003 \001(\r\0325\n\tBigIntSub\022\013\n\003lhs\030\001 \001(\r\022\013\n\003rhs\030\002"
    " \001(\r\022\016\n\006output\030\003 \001(\r\0325\n\tBigIntMul\022\013\n\003lhs"
    "\030\001 \001(\r\022\013\n\003rhs\030\002 \001(\r\022\016\n\006output\030\003 \001(\r\0325\n\tB"
    "igIntDiv\022\013\n\003lhs\030\001 \001(\r\022\013\n\003rhs\030\002 \001(\r\022\016\n\006ou"
    "tput\030\003 \001(\r\032f\n\021BigIntFromLeBytes\0220\n\006input"
    "s\030\001 \003(\0132 .acvm.acir.circuit.FunctionInpu"
    "t\022\017\n\007modulus\030\002 \001(\014\022\016\n\006output\030\003 \001(\r\032L\n\017Bi"
    "gIntToLeBytes\022\r\n\005input\030\001 \001(\r\022*\n\007outputs\030"
    "\002 \003(\0132\031.acvm.acir.native.Witness\032\201\001\n\024Pos"
    "eidon2Permutation\0220\n\006inputs\030\001 \003(\0132 .acvm"
    ".acir.circuit.FunctionInput\022*\n\007outputs\030\002"
    " \003(\0132\031.acvm.acir.native.Witness\022\013\n\003len\030\003"
    " \001(\r\032\250\001\n\021Sha256Compression\0220\n\006inputs\030\001 \003"
    "(\0132 .acvm.acir.circuit.FunctionInput\0225\n\013"
    "hash_values\030\002 \003(\0132 .acvm.acir.circuit.Fu"
    "nctionInput\022*\n\007outputs\030\003 \003(\0132\031.acvm.acir"
    ".native.WitnessB\007\n\005value\"Z\n\rFunctionInpu"
    "t\0227\n\005input\030\001 \001(\0132(.acvm.acir.circuit.Con"
    "stantOrWitnessEnum\022\020\n\010num_bits\030\002 \001(\r\"{\n\025"
    "ConstantOrWitnessEnum\022+\n\010constant\030\001 \001(\0132"
    "\027.acvm.acir.native.FieldH\000\022,\n\007witness\030\002 "
    "\001(\0132\031.acvm.acir.native.WitnessH\000B\007\n\005valu"
    "e\"\222\001\n\005MemOp\022/\n\toperation\030\001 \001(\0132\034.acvm.ac"
    "ir.native.Expression\022+\n\005index\030\002 \001(\0132\034.ac"
    "vm.acir.native.Expression\022+\n\005value\030\003 \001(\013"
    "2\034.acvm.acir.native.Expression\"\372\001\n\tBlock"
    "Type\0225\n\006memory\030\001 \001(\0132#.acvm.acir.circuit"
    ".BlockType.MemoryH\000\022:\n\tcall_data\030\002 \001(\0132%"
    ".acvm.acir.circuit.BlockType.CallDataH\000\022"
    ">\n\013return_data\030\003 \001(\0132\'.acvm.acir.circuit"
    ".BlockType.ReturnDataH\000\032\010\n\006Memory\032\031\n\010Cal"
    "lData\022\r\n\005value\030\001 \001(\r\032\014\n\nReturnDataB\007\n\005va"
    "lue\"\320\001\n\rBrilligInputs\022.\n\006single\030\001 \001(\0132\034."
    "acvm.acir.native.ExpressionH\000\0227\n\005array\030\002"
    " \001(\0132&.acvm.acir.circuit.BrilligInputs.A"
    "rrayH\000\022\026\n\014memory_array\030\003 \001(\rH\000\0325\n\005Array\022"
    ",\n\006values\030\002 \003(\0132\034.acvm.acir.native.Expre"
    "ssionB\007\n\005value\"\264\001\n\016BrilligOutputs\022+\n\006sim"
    "ple\030\001 \001(\0132\031.acvm.acir.native.WitnessH\000\0228"
    "\n\005array\030\002 \001(\0132\'.acvm.acir.circuit.Brilli"
    "gOutputs.ArrayH\000\0322\n\005Array\022)\n\006values\030\001 \003("
    "\0132\031.acvm.acir.native.WitnessB\007\n\005valueb\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_acir_2fcircuit_2eproto_deps[1] =
    {
        &::descriptor_table_acir_2fnative_2eproto,
};
static ::absl::once_flag descriptor_table_acir_2fcircuit_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_acir_2fcircuit_2eproto = {
    false,
    false,
    7405,
    descriptor_table_protodef_acir_2fcircuit_2eproto,
    "acir/circuit.proto",
    &descriptor_table_acir_2fcircuit_2eproto_once,
    descriptor_table_acir_2fcircuit_2eproto_deps,
    1,
    46,
    schemas,
    file_default_instances,
    TableStruct_acir_2fcircuit_2eproto::offsets,
    file_level_enum_descriptors_acir_2fcircuit_2eproto,
    file_level_service_descriptors_acir_2fcircuit_2eproto,
};
namespace acvm {
namespace acir {
namespace circuit {
// ===================================================================

class Circuit::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Circuit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Circuit, _impl_._has_bits_);
};

void Circuit::clear_private_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private_parameters_.Clear();
}
void Circuit::clear_public_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_parameters_.Clear();
}
void Circuit::clear_return_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.return_values_.Clear();
}
Circuit::Circuit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.Circuit)
}
inline PROTOBUF_NDEBUG_INLINE Circuit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::Circuit& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        opcodes_{visibility, arena, from.opcodes_},
        private_parameters_{visibility, arena, from.private_parameters_},
        public_parameters_{visibility, arena, from.public_parameters_},
        return_values_{visibility, arena, from.return_values_},
        assert_messages_{visibility, arena, from.assert_messages_} {}

Circuit::Circuit(
    ::google::protobuf::Arena* arena,
    const Circuit& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Circuit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.expression_width_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::ExpressionWidth>(
                              arena, *from._impl_.expression_width_)
                        : nullptr;
  _impl_.current_witness_index_ = from._impl_.current_witness_index_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.Circuit)
}
inline PROTOBUF_NDEBUG_INLINE Circuit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        opcodes_{visibility, arena},
        private_parameters_{visibility, arena},
        public_parameters_{visibility, arena},
        return_values_{visibility, arena},
        assert_messages_{visibility, arena} {}

inline void Circuit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, expression_width_),
           0,
           offsetof(Impl_, current_witness_index_) -
               offsetof(Impl_, expression_width_) +
               sizeof(Impl_::current_witness_index_));
}
Circuit::~Circuit() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.Circuit)
  SharedDtor(*this);
}
inline void Circuit::SharedDtor(MessageLite& self) {
  Circuit& this_ = static_cast<Circuit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.expression_width_;
  this_._impl_.~Impl_();
}

inline void* Circuit::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Circuit(arena);
}
constexpr auto Circuit::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Circuit, _impl_.opcodes_) +
          decltype(Circuit::_impl_.opcodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Circuit, _impl_.private_parameters_) +
          decltype(Circuit::_impl_.private_parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Circuit, _impl_.public_parameters_) +
          decltype(Circuit::_impl_.public_parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Circuit, _impl_.return_values_) +
          decltype(Circuit::_impl_.return_values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Circuit, _impl_.assert_messages_) +
          decltype(Circuit::_impl_.assert_messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Circuit), alignof(Circuit), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Circuit::PlacementNew_,
                                 sizeof(Circuit),
                                 alignof(Circuit));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Circuit::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Circuit_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Circuit::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Circuit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Circuit::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Circuit>(), &Circuit::ByteSizeLong,
            &Circuit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Circuit, _impl_._cached_size_),
        false,
    },
    &Circuit::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Circuit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 6, 0, 2> Circuit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Circuit, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::Circuit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 current_witness_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Circuit, _impl_.current_witness_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Circuit, _impl_.current_witness_index_)}},
    // repeated .acvm.acir.circuit.Opcode opcodes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Circuit, _impl_.opcodes_)}},
    // .acvm.acir.circuit.ExpressionWidth expression_width = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(Circuit, _impl_.expression_width_)}},
    // repeated .acvm.acir.native.Witness private_parameters = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(Circuit, _impl_.private_parameters_)}},
    // repeated .acvm.acir.native.Witness public_parameters = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(Circuit, _impl_.public_parameters_)}},
    // repeated .acvm.acir.native.Witness return_values = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 4, PROTOBUF_FIELD_OFFSET(Circuit, _impl_.return_values_)}},
    // repeated .acvm.acir.circuit.AssertMessage assert_messages = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 5, PROTOBUF_FIELD_OFFSET(Circuit, _impl_.assert_messages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 current_witness_index = 1;
    {PROTOBUF_FIELD_OFFSET(Circuit, _impl_.current_witness_index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .acvm.acir.circuit.Opcode opcodes = 2;
    {PROTOBUF_FIELD_OFFSET(Circuit, _impl_.opcodes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.ExpressionWidth expression_width = 3;
    {PROTOBUF_FIELD_OFFSET(Circuit, _impl_.expression_width_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness private_parameters = 4;
    {PROTOBUF_FIELD_OFFSET(Circuit, _impl_.private_parameters_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness public_parameters = 5;
    {PROTOBUF_FIELD_OFFSET(Circuit, _impl_.public_parameters_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness return_values = 6;
    {PROTOBUF_FIELD_OFFSET(Circuit, _impl_.return_values_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.AssertMessage assert_messages = 7;
    {PROTOBUF_FIELD_OFFSET(Circuit, _impl_.assert_messages_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::Opcode>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::ExpressionWidth>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::AssertMessage>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Circuit::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.Circuit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.opcodes_.Clear();
  _impl_.private_parameters_.Clear();
  _impl_.public_parameters_.Clear();
  _impl_.return_values_.Clear();
  _impl_.assert_messages_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.expression_width_ != nullptr);
    _impl_.expression_width_->Clear();
  }
  _impl_.current_witness_index_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Circuit::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Circuit& this_ = static_cast<const Circuit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Circuit::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Circuit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.Circuit)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 current_witness_index = 1;
          if (this_._internal_current_witness_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_current_witness_index(), target);
          }

          // repeated .acvm.acir.circuit.Opcode opcodes = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_opcodes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_opcodes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.circuit.ExpressionWidth expression_width = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.expression_width_, this_._impl_.expression_width_->GetCachedSize(), target,
                stream);
          }

          // repeated .acvm.acir.native.Witness private_parameters = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_private_parameters_size());
               i < n; i++) {
            const auto& repfield = this_._internal_private_parameters().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness public_parameters = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_public_parameters_size());
               i < n; i++) {
            const auto& repfield = this_._internal_public_parameters().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness return_values = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_return_values_size());
               i < n; i++) {
            const auto& repfield = this_._internal_return_values().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.AssertMessage assert_messages = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_assert_messages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_assert_messages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.Circuit)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Circuit::ByteSizeLong(const MessageLite& base) {
          const Circuit& this_ = static_cast<const Circuit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Circuit::ByteSizeLong() const {
          const Circuit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.Circuit)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.Opcode opcodes = 2;
            {
              total_size += 1UL * this_._internal_opcodes_size();
              for (const auto& msg : this_._internal_opcodes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness private_parameters = 4;
            {
              total_size += 1UL * this_._internal_private_parameters_size();
              for (const auto& msg : this_._internal_private_parameters()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness public_parameters = 5;
            {
              total_size += 1UL * this_._internal_public_parameters_size();
              for (const auto& msg : this_._internal_public_parameters()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness return_values = 6;
            {
              total_size += 1UL * this_._internal_return_values_size();
              for (const auto& msg : this_._internal_return_values()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.AssertMessage assert_messages = 7;
            {
              total_size += 1UL * this_._internal_assert_messages_size();
              for (const auto& msg : this_._internal_assert_messages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .acvm.acir.circuit.ExpressionWidth expression_width = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expression_width_);
            }
          }
           {
            // uint32 current_witness_index = 1;
            if (this_._internal_current_witness_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_current_witness_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Circuit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Circuit*>(&to_msg);
  auto& from = static_cast<const Circuit&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.Circuit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_opcodes()->MergeFrom(
      from._internal_opcodes());
  _this->_internal_mutable_private_parameters()->MergeFrom(
      from._internal_private_parameters());
  _this->_internal_mutable_public_parameters()->MergeFrom(
      from._internal_public_parameters());
  _this->_internal_mutable_return_values()->MergeFrom(
      from._internal_return_values());
  _this->_internal_mutable_assert_messages()->MergeFrom(
      from._internal_assert_messages());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.expression_width_ != nullptr);
    if (_this->_impl_.expression_width_ == nullptr) {
      _this->_impl_.expression_width_ =
          ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::ExpressionWidth>(arena, *from._impl_.expression_width_);
    } else {
      _this->_impl_.expression_width_->MergeFrom(*from._impl_.expression_width_);
    }
  }
  if (from._internal_current_witness_index() != 0) {
    _this->_impl_.current_witness_index_ = from._impl_.current_witness_index_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Circuit::CopyFrom(const Circuit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.Circuit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Circuit::InternalSwap(Circuit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.opcodes_.InternalSwap(&other->_impl_.opcodes_);
  _impl_.private_parameters_.InternalSwap(&other->_impl_.private_parameters_);
  _impl_.public_parameters_.InternalSwap(&other->_impl_.public_parameters_);
  _impl_.return_values_.InternalSwap(&other->_impl_.return_values_);
  _impl_.assert_messages_.InternalSwap(&other->_impl_.assert_messages_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Circuit, _impl_.current_witness_index_)
      + sizeof(Circuit::_impl_.current_witness_index_)
      - PROTOBUF_FIELD_OFFSET(Circuit, _impl_.expression_width_)>(
          reinterpret_cast<char*>(&_impl_.expression_width_),
          reinterpret_cast<char*>(&other->_impl_.expression_width_));
}

::google::protobuf::Metadata Circuit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExpressionWidth_Unbounded::_Internal {
 public:
};

ExpressionWidth_Unbounded::ExpressionWidth_Unbounded(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.ExpressionWidth.Unbounded)
}
ExpressionWidth_Unbounded::ExpressionWidth_Unbounded(
    ::google::protobuf::Arena* arena,
    const ExpressionWidth_Unbounded& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExpressionWidth_Unbounded* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.ExpressionWidth.Unbounded)
}

inline void* ExpressionWidth_Unbounded::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExpressionWidth_Unbounded(arena);
}
constexpr auto ExpressionWidth_Unbounded::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExpressionWidth_Unbounded),
                                            alignof(ExpressionWidth_Unbounded));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExpressionWidth_Unbounded::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExpressionWidth_Unbounded_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExpressionWidth_Unbounded::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ExpressionWidth_Unbounded>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExpressionWidth_Unbounded::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ExpressionWidth_Unbounded>(), &ExpressionWidth_Unbounded::ByteSizeLong,
            &ExpressionWidth_Unbounded::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExpressionWidth_Unbounded, _impl_._cached_size_),
        false,
    },
    &ExpressionWidth_Unbounded::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExpressionWidth_Unbounded::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ExpressionWidth_Unbounded::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::ExpressionWidth_Unbounded>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ExpressionWidth_Unbounded::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExpressionWidth_Bounded::_Internal {
 public:
};

ExpressionWidth_Bounded::ExpressionWidth_Bounded(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.ExpressionWidth.Bounded)
}
ExpressionWidth_Bounded::ExpressionWidth_Bounded(
    ::google::protobuf::Arena* arena, const ExpressionWidth_Bounded& from)
    : ExpressionWidth_Bounded(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ExpressionWidth_Bounded::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ExpressionWidth_Bounded::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.width_ = {};
}
ExpressionWidth_Bounded::~ExpressionWidth_Bounded() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.ExpressionWidth.Bounded)
  SharedDtor(*this);
}
inline void ExpressionWidth_Bounded::SharedDtor(MessageLite& self) {
  ExpressionWidth_Bounded& this_ = static_cast<ExpressionWidth_Bounded&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ExpressionWidth_Bounded::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExpressionWidth_Bounded(arena);
}
constexpr auto ExpressionWidth_Bounded::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExpressionWidth_Bounded),
                                            alignof(ExpressionWidth_Bounded));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExpressionWidth_Bounded::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExpressionWidth_Bounded_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExpressionWidth_Bounded::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExpressionWidth_Bounded>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExpressionWidth_Bounded::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExpressionWidth_Bounded>(), &ExpressionWidth_Bounded::ByteSizeLong,
            &ExpressionWidth_Bounded::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExpressionWidth_Bounded, _impl_._cached_size_),
        false,
    },
    &ExpressionWidth_Bounded::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExpressionWidth_Bounded::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ExpressionWidth_Bounded::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::ExpressionWidth_Bounded>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 width = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExpressionWidth_Bounded, _impl_.width_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ExpressionWidth_Bounded, _impl_.width_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 width = 1;
    {PROTOBUF_FIELD_OFFSET(ExpressionWidth_Bounded, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ExpressionWidth_Bounded::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.ExpressionWidth.Bounded)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.width_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExpressionWidth_Bounded::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExpressionWidth_Bounded& this_ = static_cast<const ExpressionWidth_Bounded&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExpressionWidth_Bounded::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExpressionWidth_Bounded& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.ExpressionWidth.Bounded)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 width = 1;
          if (this_._internal_width() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_width(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.ExpressionWidth.Bounded)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExpressionWidth_Bounded::ByteSizeLong(const MessageLite& base) {
          const ExpressionWidth_Bounded& this_ = static_cast<const ExpressionWidth_Bounded&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExpressionWidth_Bounded::ByteSizeLong() const {
          const ExpressionWidth_Bounded& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.ExpressionWidth.Bounded)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 width = 1;
            if (this_._internal_width() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_width());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExpressionWidth_Bounded::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExpressionWidth_Bounded*>(&to_msg);
  auto& from = static_cast<const ExpressionWidth_Bounded&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.ExpressionWidth.Bounded)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_width() != 0) {
    _this->_impl_.width_ = from._impl_.width_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExpressionWidth_Bounded::CopyFrom(const ExpressionWidth_Bounded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.ExpressionWidth.Bounded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExpressionWidth_Bounded::InternalSwap(ExpressionWidth_Bounded* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.width_, other->_impl_.width_);
}

::google::protobuf::Metadata ExpressionWidth_Bounded::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExpressionWidth::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionWidth, _impl_._oneof_case_);
};

void ExpressionWidth::set_allocated_unbounded(::acvm::acir::circuit::ExpressionWidth_Unbounded* unbounded) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (unbounded) {
    ::google::protobuf::Arena* submessage_arena = unbounded->GetArena();
    if (message_arena != submessage_arena) {
      unbounded = ::google::protobuf::internal::GetOwnedMessage(message_arena, unbounded, submessage_arena);
    }
    set_has_unbounded();
    _impl_.value_.unbounded_ = unbounded;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.ExpressionWidth.unbounded)
}
void ExpressionWidth::set_allocated_bounded(::acvm::acir::circuit::ExpressionWidth_Bounded* bounded) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (bounded) {
    ::google::protobuf::Arena* submessage_arena = bounded->GetArena();
    if (message_arena != submessage_arena) {
      bounded = ::google::protobuf::internal::GetOwnedMessage(message_arena, bounded, submessage_arena);
    }
    set_has_bounded();
    _impl_.value_.bounded_ = bounded;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.ExpressionWidth.bounded)
}
ExpressionWidth::ExpressionWidth(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.ExpressionWidth)
}
inline PROTOBUF_NDEBUG_INLINE ExpressionWidth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::ExpressionWidth& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ExpressionWidth::ExpressionWidth(
    ::google::protobuf::Arena* arena,
    const ExpressionWidth& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExpressionWidth* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kUnbounded:
        _impl_.value_.unbounded_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::ExpressionWidth_Unbounded>(arena, *from._impl_.value_.unbounded_);
        break;
      case kBounded:
        _impl_.value_.bounded_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::ExpressionWidth_Bounded>(arena, *from._impl_.value_.bounded_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.ExpressionWidth)
}
inline PROTOBUF_NDEBUG_INLINE ExpressionWidth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ExpressionWidth::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExpressionWidth::~ExpressionWidth() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.ExpressionWidth)
  SharedDtor(*this);
}
inline void ExpressionWidth::SharedDtor(MessageLite& self) {
  ExpressionWidth& this_ = static_cast<ExpressionWidth&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void ExpressionWidth::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:acvm.acir.circuit.ExpressionWidth)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kUnbounded: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.unbounded_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.unbounded_);
      }
      break;
    }
    case kBounded: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.bounded_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.bounded_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* ExpressionWidth::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExpressionWidth(arena);
}
constexpr auto ExpressionWidth::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExpressionWidth),
                                            alignof(ExpressionWidth));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExpressionWidth::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExpressionWidth_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExpressionWidth::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExpressionWidth>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExpressionWidth::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExpressionWidth>(), &ExpressionWidth::ByteSizeLong,
            &ExpressionWidth::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExpressionWidth, _impl_._cached_size_),
        false,
    },
    &ExpressionWidth::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExpressionWidth::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> ExpressionWidth::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::ExpressionWidth>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.circuit.ExpressionWidth.Unbounded unbounded = 1;
    {PROTOBUF_FIELD_OFFSET(ExpressionWidth, _impl_.value_.unbounded_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.ExpressionWidth.Bounded bounded = 2;
    {PROTOBUF_FIELD_OFFSET(ExpressionWidth, _impl_.value_.bounded_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::ExpressionWidth_Unbounded>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::ExpressionWidth_Bounded>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExpressionWidth::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.ExpressionWidth)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExpressionWidth::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExpressionWidth& this_ = static_cast<const ExpressionWidth&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExpressionWidth::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExpressionWidth& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.ExpressionWidth)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kUnbounded: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.value_.unbounded_, this_._impl_.value_.unbounded_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBounded: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.value_.bounded_, this_._impl_.value_.bounded_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.ExpressionWidth)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExpressionWidth::ByteSizeLong(const MessageLite& base) {
          const ExpressionWidth& this_ = static_cast<const ExpressionWidth&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExpressionWidth::ByteSizeLong() const {
          const ExpressionWidth& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.ExpressionWidth)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // .acvm.acir.circuit.ExpressionWidth.Unbounded unbounded = 1;
            case kUnbounded: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.unbounded_);
              break;
            }
            // .acvm.acir.circuit.ExpressionWidth.Bounded bounded = 2;
            case kBounded: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.bounded_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExpressionWidth::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExpressionWidth*>(&to_msg);
  auto& from = static_cast<const ExpressionWidth&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.ExpressionWidth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kUnbounded: {
        if (oneof_needs_init) {
          _this->_impl_.value_.unbounded_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::ExpressionWidth_Unbounded>(arena, *from._impl_.value_.unbounded_);
        } else {
          _this->_impl_.value_.unbounded_->MergeFrom(from._internal_unbounded());
        }
        break;
      }
      case kBounded: {
        if (oneof_needs_init) {
          _this->_impl_.value_.bounded_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::ExpressionWidth_Bounded>(arena, *from._impl_.value_.bounded_);
        } else {
          _this->_impl_.value_.bounded_->MergeFrom(from._internal_bounded());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExpressionWidth::CopyFrom(const ExpressionWidth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.ExpressionWidth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExpressionWidth::InternalSwap(ExpressionWidth* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ExpressionWidth::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AssertMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AssertMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AssertMessage, _impl_._has_bits_);
};

AssertMessage::AssertMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.AssertMessage)
}
inline PROTOBUF_NDEBUG_INLINE AssertMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::AssertMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AssertMessage::AssertMessage(
    ::google::protobuf::Arena* arena,
    const AssertMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AssertMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.location_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::OpcodeLocation>(
                              arena, *from._impl_.location_)
                        : nullptr;
  _impl_.payload_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::AssertionPayload>(
                              arena, *from._impl_.payload_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.AssertMessage)
}
inline PROTOBUF_NDEBUG_INLINE AssertMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AssertMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, location_),
           0,
           offsetof(Impl_, payload_) -
               offsetof(Impl_, location_) +
               sizeof(Impl_::payload_));
}
AssertMessage::~AssertMessage() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.AssertMessage)
  SharedDtor(*this);
}
inline void AssertMessage::SharedDtor(MessageLite& self) {
  AssertMessage& this_ = static_cast<AssertMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.location_;
  delete this_._impl_.payload_;
  this_._impl_.~Impl_();
}

inline void* AssertMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AssertMessage(arena);
}
constexpr auto AssertMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AssertMessage),
                                            alignof(AssertMessage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AssertMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AssertMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AssertMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AssertMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AssertMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AssertMessage>(), &AssertMessage::ByteSizeLong,
            &AssertMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AssertMessage, _impl_._cached_size_),
        false,
    },
    &AssertMessage::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AssertMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> AssertMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AssertMessage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::AssertMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .acvm.acir.circuit.AssertionPayload payload = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(AssertMessage, _impl_.payload_)}},
    // .acvm.acir.circuit.OpcodeLocation location = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AssertMessage, _impl_.location_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.circuit.OpcodeLocation location = 1;
    {PROTOBUF_FIELD_OFFSET(AssertMessage, _impl_.location_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.AssertionPayload payload = 2;
    {PROTOBUF_FIELD_OFFSET(AssertMessage, _impl_.payload_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::OpcodeLocation>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::AssertionPayload>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AssertMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.AssertMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.location_ != nullptr);
      _impl_.location_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.payload_ != nullptr);
      _impl_.payload_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AssertMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AssertMessage& this_ = static_cast<const AssertMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AssertMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AssertMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.AssertMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.circuit.OpcodeLocation location = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.location_, this_._impl_.location_->GetCachedSize(), target,
                stream);
          }

          // .acvm.acir.circuit.AssertionPayload payload = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.payload_, this_._impl_.payload_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.AssertMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AssertMessage::ByteSizeLong(const MessageLite& base) {
          const AssertMessage& this_ = static_cast<const AssertMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AssertMessage::ByteSizeLong() const {
          const AssertMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.AssertMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .acvm.acir.circuit.OpcodeLocation location = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.location_);
            }
            // .acvm.acir.circuit.AssertionPayload payload = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AssertMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AssertMessage*>(&to_msg);
  auto& from = static_cast<const AssertMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.AssertMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.location_ != nullptr);
      if (_this->_impl_.location_ == nullptr) {
        _this->_impl_.location_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::OpcodeLocation>(arena, *from._impl_.location_);
      } else {
        _this->_impl_.location_->MergeFrom(*from._impl_.location_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.payload_ != nullptr);
      if (_this->_impl_.payload_ == nullptr) {
        _this->_impl_.payload_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::AssertionPayload>(arena, *from._impl_.payload_);
      } else {
        _this->_impl_.payload_->MergeFrom(*from._impl_.payload_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssertMessage::CopyFrom(const AssertMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.AssertMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AssertMessage::InternalSwap(AssertMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AssertMessage, _impl_.payload_)
      + sizeof(AssertMessage::_impl_.payload_)
      - PROTOBUF_FIELD_OFFSET(AssertMessage, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::google::protobuf::Metadata AssertMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OpcodeLocation_BrilligLocation::_Internal {
 public:
};

OpcodeLocation_BrilligLocation::OpcodeLocation_BrilligLocation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.OpcodeLocation.BrilligLocation)
}
OpcodeLocation_BrilligLocation::OpcodeLocation_BrilligLocation(
    ::google::protobuf::Arena* arena, const OpcodeLocation_BrilligLocation& from)
    : OpcodeLocation_BrilligLocation(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE OpcodeLocation_BrilligLocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void OpcodeLocation_BrilligLocation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, acir_index_),
           0,
           offsetof(Impl_, brillig_index_) -
               offsetof(Impl_, acir_index_) +
               sizeof(Impl_::brillig_index_));
}
OpcodeLocation_BrilligLocation::~OpcodeLocation_BrilligLocation() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.OpcodeLocation.BrilligLocation)
  SharedDtor(*this);
}
inline void OpcodeLocation_BrilligLocation::SharedDtor(MessageLite& self) {
  OpcodeLocation_BrilligLocation& this_ = static_cast<OpcodeLocation_BrilligLocation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* OpcodeLocation_BrilligLocation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OpcodeLocation_BrilligLocation(arena);
}
constexpr auto OpcodeLocation_BrilligLocation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OpcodeLocation_BrilligLocation),
                                            alignof(OpcodeLocation_BrilligLocation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OpcodeLocation_BrilligLocation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OpcodeLocation_BrilligLocation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OpcodeLocation_BrilligLocation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OpcodeLocation_BrilligLocation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OpcodeLocation_BrilligLocation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OpcodeLocation_BrilligLocation>(), &OpcodeLocation_BrilligLocation::ByteSizeLong,
            &OpcodeLocation_BrilligLocation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OpcodeLocation_BrilligLocation, _impl_._cached_size_),
        false,
    },
    &OpcodeLocation_BrilligLocation::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OpcodeLocation_BrilligLocation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> OpcodeLocation_BrilligLocation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::OpcodeLocation_BrilligLocation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 brillig_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OpcodeLocation_BrilligLocation, _impl_.brillig_index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OpcodeLocation_BrilligLocation, _impl_.brillig_index_)}},
    // uint64 acir_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OpcodeLocation_BrilligLocation, _impl_.acir_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OpcodeLocation_BrilligLocation, _impl_.acir_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 acir_index = 1;
    {PROTOBUF_FIELD_OFFSET(OpcodeLocation_BrilligLocation, _impl_.acir_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 brillig_index = 2;
    {PROTOBUF_FIELD_OFFSET(OpcodeLocation_BrilligLocation, _impl_.brillig_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void OpcodeLocation_BrilligLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.OpcodeLocation.BrilligLocation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.acir_index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.brillig_index_) -
      reinterpret_cast<char*>(&_impl_.acir_index_)) + sizeof(_impl_.brillig_index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OpcodeLocation_BrilligLocation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OpcodeLocation_BrilligLocation& this_ = static_cast<const OpcodeLocation_BrilligLocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OpcodeLocation_BrilligLocation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OpcodeLocation_BrilligLocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.OpcodeLocation.BrilligLocation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 acir_index = 1;
          if (this_._internal_acir_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_acir_index(), target);
          }

          // uint64 brillig_index = 2;
          if (this_._internal_brillig_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_brillig_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.OpcodeLocation.BrilligLocation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OpcodeLocation_BrilligLocation::ByteSizeLong(const MessageLite& base) {
          const OpcodeLocation_BrilligLocation& this_ = static_cast<const OpcodeLocation_BrilligLocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OpcodeLocation_BrilligLocation::ByteSizeLong() const {
          const OpcodeLocation_BrilligLocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.OpcodeLocation.BrilligLocation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 acir_index = 1;
            if (this_._internal_acir_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_acir_index());
            }
            // uint64 brillig_index = 2;
            if (this_._internal_brillig_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_brillig_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OpcodeLocation_BrilligLocation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OpcodeLocation_BrilligLocation*>(&to_msg);
  auto& from = static_cast<const OpcodeLocation_BrilligLocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.OpcodeLocation.BrilligLocation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_acir_index() != 0) {
    _this->_impl_.acir_index_ = from._impl_.acir_index_;
  }
  if (from._internal_brillig_index() != 0) {
    _this->_impl_.brillig_index_ = from._impl_.brillig_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpcodeLocation_BrilligLocation::CopyFrom(const OpcodeLocation_BrilligLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.OpcodeLocation.BrilligLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OpcodeLocation_BrilligLocation::InternalSwap(OpcodeLocation_BrilligLocation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OpcodeLocation_BrilligLocation, _impl_.brillig_index_)
      + sizeof(OpcodeLocation_BrilligLocation::_impl_.brillig_index_)
      - PROTOBUF_FIELD_OFFSET(OpcodeLocation_BrilligLocation, _impl_.acir_index_)>(
          reinterpret_cast<char*>(&_impl_.acir_index_),
          reinterpret_cast<char*>(&other->_impl_.acir_index_));
}

::google::protobuf::Metadata OpcodeLocation_BrilligLocation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OpcodeLocation::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::OpcodeLocation, _impl_._oneof_case_);
};

void OpcodeLocation::set_allocated_brillig(::acvm::acir::circuit::OpcodeLocation_BrilligLocation* brillig) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (brillig) {
    ::google::protobuf::Arena* submessage_arena = brillig->GetArena();
    if (message_arena != submessage_arena) {
      brillig = ::google::protobuf::internal::GetOwnedMessage(message_arena, brillig, submessage_arena);
    }
    set_has_brillig();
    _impl_.value_.brillig_ = brillig;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.OpcodeLocation.brillig)
}
OpcodeLocation::OpcodeLocation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.OpcodeLocation)
}
inline PROTOBUF_NDEBUG_INLINE OpcodeLocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::OpcodeLocation& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

OpcodeLocation::OpcodeLocation(
    ::google::protobuf::Arena* arena,
    const OpcodeLocation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OpcodeLocation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kAcir:
        _impl_.value_.acir_ = from._impl_.value_.acir_;
        break;
      case kBrillig:
        _impl_.value_.brillig_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::OpcodeLocation_BrilligLocation>(arena, *from._impl_.value_.brillig_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.OpcodeLocation)
}
inline PROTOBUF_NDEBUG_INLINE OpcodeLocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void OpcodeLocation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OpcodeLocation::~OpcodeLocation() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.OpcodeLocation)
  SharedDtor(*this);
}
inline void OpcodeLocation::SharedDtor(MessageLite& self) {
  OpcodeLocation& this_ = static_cast<OpcodeLocation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void OpcodeLocation::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:acvm.acir.circuit.OpcodeLocation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kAcir: {
      // No need to clear
      break;
    }
    case kBrillig: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.brillig_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.brillig_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* OpcodeLocation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OpcodeLocation(arena);
}
constexpr auto OpcodeLocation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OpcodeLocation),
                                            alignof(OpcodeLocation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OpcodeLocation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OpcodeLocation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OpcodeLocation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OpcodeLocation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OpcodeLocation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OpcodeLocation>(), &OpcodeLocation::ByteSizeLong,
            &OpcodeLocation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OpcodeLocation, _impl_._cached_size_),
        false,
    },
    &OpcodeLocation::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OpcodeLocation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 0, 2> OpcodeLocation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::OpcodeLocation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 acir = 1;
    {PROTOBUF_FIELD_OFFSET(OpcodeLocation, _impl_.value_.acir_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // .acvm.acir.circuit.OpcodeLocation.BrilligLocation brillig = 2;
    {PROTOBUF_FIELD_OFFSET(OpcodeLocation, _impl_.value_.brillig_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::OpcodeLocation_BrilligLocation>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void OpcodeLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.OpcodeLocation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OpcodeLocation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OpcodeLocation& this_ = static_cast<const OpcodeLocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OpcodeLocation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OpcodeLocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.OpcodeLocation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kAcir: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                  1, this_._internal_acir(), target);
              break;
            }
            case kBrillig: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.value_.brillig_, this_._impl_.value_.brillig_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.OpcodeLocation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OpcodeLocation::ByteSizeLong(const MessageLite& base) {
          const OpcodeLocation& this_ = static_cast<const OpcodeLocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OpcodeLocation::ByteSizeLong() const {
          const OpcodeLocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.OpcodeLocation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // uint64 acir = 1;
            case kAcir: {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_acir());
              break;
            }
            // .acvm.acir.circuit.OpcodeLocation.BrilligLocation brillig = 2;
            case kBrillig: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.brillig_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OpcodeLocation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OpcodeLocation*>(&to_msg);
  auto& from = static_cast<const OpcodeLocation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.OpcodeLocation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAcir: {
        _this->_impl_.value_.acir_ = from._impl_.value_.acir_;
        break;
      }
      case kBrillig: {
        if (oneof_needs_init) {
          _this->_impl_.value_.brillig_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::OpcodeLocation_BrilligLocation>(arena, *from._impl_.value_.brillig_);
        } else {
          _this->_impl_.value_.brillig_->MergeFrom(from._internal_brillig());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpcodeLocation::CopyFrom(const OpcodeLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.OpcodeLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OpcodeLocation::InternalSwap(OpcodeLocation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata OpcodeLocation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AssertionPayload::_Internal {
 public:
};

AssertionPayload::AssertionPayload(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.AssertionPayload)
}
inline PROTOBUF_NDEBUG_INLINE AssertionPayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::AssertionPayload& from_msg)
      : payload_{visibility, arena, from.payload_},
        _cached_size_{0} {}

AssertionPayload::AssertionPayload(
    ::google::protobuf::Arena* arena,
    const AssertionPayload& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AssertionPayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.error_selector_ = from._impl_.error_selector_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.AssertionPayload)
}
inline PROTOBUF_NDEBUG_INLINE AssertionPayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{visibility, arena},
        _cached_size_{0} {}

inline void AssertionPayload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.error_selector_ = {};
}
AssertionPayload::~AssertionPayload() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.AssertionPayload)
  SharedDtor(*this);
}
inline void AssertionPayload::SharedDtor(MessageLite& self) {
  AssertionPayload& this_ = static_cast<AssertionPayload&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AssertionPayload::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AssertionPayload(arena);
}
constexpr auto AssertionPayload::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AssertionPayload, _impl_.payload_) +
          decltype(AssertionPayload::_impl_.payload_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AssertionPayload), alignof(AssertionPayload), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AssertionPayload::PlacementNew_,
                                 sizeof(AssertionPayload),
                                 alignof(AssertionPayload));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AssertionPayload::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AssertionPayload_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AssertionPayload::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AssertionPayload>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AssertionPayload::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AssertionPayload>(), &AssertionPayload::ByteSizeLong,
            &AssertionPayload::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AssertionPayload, _impl_._cached_size_),
        false,
    },
    &AssertionPayload::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AssertionPayload::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AssertionPayload::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::AssertionPayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .acvm.acir.circuit.ExpressionOrMemory payload = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AssertionPayload, _impl_.payload_)}},
    // uint64 error_selector = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AssertionPayload, _impl_.error_selector_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AssertionPayload, _impl_.error_selector_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 error_selector = 1;
    {PROTOBUF_FIELD_OFFSET(AssertionPayload, _impl_.error_selector_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .acvm.acir.circuit.ExpressionOrMemory payload = 2;
    {PROTOBUF_FIELD_OFFSET(AssertionPayload, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::ExpressionOrMemory>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AssertionPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.AssertionPayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.Clear();
  _impl_.error_selector_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AssertionPayload::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AssertionPayload& this_ = static_cast<const AssertionPayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AssertionPayload::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AssertionPayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.AssertionPayload)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 error_selector = 1;
          if (this_._internal_error_selector() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_error_selector(), target);
          }

          // repeated .acvm.acir.circuit.ExpressionOrMemory payload = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_payload_size());
               i < n; i++) {
            const auto& repfield = this_._internal_payload().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.AssertionPayload)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AssertionPayload::ByteSizeLong(const MessageLite& base) {
          const AssertionPayload& this_ = static_cast<const AssertionPayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AssertionPayload::ByteSizeLong() const {
          const AssertionPayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.AssertionPayload)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.ExpressionOrMemory payload = 2;
            {
              total_size += 1UL * this_._internal_payload_size();
              for (const auto& msg : this_._internal_payload()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint64 error_selector = 1;
            if (this_._internal_error_selector() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_error_selector());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AssertionPayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AssertionPayload*>(&to_msg);
  auto& from = static_cast<const AssertionPayload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.AssertionPayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_payload()->MergeFrom(
      from._internal_payload());
  if (from._internal_error_selector() != 0) {
    _this->_impl_.error_selector_ = from._impl_.error_selector_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssertionPayload::CopyFrom(const AssertionPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.AssertionPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AssertionPayload::InternalSwap(AssertionPayload* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.payload_.InternalSwap(&other->_impl_.payload_);
        swap(_impl_.error_selector_, other->_impl_.error_selector_);
}

::google::protobuf::Metadata AssertionPayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExpressionOrMemory::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ExpressionOrMemory, _impl_._oneof_case_);
};

void ExpressionOrMemory::set_allocated_expression(::acvm::acir::native::Expression* expression) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (expression) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(expression)->GetArena();
    if (message_arena != submessage_arena) {
      expression = ::google::protobuf::internal::GetOwnedMessage(message_arena, expression, submessage_arena);
    }
    set_has_expression();
    _impl_.value_.expression_ = expression;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.ExpressionOrMemory.expression)
}
void ExpressionOrMemory::clear_expression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kExpression) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.expression_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.expression_);
    }
    clear_has_value();
  }
}
ExpressionOrMemory::ExpressionOrMemory(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.ExpressionOrMemory)
}
inline PROTOBUF_NDEBUG_INLINE ExpressionOrMemory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::ExpressionOrMemory& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ExpressionOrMemory::ExpressionOrMemory(
    ::google::protobuf::Arena* arena,
    const ExpressionOrMemory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExpressionOrMemory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kExpression:
        _impl_.value_.expression_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.value_.expression_);
        break;
      case kMemory:
        _impl_.value_.memory_ = from._impl_.value_.memory_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.ExpressionOrMemory)
}
inline PROTOBUF_NDEBUG_INLINE ExpressionOrMemory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ExpressionOrMemory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExpressionOrMemory::~ExpressionOrMemory() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.ExpressionOrMemory)
  SharedDtor(*this);
}
inline void ExpressionOrMemory::SharedDtor(MessageLite& self) {
  ExpressionOrMemory& this_ = static_cast<ExpressionOrMemory&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void ExpressionOrMemory::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:acvm.acir.circuit.ExpressionOrMemory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kExpression: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.expression_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.expression_);
      }
      break;
    }
    case kMemory: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* ExpressionOrMemory::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExpressionOrMemory(arena);
}
constexpr auto ExpressionOrMemory::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExpressionOrMemory),
                                            alignof(ExpressionOrMemory));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExpressionOrMemory::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExpressionOrMemory_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExpressionOrMemory::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExpressionOrMemory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExpressionOrMemory::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExpressionOrMemory>(), &ExpressionOrMemory::ByteSizeLong,
            &ExpressionOrMemory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExpressionOrMemory, _impl_._cached_size_),
        false,
    },
    &ExpressionOrMemory::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExpressionOrMemory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 0, 2> ExpressionOrMemory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::ExpressionOrMemory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.native.Expression expression = 1;
    {PROTOBUF_FIELD_OFFSET(ExpressionOrMemory, _impl_.value_.expression_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 memory = 2;
    {PROTOBUF_FIELD_OFFSET(ExpressionOrMemory, _impl_.value_.memory_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExpressionOrMemory::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.ExpressionOrMemory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExpressionOrMemory::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExpressionOrMemory& this_ = static_cast<const ExpressionOrMemory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExpressionOrMemory::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExpressionOrMemory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.ExpressionOrMemory)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kExpression: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.value_.expression_, this_._impl_.value_.expression_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMemory: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                  2, this_._internal_memory(), target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.ExpressionOrMemory)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExpressionOrMemory::ByteSizeLong(const MessageLite& base) {
          const ExpressionOrMemory& this_ = static_cast<const ExpressionOrMemory&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExpressionOrMemory::ByteSizeLong() const {
          const ExpressionOrMemory& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.ExpressionOrMemory)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // .acvm.acir.native.Expression expression = 1;
            case kExpression: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.expression_);
              break;
            }
            // uint32 memory = 2;
            case kMemory: {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_memory());
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExpressionOrMemory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExpressionOrMemory*>(&to_msg);
  auto& from = static_cast<const ExpressionOrMemory&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.ExpressionOrMemory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kExpression: {
        if (oneof_needs_init) {
          _this->_impl_.value_.expression_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.value_.expression_);
        } else {
          _this->_impl_.value_.expression_->MergeFrom(from._internal_expression());
        }
        break;
      }
      case kMemory: {
        _this->_impl_.value_.memory_ = from._impl_.value_.memory_;
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExpressionOrMemory::CopyFrom(const ExpressionOrMemory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.ExpressionOrMemory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExpressionOrMemory::InternalSwap(ExpressionOrMemory* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ExpressionOrMemory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Opcode_MemoryOp::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Opcode_MemoryOp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_._has_bits_);
};

void Opcode_MemoryOp::clear_predicate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.predicate_ != nullptr) _impl_.predicate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Opcode_MemoryOp::Opcode_MemoryOp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.Opcode.MemoryOp)
}
inline PROTOBUF_NDEBUG_INLINE Opcode_MemoryOp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::Opcode_MemoryOp& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Opcode_MemoryOp::Opcode_MemoryOp(
    ::google::protobuf::Arena* arena,
    const Opcode_MemoryOp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Opcode_MemoryOp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.op_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::MemOp>(
                              arena, *from._impl_.op_)
                        : nullptr;
  _impl_.predicate_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(
                              arena, *from._impl_.predicate_)
                        : nullptr;
  _impl_.block_id_ = from._impl_.block_id_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.Opcode.MemoryOp)
}
inline PROTOBUF_NDEBUG_INLINE Opcode_MemoryOp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Opcode_MemoryOp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, op_),
           0,
           offsetof(Impl_, block_id_) -
               offsetof(Impl_, op_) +
               sizeof(Impl_::block_id_));
}
Opcode_MemoryOp::~Opcode_MemoryOp() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.Opcode.MemoryOp)
  SharedDtor(*this);
}
inline void Opcode_MemoryOp::SharedDtor(MessageLite& self) {
  Opcode_MemoryOp& this_ = static_cast<Opcode_MemoryOp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.op_;
  delete this_._impl_.predicate_;
  this_._impl_.~Impl_();
}

inline void* Opcode_MemoryOp::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Opcode_MemoryOp(arena);
}
constexpr auto Opcode_MemoryOp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Opcode_MemoryOp),
                                            alignof(Opcode_MemoryOp));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Opcode_MemoryOp::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Opcode_MemoryOp_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Opcode_MemoryOp::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Opcode_MemoryOp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Opcode_MemoryOp::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Opcode_MemoryOp>(), &Opcode_MemoryOp::ByteSizeLong,
            &Opcode_MemoryOp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_._cached_size_),
        false,
    },
    &Opcode_MemoryOp::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Opcode_MemoryOp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Opcode_MemoryOp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::Opcode_MemoryOp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 block_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Opcode_MemoryOp, _impl_.block_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_.block_id_)}},
    // .acvm.acir.circuit.MemOp op = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_.op_)}},
    // optional .acvm.acir.native.Expression predicate = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_.predicate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 block_id = 1;
    {PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_.block_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .acvm.acir.circuit.MemOp op = 2;
    {PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_.op_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .acvm.acir.native.Expression predicate = 3;
    {PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_.predicate_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::MemOp>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Opcode_MemoryOp::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.Opcode.MemoryOp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.op_ != nullptr);
      _impl_.op_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.predicate_ != nullptr);
      _impl_.predicate_->Clear();
    }
  }
  _impl_.block_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Opcode_MemoryOp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Opcode_MemoryOp& this_ = static_cast<const Opcode_MemoryOp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Opcode_MemoryOp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Opcode_MemoryOp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.Opcode.MemoryOp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 block_id = 1;
          if (this_._internal_block_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_block_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.circuit.MemOp op = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.op_, this_._impl_.op_->GetCachedSize(), target,
                stream);
          }

          // optional .acvm.acir.native.Expression predicate = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.predicate_, this_._impl_.predicate_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.Opcode.MemoryOp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Opcode_MemoryOp::ByteSizeLong(const MessageLite& base) {
          const Opcode_MemoryOp& this_ = static_cast<const Opcode_MemoryOp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Opcode_MemoryOp::ByteSizeLong() const {
          const Opcode_MemoryOp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.Opcode.MemoryOp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .acvm.acir.circuit.MemOp op = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.op_);
            }
            // optional .acvm.acir.native.Expression predicate = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.predicate_);
            }
          }
           {
            // uint32 block_id = 1;
            if (this_._internal_block_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_block_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Opcode_MemoryOp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Opcode_MemoryOp*>(&to_msg);
  auto& from = static_cast<const Opcode_MemoryOp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.Opcode.MemoryOp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.op_ != nullptr);
      if (_this->_impl_.op_ == nullptr) {
        _this->_impl_.op_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::MemOp>(arena, *from._impl_.op_);
      } else {
        _this->_impl_.op_->MergeFrom(*from._impl_.op_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.predicate_ != nullptr);
      if (_this->_impl_.predicate_ == nullptr) {
        _this->_impl_.predicate_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.predicate_);
      } else {
        _this->_impl_.predicate_->MergeFrom(*from._impl_.predicate_);
      }
    }
  }
  if (from._internal_block_id() != 0) {
    _this->_impl_.block_id_ = from._impl_.block_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Opcode_MemoryOp::CopyFrom(const Opcode_MemoryOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.Opcode.MemoryOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Opcode_MemoryOp::InternalSwap(Opcode_MemoryOp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_.block_id_)
      + sizeof(Opcode_MemoryOp::_impl_.block_id_)
      - PROTOBUF_FIELD_OFFSET(Opcode_MemoryOp, _impl_.op_)>(
          reinterpret_cast<char*>(&_impl_.op_),
          reinterpret_cast<char*>(&other->_impl_.op_));
}

::google::protobuf::Metadata Opcode_MemoryOp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Opcode_MemoryInit::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Opcode_MemoryInit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_._has_bits_);
};

void Opcode_MemoryInit::clear_init() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.init_.Clear();
}
Opcode_MemoryInit::Opcode_MemoryInit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.Opcode.MemoryInit)
}
inline PROTOBUF_NDEBUG_INLINE Opcode_MemoryInit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::Opcode_MemoryInit& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        init_{visibility, arena, from.init_} {}

Opcode_MemoryInit::Opcode_MemoryInit(
    ::google::protobuf::Arena* arena,
    const Opcode_MemoryInit& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Opcode_MemoryInit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.block_type_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlockType>(
                              arena, *from._impl_.block_type_)
                        : nullptr;
  _impl_.block_id_ = from._impl_.block_id_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.Opcode.MemoryInit)
}
inline PROTOBUF_NDEBUG_INLINE Opcode_MemoryInit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        init_{visibility, arena} {}

inline void Opcode_MemoryInit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, block_type_),
           0,
           offsetof(Impl_, block_id_) -
               offsetof(Impl_, block_type_) +
               sizeof(Impl_::block_id_));
}
Opcode_MemoryInit::~Opcode_MemoryInit() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.Opcode.MemoryInit)
  SharedDtor(*this);
}
inline void Opcode_MemoryInit::SharedDtor(MessageLite& self) {
  Opcode_MemoryInit& this_ = static_cast<Opcode_MemoryInit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.block_type_;
  this_._impl_.~Impl_();
}

inline void* Opcode_MemoryInit::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Opcode_MemoryInit(arena);
}
constexpr auto Opcode_MemoryInit::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_.init_) +
          decltype(Opcode_MemoryInit::_impl_.init_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Opcode_MemoryInit), alignof(Opcode_MemoryInit), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Opcode_MemoryInit::PlacementNew_,
                                 sizeof(Opcode_MemoryInit),
                                 alignof(Opcode_MemoryInit));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Opcode_MemoryInit::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Opcode_MemoryInit_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Opcode_MemoryInit::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Opcode_MemoryInit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Opcode_MemoryInit::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Opcode_MemoryInit>(), &Opcode_MemoryInit::ByteSizeLong,
            &Opcode_MemoryInit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_._cached_size_),
        false,
    },
    &Opcode_MemoryInit::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Opcode_MemoryInit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Opcode_MemoryInit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::Opcode_MemoryInit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 block_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Opcode_MemoryInit, _impl_.block_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_.block_id_)}},
    // repeated .acvm.acir.native.Witness init = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_.init_)}},
    // .acvm.acir.circuit.BlockType block_type = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_.block_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 block_id = 1;
    {PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_.block_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .acvm.acir.native.Witness init = 2;
    {PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_.init_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlockType block_type = 3;
    {PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_.block_type_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlockType>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Opcode_MemoryInit::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.Opcode.MemoryInit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.init_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.block_type_ != nullptr);
    _impl_.block_type_->Clear();
  }
  _impl_.block_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Opcode_MemoryInit::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Opcode_MemoryInit& this_ = static_cast<const Opcode_MemoryInit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Opcode_MemoryInit::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Opcode_MemoryInit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.Opcode.MemoryInit)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 block_id = 1;
          if (this_._internal_block_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_block_id(), target);
          }

          // repeated .acvm.acir.native.Witness init = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_init_size());
               i < n; i++) {
            const auto& repfield = this_._internal_init().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.circuit.BlockType block_type = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.block_type_, this_._impl_.block_type_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.Opcode.MemoryInit)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Opcode_MemoryInit::ByteSizeLong(const MessageLite& base) {
          const Opcode_MemoryInit& this_ = static_cast<const Opcode_MemoryInit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Opcode_MemoryInit::ByteSizeLong() const {
          const Opcode_MemoryInit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.Opcode.MemoryInit)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.native.Witness init = 2;
            {
              total_size += 1UL * this_._internal_init_size();
              for (const auto& msg : this_._internal_init()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .acvm.acir.circuit.BlockType block_type = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.block_type_);
            }
          }
           {
            // uint32 block_id = 1;
            if (this_._internal_block_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_block_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Opcode_MemoryInit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Opcode_MemoryInit*>(&to_msg);
  auto& from = static_cast<const Opcode_MemoryInit&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.Opcode.MemoryInit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_init()->MergeFrom(
      from._internal_init());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.block_type_ != nullptr);
    if (_this->_impl_.block_type_ == nullptr) {
      _this->_impl_.block_type_ =
          ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlockType>(arena, *from._impl_.block_type_);
    } else {
      _this->_impl_.block_type_->MergeFrom(*from._impl_.block_type_);
    }
  }
  if (from._internal_block_id() != 0) {
    _this->_impl_.block_id_ = from._impl_.block_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Opcode_MemoryInit::CopyFrom(const Opcode_MemoryInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.Opcode.MemoryInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Opcode_MemoryInit::InternalSwap(Opcode_MemoryInit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.init_.InternalSwap(&other->_impl_.init_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_.block_id_)
      + sizeof(Opcode_MemoryInit::_impl_.block_id_)
      - PROTOBUF_FIELD_OFFSET(Opcode_MemoryInit, _impl_.block_type_)>(
          reinterpret_cast<char*>(&_impl_.block_type_),
          reinterpret_cast<char*>(&other->_impl_.block_type_));
}

::google::protobuf::Metadata Opcode_MemoryInit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Opcode_BrilligCall::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Opcode_BrilligCall>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_._has_bits_);
};

void Opcode_BrilligCall::clear_predicate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.predicate_ != nullptr) _impl_.predicate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Opcode_BrilligCall::Opcode_BrilligCall(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.Opcode.BrilligCall)
}
inline PROTOBUF_NDEBUG_INLINE Opcode_BrilligCall::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::Opcode_BrilligCall& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        inputs_{visibility, arena, from.inputs_},
        outputs_{visibility, arena, from.outputs_} {}

Opcode_BrilligCall::Opcode_BrilligCall(
    ::google::protobuf::Arena* arena,
    const Opcode_BrilligCall& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Opcode_BrilligCall* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.predicate_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(
                              arena, *from._impl_.predicate_)
                        : nullptr;
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.Opcode.BrilligCall)
}
inline PROTOBUF_NDEBUG_INLINE Opcode_BrilligCall::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        inputs_{visibility, arena},
        outputs_{visibility, arena} {}

inline void Opcode_BrilligCall::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, predicate_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, predicate_) +
               sizeof(Impl_::id_));
}
Opcode_BrilligCall::~Opcode_BrilligCall() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.Opcode.BrilligCall)
  SharedDtor(*this);
}
inline void Opcode_BrilligCall::SharedDtor(MessageLite& self) {
  Opcode_BrilligCall& this_ = static_cast<Opcode_BrilligCall&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.predicate_;
  this_._impl_.~Impl_();
}

inline void* Opcode_BrilligCall::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Opcode_BrilligCall(arena);
}
constexpr auto Opcode_BrilligCall::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.inputs_) +
          decltype(Opcode_BrilligCall::_impl_.inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.outputs_) +
          decltype(Opcode_BrilligCall::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Opcode_BrilligCall), alignof(Opcode_BrilligCall), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Opcode_BrilligCall::PlacementNew_,
                                 sizeof(Opcode_BrilligCall),
                                 alignof(Opcode_BrilligCall));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Opcode_BrilligCall::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Opcode_BrilligCall_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Opcode_BrilligCall::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Opcode_BrilligCall>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Opcode_BrilligCall::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Opcode_BrilligCall>(), &Opcode_BrilligCall::ByteSizeLong,
            &Opcode_BrilligCall::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_._cached_size_),
        false,
    },
    &Opcode_BrilligCall::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Opcode_BrilligCall::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2> Opcode_BrilligCall::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::Opcode_BrilligCall>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .acvm.acir.native.Expression predicate = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 2, PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.predicate_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Opcode_BrilligCall, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.id_)}},
    // repeated .acvm.acir.circuit.BrilligInputs inputs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.inputs_)}},
    // repeated .acvm.acir.circuit.BrilligOutputs outputs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.outputs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .acvm.acir.circuit.BrilligInputs inputs = 2;
    {PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.inputs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.BrilligOutputs outputs = 3;
    {PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.outputs_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .acvm.acir.native.Expression predicate = 4;
    {PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.predicate_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BrilligInputs>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BrilligOutputs>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Opcode_BrilligCall::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.Opcode.BrilligCall)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.outputs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.predicate_ != nullptr);
    _impl_.predicate_->Clear();
  }
  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Opcode_BrilligCall::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Opcode_BrilligCall& this_ = static_cast<const Opcode_BrilligCall&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Opcode_BrilligCall::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Opcode_BrilligCall& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.Opcode.BrilligCall)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // repeated .acvm.acir.circuit.BrilligInputs inputs = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.BrilligOutputs outputs = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .acvm.acir.native.Expression predicate = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.predicate_, this_._impl_.predicate_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.Opcode.BrilligCall)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Opcode_BrilligCall::ByteSizeLong(const MessageLite& base) {
          const Opcode_BrilligCall& this_ = static_cast<const Opcode_BrilligCall&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Opcode_BrilligCall::ByteSizeLong() const {
          const Opcode_BrilligCall& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.Opcode.BrilligCall)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.BrilligInputs inputs = 2;
            {
              total_size += 1UL * this_._internal_inputs_size();
              for (const auto& msg : this_._internal_inputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.BrilligOutputs outputs = 3;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // optional .acvm.acir.native.Expression predicate = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.predicate_);
            }
          }
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Opcode_BrilligCall::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Opcode_BrilligCall*>(&to_msg);
  auto& from = static_cast<const Opcode_BrilligCall&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.Opcode.BrilligCall)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inputs()->MergeFrom(
      from._internal_inputs());
  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.predicate_ != nullptr);
    if (_this->_impl_.predicate_ == nullptr) {
      _this->_impl_.predicate_ =
          ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.predicate_);
    } else {
      _this->_impl_.predicate_->MergeFrom(*from._impl_.predicate_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Opcode_BrilligCall::CopyFrom(const Opcode_BrilligCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.Opcode.BrilligCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Opcode_BrilligCall::InternalSwap(Opcode_BrilligCall* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.id_)
      + sizeof(Opcode_BrilligCall::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(Opcode_BrilligCall, _impl_.predicate_)>(
          reinterpret_cast<char*>(&_impl_.predicate_),
          reinterpret_cast<char*>(&other->_impl_.predicate_));
}

::google::protobuf::Metadata Opcode_BrilligCall::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Opcode_Call::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Opcode_Call>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_._has_bits_);
};

void Opcode_Call::clear_inputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputs_.Clear();
}
void Opcode_Call::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
void Opcode_Call::clear_predicate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.predicate_ != nullptr) _impl_.predicate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Opcode_Call::Opcode_Call(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.Opcode.Call)
}
inline PROTOBUF_NDEBUG_INLINE Opcode_Call::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::Opcode_Call& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        inputs_{visibility, arena, from.inputs_},
        outputs_{visibility, arena, from.outputs_} {}

Opcode_Call::Opcode_Call(
    ::google::protobuf::Arena* arena,
    const Opcode_Call& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Opcode_Call* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.predicate_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(
                              arena, *from._impl_.predicate_)
                        : nullptr;
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.Opcode.Call)
}
inline PROTOBUF_NDEBUG_INLINE Opcode_Call::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        inputs_{visibility, arena},
        outputs_{visibility, arena} {}

inline void Opcode_Call::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, predicate_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, predicate_) +
               sizeof(Impl_::id_));
}
Opcode_Call::~Opcode_Call() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.Opcode.Call)
  SharedDtor(*this);
}
inline void Opcode_Call::SharedDtor(MessageLite& self) {
  Opcode_Call& this_ = static_cast<Opcode_Call&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.predicate_;
  this_._impl_.~Impl_();
}

inline void* Opcode_Call::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Opcode_Call(arena);
}
constexpr auto Opcode_Call::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.inputs_) +
          decltype(Opcode_Call::_impl_.inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.outputs_) +
          decltype(Opcode_Call::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Opcode_Call), alignof(Opcode_Call), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Opcode_Call::PlacementNew_,
                                 sizeof(Opcode_Call),
                                 alignof(Opcode_Call));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Opcode_Call::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Opcode_Call_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Opcode_Call::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Opcode_Call>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Opcode_Call::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Opcode_Call>(), &Opcode_Call::ByteSizeLong,
            &Opcode_Call::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_._cached_size_),
        false,
    },
    &Opcode_Call::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Opcode_Call::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2> Opcode_Call::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::Opcode_Call>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .acvm.acir.native.Expression predicate = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 2, PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.predicate_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Opcode_Call, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.id_)}},
    // repeated .acvm.acir.native.Witness inputs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.inputs_)}},
    // repeated .acvm.acir.native.Witness outputs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.outputs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .acvm.acir.native.Witness inputs = 2;
    {PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.inputs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness outputs = 3;
    {PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.outputs_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .acvm.acir.native.Expression predicate = 4;
    {PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.predicate_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Opcode_Call::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.Opcode.Call)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.outputs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.predicate_ != nullptr);
    _impl_.predicate_->Clear();
  }
  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Opcode_Call::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Opcode_Call& this_ = static_cast<const Opcode_Call&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Opcode_Call::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Opcode_Call& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.Opcode.Call)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // repeated .acvm.acir.native.Witness inputs = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness outputs = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .acvm.acir.native.Expression predicate = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.predicate_, this_._impl_.predicate_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.Opcode.Call)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Opcode_Call::ByteSizeLong(const MessageLite& base) {
          const Opcode_Call& this_ = static_cast<const Opcode_Call&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Opcode_Call::ByteSizeLong() const {
          const Opcode_Call& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.Opcode.Call)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.native.Witness inputs = 2;
            {
              total_size += 1UL * this_._internal_inputs_size();
              for (const auto& msg : this_._internal_inputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness outputs = 3;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // optional .acvm.acir.native.Expression predicate = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.predicate_);
            }
          }
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Opcode_Call::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Opcode_Call*>(&to_msg);
  auto& from = static_cast<const Opcode_Call&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.Opcode.Call)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inputs()->MergeFrom(
      from._internal_inputs());
  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.predicate_ != nullptr);
    if (_this->_impl_.predicate_ == nullptr) {
      _this->_impl_.predicate_ =
          ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.predicate_);
    } else {
      _this->_impl_.predicate_->MergeFrom(*from._impl_.predicate_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Opcode_Call::CopyFrom(const Opcode_Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.Opcode.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Opcode_Call::InternalSwap(Opcode_Call* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.id_)
      + sizeof(Opcode_Call::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(Opcode_Call, _impl_.predicate_)>(
          reinterpret_cast<char*>(&_impl_.predicate_),
          reinterpret_cast<char*>(&other->_impl_.predicate_));
}

::google::protobuf::Metadata Opcode_Call::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Opcode::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::Opcode, _impl_._oneof_case_);
};

void Opcode::set_allocated_assert_zero(::acvm::acir::native::Expression* assert_zero) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (assert_zero) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(assert_zero)->GetArena();
    if (message_arena != submessage_arena) {
      assert_zero = ::google::protobuf::internal::GetOwnedMessage(message_arena, assert_zero, submessage_arena);
    }
    set_has_assert_zero();
    _impl_.value_.assert_zero_ = assert_zero;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.Opcode.assert_zero)
}
void Opcode::clear_assert_zero() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kAssertZero) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.assert_zero_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.assert_zero_);
    }
    clear_has_value();
  }
}
void Opcode::set_allocated_blackbox_func_call(::acvm::acir::circuit::BlackBoxFuncCall* blackbox_func_call) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (blackbox_func_call) {
    ::google::protobuf::Arena* submessage_arena = blackbox_func_call->GetArena();
    if (message_arena != submessage_arena) {
      blackbox_func_call = ::google::protobuf::internal::GetOwnedMessage(message_arena, blackbox_func_call, submessage_arena);
    }
    set_has_blackbox_func_call();
    _impl_.value_.blackbox_func_call_ = blackbox_func_call;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.Opcode.blackbox_func_call)
}
void Opcode::set_allocated_memory_op(::acvm::acir::circuit::Opcode_MemoryOp* memory_op) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (memory_op) {
    ::google::protobuf::Arena* submessage_arena = memory_op->GetArena();
    if (message_arena != submessage_arena) {
      memory_op = ::google::protobuf::internal::GetOwnedMessage(message_arena, memory_op, submessage_arena);
    }
    set_has_memory_op();
    _impl_.value_.memory_op_ = memory_op;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.Opcode.memory_op)
}
void Opcode::set_allocated_memory_init(::acvm::acir::circuit::Opcode_MemoryInit* memory_init) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (memory_init) {
    ::google::protobuf::Arena* submessage_arena = memory_init->GetArena();
    if (message_arena != submessage_arena) {
      memory_init = ::google::protobuf::internal::GetOwnedMessage(message_arena, memory_init, submessage_arena);
    }
    set_has_memory_init();
    _impl_.value_.memory_init_ = memory_init;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.Opcode.memory_init)
}
void Opcode::set_allocated_brillig_call(::acvm::acir::circuit::Opcode_BrilligCall* brillig_call) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (brillig_call) {
    ::google::protobuf::Arena* submessage_arena = brillig_call->GetArena();
    if (message_arena != submessage_arena) {
      brillig_call = ::google::protobuf::internal::GetOwnedMessage(message_arena, brillig_call, submessage_arena);
    }
    set_has_brillig_call();
    _impl_.value_.brillig_call_ = brillig_call;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.Opcode.brillig_call)
}
void Opcode::set_allocated_call(::acvm::acir::circuit::Opcode_Call* call) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (call) {
    ::google::protobuf::Arena* submessage_arena = call->GetArena();
    if (message_arena != submessage_arena) {
      call = ::google::protobuf::internal::GetOwnedMessage(message_arena, call, submessage_arena);
    }
    set_has_call();
    _impl_.value_.call_ = call;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.Opcode.call)
}
Opcode::Opcode(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.Opcode)
}
inline PROTOBUF_NDEBUG_INLINE Opcode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::Opcode& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Opcode::Opcode(
    ::google::protobuf::Arena* arena,
    const Opcode& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Opcode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kAssertZero:
        _impl_.value_.assert_zero_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.value_.assert_zero_);
        break;
      case kBlackboxFuncCall:
        _impl_.value_.blackbox_func_call_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall>(arena, *from._impl_.value_.blackbox_func_call_);
        break;
      case kMemoryOp:
        _impl_.value_.memory_op_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::Opcode_MemoryOp>(arena, *from._impl_.value_.memory_op_);
        break;
      case kMemoryInit:
        _impl_.value_.memory_init_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::Opcode_MemoryInit>(arena, *from._impl_.value_.memory_init_);
        break;
      case kBrilligCall:
        _impl_.value_.brillig_call_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::Opcode_BrilligCall>(arena, *from._impl_.value_.brillig_call_);
        break;
      case kCall:
        _impl_.value_.call_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::Opcode_Call>(arena, *from._impl_.value_.call_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.Opcode)
}
inline PROTOBUF_NDEBUG_INLINE Opcode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Opcode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Opcode::~Opcode() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.Opcode)
  SharedDtor(*this);
}
inline void Opcode::SharedDtor(MessageLite& self) {
  Opcode& this_ = static_cast<Opcode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void Opcode::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:acvm.acir.circuit.Opcode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kAssertZero: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.assert_zero_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.assert_zero_);
      }
      break;
    }
    case kBlackboxFuncCall: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.blackbox_func_call_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.blackbox_func_call_);
      }
      break;
    }
    case kMemoryOp: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.memory_op_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.memory_op_);
      }
      break;
    }
    case kMemoryInit: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.memory_init_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.memory_init_);
      }
      break;
    }
    case kBrilligCall: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.brillig_call_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.brillig_call_);
      }
      break;
    }
    case kCall: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.call_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.call_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* Opcode::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Opcode(arena);
}
constexpr auto Opcode::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Opcode),
                                            alignof(Opcode));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Opcode::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Opcode_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Opcode::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Opcode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Opcode::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Opcode>(), &Opcode::ByteSizeLong,
            &Opcode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Opcode, _impl_._cached_size_),
        false,
    },
    &Opcode::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Opcode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 6, 6, 0, 2> Opcode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::Opcode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.native.Expression assert_zero = 1;
    {PROTOBUF_FIELD_OFFSET(Opcode, _impl_.value_.assert_zero_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall blackbox_func_call = 2;
    {PROTOBUF_FIELD_OFFSET(Opcode, _impl_.value_.blackbox_func_call_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.Opcode.MemoryOp memory_op = 3;
    {PROTOBUF_FIELD_OFFSET(Opcode, _impl_.value_.memory_op_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.Opcode.MemoryInit memory_init = 4;
    {PROTOBUF_FIELD_OFFSET(Opcode, _impl_.value_.memory_init_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.Opcode.BrilligCall brillig_call = 5;
    {PROTOBUF_FIELD_OFFSET(Opcode, _impl_.value_.brillig_call_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.Opcode.Call call = 6;
    {PROTOBUF_FIELD_OFFSET(Opcode, _impl_.value_.call_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::Opcode_MemoryOp>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::Opcode_MemoryInit>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::Opcode_BrilligCall>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::Opcode_Call>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Opcode::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.Opcode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Opcode::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Opcode& this_ = static_cast<const Opcode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Opcode::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Opcode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.Opcode)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kAssertZero: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.value_.assert_zero_, this_._impl_.value_.assert_zero_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBlackboxFuncCall: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.value_.blackbox_func_call_, this_._impl_.value_.blackbox_func_call_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMemoryOp: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.value_.memory_op_, this_._impl_.value_.memory_op_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMemoryInit: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.value_.memory_init_, this_._impl_.value_.memory_init_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBrilligCall: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.value_.brillig_call_, this_._impl_.value_.brillig_call_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCall: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.value_.call_, this_._impl_.value_.call_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.Opcode)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Opcode::ByteSizeLong(const MessageLite& base) {
          const Opcode& this_ = static_cast<const Opcode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Opcode::ByteSizeLong() const {
          const Opcode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.Opcode)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // .acvm.acir.native.Expression assert_zero = 1;
            case kAssertZero: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.assert_zero_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall blackbox_func_call = 2;
            case kBlackboxFuncCall: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.blackbox_func_call_);
              break;
            }
            // .acvm.acir.circuit.Opcode.MemoryOp memory_op = 3;
            case kMemoryOp: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.memory_op_);
              break;
            }
            // .acvm.acir.circuit.Opcode.MemoryInit memory_init = 4;
            case kMemoryInit: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.memory_init_);
              break;
            }
            // .acvm.acir.circuit.Opcode.BrilligCall brillig_call = 5;
            case kBrilligCall: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.brillig_call_);
              break;
            }
            // .acvm.acir.circuit.Opcode.Call call = 6;
            case kCall: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.call_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Opcode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Opcode*>(&to_msg);
  auto& from = static_cast<const Opcode&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.Opcode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAssertZero: {
        if (oneof_needs_init) {
          _this->_impl_.value_.assert_zero_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.value_.assert_zero_);
        } else {
          _this->_impl_.value_.assert_zero_->MergeFrom(from._internal_assert_zero());
        }
        break;
      }
      case kBlackboxFuncCall: {
        if (oneof_needs_init) {
          _this->_impl_.value_.blackbox_func_call_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall>(arena, *from._impl_.value_.blackbox_func_call_);
        } else {
          _this->_impl_.value_.blackbox_func_call_->MergeFrom(from._internal_blackbox_func_call());
        }
        break;
      }
      case kMemoryOp: {
        if (oneof_needs_init) {
          _this->_impl_.value_.memory_op_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::Opcode_MemoryOp>(arena, *from._impl_.value_.memory_op_);
        } else {
          _this->_impl_.value_.memory_op_->MergeFrom(from._internal_memory_op());
        }
        break;
      }
      case kMemoryInit: {
        if (oneof_needs_init) {
          _this->_impl_.value_.memory_init_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::Opcode_MemoryInit>(arena, *from._impl_.value_.memory_init_);
        } else {
          _this->_impl_.value_.memory_init_->MergeFrom(from._internal_memory_init());
        }
        break;
      }
      case kBrilligCall: {
        if (oneof_needs_init) {
          _this->_impl_.value_.brillig_call_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::Opcode_BrilligCall>(arena, *from._impl_.value_.brillig_call_);
        } else {
          _this->_impl_.value_.brillig_call_->MergeFrom(from._internal_brillig_call());
        }
        break;
      }
      case kCall: {
        if (oneof_needs_init) {
          _this->_impl_.value_.call_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::Opcode_Call>(arena, *from._impl_.value_.call_);
        } else {
          _this->_impl_.value_.call_->MergeFrom(from._internal_call());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Opcode::CopyFrom(const Opcode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.Opcode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Opcode::InternalSwap(Opcode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Opcode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_AES128Encrypt::_Internal {
 public:
};

void BlackBoxFuncCall_AES128Encrypt::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
BlackBoxFuncCall_AES128Encrypt::BlackBoxFuncCall_AES128Encrypt(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_AES128Encrypt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt& from_msg)
      : inputs_{visibility, arena, from.inputs_},
        iv_{visibility, arena, from.iv_},
        key_{visibility, arena, from.key_},
        outputs_{visibility, arena, from.outputs_},
        _cached_size_{0} {}

BlackBoxFuncCall_AES128Encrypt::BlackBoxFuncCall_AES128Encrypt(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_AES128Encrypt& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_AES128Encrypt* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_AES128Encrypt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inputs_{visibility, arena},
        iv_{visibility, arena},
        key_{visibility, arena},
        outputs_{visibility, arena},
        _cached_size_{0} {}

inline void BlackBoxFuncCall_AES128Encrypt::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlackBoxFuncCall_AES128Encrypt::~BlackBoxFuncCall_AES128Encrypt() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_AES128Encrypt::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_AES128Encrypt& this_ = static_cast<BlackBoxFuncCall_AES128Encrypt&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_AES128Encrypt::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_AES128Encrypt(arena);
}
constexpr auto BlackBoxFuncCall_AES128Encrypt::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.inputs_) +
          decltype(BlackBoxFuncCall_AES128Encrypt::_impl_.inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.iv_) +
          decltype(BlackBoxFuncCall_AES128Encrypt::_impl_.iv_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.key_) +
          decltype(BlackBoxFuncCall_AES128Encrypt::_impl_.key_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.outputs_) +
          decltype(BlackBoxFuncCall_AES128Encrypt::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_AES128Encrypt), alignof(BlackBoxFuncCall_AES128Encrypt), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_AES128Encrypt::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_AES128Encrypt),
                                 alignof(BlackBoxFuncCall_AES128Encrypt));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_AES128Encrypt::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_AES128Encrypt_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_AES128Encrypt::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_AES128Encrypt>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_AES128Encrypt::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_AES128Encrypt>(), &BlackBoxFuncCall_AES128Encrypt::ByteSizeLong,
            &BlackBoxFuncCall_AES128Encrypt::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_AES128Encrypt::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_AES128Encrypt::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> BlackBoxFuncCall_AES128Encrypt::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .acvm.acir.native.Witness outputs = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.outputs_)}},
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.inputs_)}},
    // repeated .acvm.acir.circuit.FunctionInput iv = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.iv_)}},
    // repeated .acvm.acir.circuit.FunctionInput key = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput iv = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.iv_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput key = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.key_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness outputs = 4;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AES128Encrypt, _impl_.outputs_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_AES128Encrypt::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.iv_.Clear();
  _impl_.key_.Clear();
  _impl_.outputs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_AES128Encrypt::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_AES128Encrypt& this_ = static_cast<const BlackBoxFuncCall_AES128Encrypt&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_AES128Encrypt::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_AES128Encrypt& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput iv = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_iv_size());
               i < n; i++) {
            const auto& repfield = this_._internal_iv().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput key = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_key_size());
               i < n; i++) {
            const auto& repfield = this_._internal_key().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness outputs = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_AES128Encrypt::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_AES128Encrypt& this_ = static_cast<const BlackBoxFuncCall_AES128Encrypt&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_AES128Encrypt::ByteSizeLong() const {
          const BlackBoxFuncCall_AES128Encrypt& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
            {
              total_size += 1UL * this_._internal_inputs_size();
              for (const auto& msg : this_._internal_inputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput iv = 2;
            {
              total_size += 1UL * this_._internal_iv_size();
              for (const auto& msg : this_._internal_iv()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput key = 3;
            {
              total_size += 1UL * this_._internal_key_size();
              for (const auto& msg : this_._internal_key()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness outputs = 4;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_AES128Encrypt::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_AES128Encrypt*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_AES128Encrypt&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inputs()->MergeFrom(
      from._internal_inputs());
  _this->_internal_mutable_iv()->MergeFrom(
      from._internal_iv());
  _this->_internal_mutable_key()->MergeFrom(
      from._internal_key());
  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_AES128Encrypt::CopyFrom(const BlackBoxFuncCall_AES128Encrypt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_AES128Encrypt::InternalSwap(BlackBoxFuncCall_AES128Encrypt* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.iv_.InternalSwap(&other->_impl_.iv_);
  _impl_.key_.InternalSwap(&other->_impl_.key_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
}

::google::protobuf::Metadata BlackBoxFuncCall_AES128Encrypt::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_AND::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlackBoxFuncCall_AND>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_._has_bits_);
};

void BlackBoxFuncCall_AND::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.output_ != nullptr) _impl_.output_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
BlackBoxFuncCall_AND::BlackBoxFuncCall_AND(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.AND)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_AND::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_AND& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BlackBoxFuncCall_AND::BlackBoxFuncCall_AND(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_AND& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_AND* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lhs_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(
                              arena, *from._impl_.lhs_)
                        : nullptr;
  _impl_.rhs_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(
                              arena, *from._impl_.rhs_)
                        : nullptr;
  _impl_.output_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(
                              arena, *from._impl_.output_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.AND)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_AND::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlackBoxFuncCall_AND::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lhs_),
           0,
           offsetof(Impl_, output_) -
               offsetof(Impl_, lhs_) +
               sizeof(Impl_::output_));
}
BlackBoxFuncCall_AND::~BlackBoxFuncCall_AND() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.AND)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_AND::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_AND& this_ = static_cast<BlackBoxFuncCall_AND&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.lhs_;
  delete this_._impl_.rhs_;
  delete this_._impl_.output_;
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_AND::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_AND(arena);
}
constexpr auto BlackBoxFuncCall_AND::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlackBoxFuncCall_AND),
                                            alignof(BlackBoxFuncCall_AND));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_AND::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_AND_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_AND::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_AND>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_AND::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_AND>(), &BlackBoxFuncCall_AND::ByteSizeLong,
            &BlackBoxFuncCall_AND::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_AND::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_AND::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> BlackBoxFuncCall_AND::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_AND>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .acvm.acir.circuit.FunctionInput lhs = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_.lhs_)}},
    // .acvm.acir.circuit.FunctionInput rhs = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_.rhs_)}},
    // .acvm.acir.native.Witness output = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_.output_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.circuit.FunctionInput lhs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_.lhs_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.FunctionInput rhs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_.rhs_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Witness output = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_.output_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_AND::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.AND)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.lhs_ != nullptr);
      _impl_.lhs_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rhs_ != nullptr);
      _impl_.rhs_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.output_ != nullptr);
      _impl_.output_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_AND::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_AND& this_ = static_cast<const BlackBoxFuncCall_AND&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_AND::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_AND& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.AND)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.circuit.FunctionInput lhs = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.lhs_, this_._impl_.lhs_->GetCachedSize(), target,
                stream);
          }

          // .acvm.acir.circuit.FunctionInput rhs = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.rhs_, this_._impl_.rhs_->GetCachedSize(), target,
                stream);
          }

          // .acvm.acir.native.Witness output = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.output_, this_._impl_.output_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.AND)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_AND::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_AND& this_ = static_cast<const BlackBoxFuncCall_AND&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_AND::ByteSizeLong() const {
          const BlackBoxFuncCall_AND& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.AND)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .acvm.acir.circuit.FunctionInput lhs = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lhs_);
            }
            // .acvm.acir.circuit.FunctionInput rhs = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rhs_);
            }
            // .acvm.acir.native.Witness output = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.output_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_AND::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_AND*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_AND&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.AND)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.lhs_ != nullptr);
      if (_this->_impl_.lhs_ == nullptr) {
        _this->_impl_.lhs_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(arena, *from._impl_.lhs_);
      } else {
        _this->_impl_.lhs_->MergeFrom(*from._impl_.lhs_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rhs_ != nullptr);
      if (_this->_impl_.rhs_ == nullptr) {
        _this->_impl_.rhs_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(arena, *from._impl_.rhs_);
      } else {
        _this->_impl_.rhs_->MergeFrom(*from._impl_.rhs_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.output_ != nullptr);
      if (_this->_impl_.output_ == nullptr) {
        _this->_impl_.output_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.output_);
      } else {
        _this->_impl_.output_->MergeFrom(*from._impl_.output_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_AND::CopyFrom(const BlackBoxFuncCall_AND& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.AND)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_AND::InternalSwap(BlackBoxFuncCall_AND* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_.output_)
      + sizeof(BlackBoxFuncCall_AND::_impl_.output_)
      - PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_AND, _impl_.lhs_)>(
          reinterpret_cast<char*>(&_impl_.lhs_),
          reinterpret_cast<char*>(&other->_impl_.lhs_));
}

::google::protobuf::Metadata BlackBoxFuncCall_AND::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_XOR::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlackBoxFuncCall_XOR>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_._has_bits_);
};

void BlackBoxFuncCall_XOR::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.output_ != nullptr) _impl_.output_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
BlackBoxFuncCall_XOR::BlackBoxFuncCall_XOR(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.XOR)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_XOR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_XOR& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BlackBoxFuncCall_XOR::BlackBoxFuncCall_XOR(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_XOR& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_XOR* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lhs_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(
                              arena, *from._impl_.lhs_)
                        : nullptr;
  _impl_.rhs_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(
                              arena, *from._impl_.rhs_)
                        : nullptr;
  _impl_.output_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(
                              arena, *from._impl_.output_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.XOR)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_XOR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlackBoxFuncCall_XOR::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lhs_),
           0,
           offsetof(Impl_, output_) -
               offsetof(Impl_, lhs_) +
               sizeof(Impl_::output_));
}
BlackBoxFuncCall_XOR::~BlackBoxFuncCall_XOR() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.XOR)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_XOR::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_XOR& this_ = static_cast<BlackBoxFuncCall_XOR&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.lhs_;
  delete this_._impl_.rhs_;
  delete this_._impl_.output_;
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_XOR::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_XOR(arena);
}
constexpr auto BlackBoxFuncCall_XOR::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlackBoxFuncCall_XOR),
                                            alignof(BlackBoxFuncCall_XOR));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_XOR::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_XOR_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_XOR::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_XOR>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_XOR::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_XOR>(), &BlackBoxFuncCall_XOR::ByteSizeLong,
            &BlackBoxFuncCall_XOR::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_XOR::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_XOR::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> BlackBoxFuncCall_XOR::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_XOR>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .acvm.acir.circuit.FunctionInput lhs = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_.lhs_)}},
    // .acvm.acir.circuit.FunctionInput rhs = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_.rhs_)}},
    // .acvm.acir.native.Witness output = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_.output_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.circuit.FunctionInput lhs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_.lhs_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.FunctionInput rhs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_.rhs_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Witness output = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_.output_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_XOR::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.XOR)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.lhs_ != nullptr);
      _impl_.lhs_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rhs_ != nullptr);
      _impl_.rhs_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.output_ != nullptr);
      _impl_.output_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_XOR::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_XOR& this_ = static_cast<const BlackBoxFuncCall_XOR&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_XOR::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_XOR& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.XOR)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.circuit.FunctionInput lhs = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.lhs_, this_._impl_.lhs_->GetCachedSize(), target,
                stream);
          }

          // .acvm.acir.circuit.FunctionInput rhs = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.rhs_, this_._impl_.rhs_->GetCachedSize(), target,
                stream);
          }

          // .acvm.acir.native.Witness output = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.output_, this_._impl_.output_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.XOR)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_XOR::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_XOR& this_ = static_cast<const BlackBoxFuncCall_XOR&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_XOR::ByteSizeLong() const {
          const BlackBoxFuncCall_XOR& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.XOR)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .acvm.acir.circuit.FunctionInput lhs = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lhs_);
            }
            // .acvm.acir.circuit.FunctionInput rhs = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rhs_);
            }
            // .acvm.acir.native.Witness output = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.output_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_XOR::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_XOR*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_XOR&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.XOR)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.lhs_ != nullptr);
      if (_this->_impl_.lhs_ == nullptr) {
        _this->_impl_.lhs_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(arena, *from._impl_.lhs_);
      } else {
        _this->_impl_.lhs_->MergeFrom(*from._impl_.lhs_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rhs_ != nullptr);
      if (_this->_impl_.rhs_ == nullptr) {
        _this->_impl_.rhs_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(arena, *from._impl_.rhs_);
      } else {
        _this->_impl_.rhs_->MergeFrom(*from._impl_.rhs_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.output_ != nullptr);
      if (_this->_impl_.output_ == nullptr) {
        _this->_impl_.output_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.output_);
      } else {
        _this->_impl_.output_->MergeFrom(*from._impl_.output_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_XOR::CopyFrom(const BlackBoxFuncCall_XOR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.XOR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_XOR::InternalSwap(BlackBoxFuncCall_XOR* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_.output_)
      + sizeof(BlackBoxFuncCall_XOR::_impl_.output_)
      - PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_XOR, _impl_.lhs_)>(
          reinterpret_cast<char*>(&_impl_.lhs_),
          reinterpret_cast<char*>(&other->_impl_.lhs_));
}

::google::protobuf::Metadata BlackBoxFuncCall_XOR::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_RANGE::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlackBoxFuncCall_RANGE>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RANGE, _impl_._has_bits_);
};

BlackBoxFuncCall_RANGE::BlackBoxFuncCall_RANGE(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.RANGE)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_RANGE::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_RANGE& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BlackBoxFuncCall_RANGE::BlackBoxFuncCall_RANGE(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_RANGE& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_RANGE* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.input_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(
                              arena, *from._impl_.input_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.RANGE)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_RANGE::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlackBoxFuncCall_RANGE::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.input_ = {};
}
BlackBoxFuncCall_RANGE::~BlackBoxFuncCall_RANGE() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.RANGE)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_RANGE::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_RANGE& this_ = static_cast<BlackBoxFuncCall_RANGE&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.input_;
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_RANGE::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_RANGE(arena);
}
constexpr auto BlackBoxFuncCall_RANGE::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlackBoxFuncCall_RANGE),
                                            alignof(BlackBoxFuncCall_RANGE));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_RANGE::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_RANGE_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_RANGE::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_RANGE>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_RANGE::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_RANGE>(), &BlackBoxFuncCall_RANGE::ByteSizeLong,
            &BlackBoxFuncCall_RANGE::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RANGE, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_RANGE::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_RANGE::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BlackBoxFuncCall_RANGE::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RANGE, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_RANGE>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .acvm.acir.circuit.FunctionInput input = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RANGE, _impl_.input_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.circuit.FunctionInput input = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RANGE, _impl_.input_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_RANGE::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.RANGE)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.input_ != nullptr);
    _impl_.input_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_RANGE::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_RANGE& this_ = static_cast<const BlackBoxFuncCall_RANGE&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_RANGE::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_RANGE& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.RANGE)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.circuit.FunctionInput input = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.input_, this_._impl_.input_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.RANGE)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_RANGE::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_RANGE& this_ = static_cast<const BlackBoxFuncCall_RANGE&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_RANGE::ByteSizeLong() const {
          const BlackBoxFuncCall_RANGE& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.RANGE)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .acvm.acir.circuit.FunctionInput input = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.input_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_RANGE::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_RANGE*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_RANGE&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.RANGE)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.input_ != nullptr);
    if (_this->_impl_.input_ == nullptr) {
      _this->_impl_.input_ =
          ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(arena, *from._impl_.input_);
    } else {
      _this->_impl_.input_->MergeFrom(*from._impl_.input_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_RANGE::CopyFrom(const BlackBoxFuncCall_RANGE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.RANGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_RANGE::InternalSwap(BlackBoxFuncCall_RANGE* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.input_, other->_impl_.input_);
}

::google::protobuf::Metadata BlackBoxFuncCall_RANGE::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_Blake2s::_Internal {
 public:
};

void BlackBoxFuncCall_Blake2s::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
BlackBoxFuncCall_Blake2s::BlackBoxFuncCall_Blake2s(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.Blake2s)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_Blake2s::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_Blake2s& from_msg)
      : inputs_{visibility, arena, from.inputs_},
        outputs_{visibility, arena, from.outputs_},
        _cached_size_{0} {}

BlackBoxFuncCall_Blake2s::BlackBoxFuncCall_Blake2s(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_Blake2s& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_Blake2s* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.Blake2s)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_Blake2s::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inputs_{visibility, arena},
        outputs_{visibility, arena},
        _cached_size_{0} {}

inline void BlackBoxFuncCall_Blake2s::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlackBoxFuncCall_Blake2s::~BlackBoxFuncCall_Blake2s() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.Blake2s)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_Blake2s::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_Blake2s& this_ = static_cast<BlackBoxFuncCall_Blake2s&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_Blake2s::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_Blake2s(arena);
}
constexpr auto BlackBoxFuncCall_Blake2s::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake2s, _impl_.inputs_) +
          decltype(BlackBoxFuncCall_Blake2s::_impl_.inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake2s, _impl_.outputs_) +
          decltype(BlackBoxFuncCall_Blake2s::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_Blake2s), alignof(BlackBoxFuncCall_Blake2s), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_Blake2s::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_Blake2s),
                                 alignof(BlackBoxFuncCall_Blake2s));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_Blake2s::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_Blake2s_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_Blake2s::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_Blake2s>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_Blake2s::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_Blake2s>(), &BlackBoxFuncCall_Blake2s::ByteSizeLong,
            &BlackBoxFuncCall_Blake2s::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake2s, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_Blake2s::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_Blake2s::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> BlackBoxFuncCall_Blake2s::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_Blake2s>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .acvm.acir.native.Witness outputs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake2s, _impl_.outputs_)}},
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake2s, _impl_.inputs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake2s, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness outputs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake2s, _impl_.outputs_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_Blake2s::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.Blake2s)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.outputs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_Blake2s::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_Blake2s& this_ = static_cast<const BlackBoxFuncCall_Blake2s&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_Blake2s::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_Blake2s& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.Blake2s)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness outputs = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.Blake2s)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_Blake2s::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_Blake2s& this_ = static_cast<const BlackBoxFuncCall_Blake2s&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_Blake2s::ByteSizeLong() const {
          const BlackBoxFuncCall_Blake2s& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.Blake2s)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
            {
              total_size += 1UL * this_._internal_inputs_size();
              for (const auto& msg : this_._internal_inputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness outputs = 2;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_Blake2s::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_Blake2s*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_Blake2s&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.Blake2s)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inputs()->MergeFrom(
      from._internal_inputs());
  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_Blake2s::CopyFrom(const BlackBoxFuncCall_Blake2s& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.Blake2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_Blake2s::InternalSwap(BlackBoxFuncCall_Blake2s* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
}

::google::protobuf::Metadata BlackBoxFuncCall_Blake2s::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_Blake3::_Internal {
 public:
};

void BlackBoxFuncCall_Blake3::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
BlackBoxFuncCall_Blake3::BlackBoxFuncCall_Blake3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.Blake3)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_Blake3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_Blake3& from_msg)
      : inputs_{visibility, arena, from.inputs_},
        outputs_{visibility, arena, from.outputs_},
        _cached_size_{0} {}

BlackBoxFuncCall_Blake3::BlackBoxFuncCall_Blake3(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_Blake3& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_Blake3* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.Blake3)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_Blake3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inputs_{visibility, arena},
        outputs_{visibility, arena},
        _cached_size_{0} {}

inline void BlackBoxFuncCall_Blake3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlackBoxFuncCall_Blake3::~BlackBoxFuncCall_Blake3() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.Blake3)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_Blake3::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_Blake3& this_ = static_cast<BlackBoxFuncCall_Blake3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_Blake3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_Blake3(arena);
}
constexpr auto BlackBoxFuncCall_Blake3::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake3, _impl_.inputs_) +
          decltype(BlackBoxFuncCall_Blake3::_impl_.inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake3, _impl_.outputs_) +
          decltype(BlackBoxFuncCall_Blake3::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_Blake3), alignof(BlackBoxFuncCall_Blake3), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_Blake3::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_Blake3),
                                 alignof(BlackBoxFuncCall_Blake3));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_Blake3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_Blake3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_Blake3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_Blake3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_Blake3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_Blake3>(), &BlackBoxFuncCall_Blake3::ByteSizeLong,
            &BlackBoxFuncCall_Blake3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake3, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_Blake3::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_Blake3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> BlackBoxFuncCall_Blake3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_Blake3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .acvm.acir.native.Witness outputs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake3, _impl_.outputs_)}},
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake3, _impl_.inputs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake3, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness outputs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Blake3, _impl_.outputs_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_Blake3::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.Blake3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.outputs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_Blake3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_Blake3& this_ = static_cast<const BlackBoxFuncCall_Blake3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_Blake3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_Blake3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.Blake3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness outputs = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.Blake3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_Blake3::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_Blake3& this_ = static_cast<const BlackBoxFuncCall_Blake3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_Blake3::ByteSizeLong() const {
          const BlackBoxFuncCall_Blake3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.Blake3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
            {
              total_size += 1UL * this_._internal_inputs_size();
              for (const auto& msg : this_._internal_inputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness outputs = 2;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_Blake3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_Blake3*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_Blake3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.Blake3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inputs()->MergeFrom(
      from._internal_inputs());
  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_Blake3::CopyFrom(const BlackBoxFuncCall_Blake3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.Blake3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_Blake3::InternalSwap(BlackBoxFuncCall_Blake3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
}

::google::protobuf::Metadata BlackBoxFuncCall_Blake3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_EcdsaSecp256k1::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlackBoxFuncCall_EcdsaSecp256k1>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_._has_bits_);
};

void BlackBoxFuncCall_EcdsaSecp256k1::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.output_ != nullptr) _impl_.output_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BlackBoxFuncCall_EcdsaSecp256k1::BlackBoxFuncCall_EcdsaSecp256k1(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_EcdsaSecp256k1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_key_x_{visibility, arena, from.public_key_x_},
        public_key_y_{visibility, arena, from.public_key_y_},
        signature_{visibility, arena, from.signature_},
        hashed_message_{visibility, arena, from.hashed_message_} {}

BlackBoxFuncCall_EcdsaSecp256k1::BlackBoxFuncCall_EcdsaSecp256k1(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_EcdsaSecp256k1& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_EcdsaSecp256k1* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.output_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(
                              arena, *from._impl_.output_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_EcdsaSecp256k1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        public_key_x_{visibility, arena},
        public_key_y_{visibility, arena},
        signature_{visibility, arena},
        hashed_message_{visibility, arena} {}

inline void BlackBoxFuncCall_EcdsaSecp256k1::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.output_ = {};
}
BlackBoxFuncCall_EcdsaSecp256k1::~BlackBoxFuncCall_EcdsaSecp256k1() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_EcdsaSecp256k1::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_EcdsaSecp256k1& this_ = static_cast<BlackBoxFuncCall_EcdsaSecp256k1&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.output_;
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_EcdsaSecp256k1::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_EcdsaSecp256k1(arena);
}
constexpr auto BlackBoxFuncCall_EcdsaSecp256k1::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.public_key_x_) +
          decltype(BlackBoxFuncCall_EcdsaSecp256k1::_impl_.public_key_x_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.public_key_y_) +
          decltype(BlackBoxFuncCall_EcdsaSecp256k1::_impl_.public_key_y_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.signature_) +
          decltype(BlackBoxFuncCall_EcdsaSecp256k1::_impl_.signature_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.hashed_message_) +
          decltype(BlackBoxFuncCall_EcdsaSecp256k1::_impl_.hashed_message_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_EcdsaSecp256k1), alignof(BlackBoxFuncCall_EcdsaSecp256k1), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_EcdsaSecp256k1::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_EcdsaSecp256k1),
                                 alignof(BlackBoxFuncCall_EcdsaSecp256k1));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_EcdsaSecp256k1::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_EcdsaSecp256k1_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_EcdsaSecp256k1::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_EcdsaSecp256k1>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_EcdsaSecp256k1::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_EcdsaSecp256k1>(), &BlackBoxFuncCall_EcdsaSecp256k1::ByteSizeLong,
            &BlackBoxFuncCall_EcdsaSecp256k1::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_EcdsaSecp256k1::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_EcdsaSecp256k1::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> BlackBoxFuncCall_EcdsaSecp256k1::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .acvm.acir.circuit.FunctionInput public_key_x = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.public_key_x_)}},
    // repeated .acvm.acir.circuit.FunctionInput public_key_y = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.public_key_y_)}},
    // repeated .acvm.acir.circuit.FunctionInput signature = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.signature_)}},
    // repeated .acvm.acir.circuit.FunctionInput hashed_message = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.hashed_message_)}},
    // .acvm.acir.native.Witness output = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 4, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.output_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput public_key_x = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.public_key_x_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput public_key_y = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.public_key_y_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput signature = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.signature_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput hashed_message = 4;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.hashed_message_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Witness output = 5;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256k1, _impl_.output_), _Internal::kHasBitsOffset + 0, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_EcdsaSecp256k1::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.public_key_x_.Clear();
  _impl_.public_key_y_.Clear();
  _impl_.signature_.Clear();
  _impl_.hashed_message_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.output_ != nullptr);
    _impl_.output_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_EcdsaSecp256k1::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_EcdsaSecp256k1& this_ = static_cast<const BlackBoxFuncCall_EcdsaSecp256k1&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_EcdsaSecp256k1::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_EcdsaSecp256k1& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput public_key_x = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_public_key_x_size());
               i < n; i++) {
            const auto& repfield = this_._internal_public_key_x().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput public_key_y = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_public_key_y_size());
               i < n; i++) {
            const auto& repfield = this_._internal_public_key_y().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput signature = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_signature_size());
               i < n; i++) {
            const auto& repfield = this_._internal_signature().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput hashed_message = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_hashed_message_size());
               i < n; i++) {
            const auto& repfield = this_._internal_hashed_message().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.native.Witness output = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.output_, this_._impl_.output_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_EcdsaSecp256k1::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_EcdsaSecp256k1& this_ = static_cast<const BlackBoxFuncCall_EcdsaSecp256k1&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_EcdsaSecp256k1::ByteSizeLong() const {
          const BlackBoxFuncCall_EcdsaSecp256k1& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput public_key_x = 1;
            {
              total_size += 1UL * this_._internal_public_key_x_size();
              for (const auto& msg : this_._internal_public_key_x()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput public_key_y = 2;
            {
              total_size += 1UL * this_._internal_public_key_y_size();
              for (const auto& msg : this_._internal_public_key_y()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput signature = 3;
            {
              total_size += 1UL * this_._internal_signature_size();
              for (const auto& msg : this_._internal_signature()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput hashed_message = 4;
            {
              total_size += 1UL * this_._internal_hashed_message_size();
              for (const auto& msg : this_._internal_hashed_message()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .acvm.acir.native.Witness output = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.output_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_EcdsaSecp256k1::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_EcdsaSecp256k1*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_EcdsaSecp256k1&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_public_key_x()->MergeFrom(
      from._internal_public_key_x());
  _this->_internal_mutable_public_key_y()->MergeFrom(
      from._internal_public_key_y());
  _this->_internal_mutable_signature()->MergeFrom(
      from._internal_signature());
  _this->_internal_mutable_hashed_message()->MergeFrom(
      from._internal_hashed_message());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.output_ != nullptr);
    if (_this->_impl_.output_ == nullptr) {
      _this->_impl_.output_ =
          ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.output_);
    } else {
      _this->_impl_.output_->MergeFrom(*from._impl_.output_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_EcdsaSecp256k1::CopyFrom(const BlackBoxFuncCall_EcdsaSecp256k1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_EcdsaSecp256k1::InternalSwap(BlackBoxFuncCall_EcdsaSecp256k1* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.public_key_x_.InternalSwap(&other->_impl_.public_key_x_);
  _impl_.public_key_y_.InternalSwap(&other->_impl_.public_key_y_);
  _impl_.signature_.InternalSwap(&other->_impl_.signature_);
  _impl_.hashed_message_.InternalSwap(&other->_impl_.hashed_message_);
  swap(_impl_.output_, other->_impl_.output_);
}

::google::protobuf::Metadata BlackBoxFuncCall_EcdsaSecp256k1::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_EcdsaSecp256r1::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlackBoxFuncCall_EcdsaSecp256r1>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_._has_bits_);
};

void BlackBoxFuncCall_EcdsaSecp256r1::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.output_ != nullptr) _impl_.output_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BlackBoxFuncCall_EcdsaSecp256r1::BlackBoxFuncCall_EcdsaSecp256r1(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_EcdsaSecp256r1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_key_x_{visibility, arena, from.public_key_x_},
        public_key_y_{visibility, arena, from.public_key_y_},
        signature_{visibility, arena, from.signature_},
        hashed_message_{visibility, arena, from.hashed_message_} {}

BlackBoxFuncCall_EcdsaSecp256r1::BlackBoxFuncCall_EcdsaSecp256r1(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_EcdsaSecp256r1& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_EcdsaSecp256r1* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.output_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(
                              arena, *from._impl_.output_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_EcdsaSecp256r1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        public_key_x_{visibility, arena},
        public_key_y_{visibility, arena},
        signature_{visibility, arena},
        hashed_message_{visibility, arena} {}

inline void BlackBoxFuncCall_EcdsaSecp256r1::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.output_ = {};
}
BlackBoxFuncCall_EcdsaSecp256r1::~BlackBoxFuncCall_EcdsaSecp256r1() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_EcdsaSecp256r1::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_EcdsaSecp256r1& this_ = static_cast<BlackBoxFuncCall_EcdsaSecp256r1&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.output_;
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_EcdsaSecp256r1::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_EcdsaSecp256r1(arena);
}
constexpr auto BlackBoxFuncCall_EcdsaSecp256r1::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.public_key_x_) +
          decltype(BlackBoxFuncCall_EcdsaSecp256r1::_impl_.public_key_x_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.public_key_y_) +
          decltype(BlackBoxFuncCall_EcdsaSecp256r1::_impl_.public_key_y_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.signature_) +
          decltype(BlackBoxFuncCall_EcdsaSecp256r1::_impl_.signature_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.hashed_message_) +
          decltype(BlackBoxFuncCall_EcdsaSecp256r1::_impl_.hashed_message_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_EcdsaSecp256r1), alignof(BlackBoxFuncCall_EcdsaSecp256r1), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_EcdsaSecp256r1::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_EcdsaSecp256r1),
                                 alignof(BlackBoxFuncCall_EcdsaSecp256r1));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_EcdsaSecp256r1::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_EcdsaSecp256r1_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_EcdsaSecp256r1::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_EcdsaSecp256r1>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_EcdsaSecp256r1::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_EcdsaSecp256r1>(), &BlackBoxFuncCall_EcdsaSecp256r1::ByteSizeLong,
            &BlackBoxFuncCall_EcdsaSecp256r1::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_EcdsaSecp256r1::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_EcdsaSecp256r1::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> BlackBoxFuncCall_EcdsaSecp256r1::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .acvm.acir.circuit.FunctionInput public_key_x = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.public_key_x_)}},
    // repeated .acvm.acir.circuit.FunctionInput public_key_y = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.public_key_y_)}},
    // repeated .acvm.acir.circuit.FunctionInput signature = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.signature_)}},
    // repeated .acvm.acir.circuit.FunctionInput hashed_message = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.hashed_message_)}},
    // .acvm.acir.native.Witness output = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 4, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.output_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput public_key_x = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.public_key_x_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput public_key_y = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.public_key_y_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput signature = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.signature_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput hashed_message = 4;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.hashed_message_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Witness output = 5;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EcdsaSecp256r1, _impl_.output_), _Internal::kHasBitsOffset + 0, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_EcdsaSecp256r1::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.public_key_x_.Clear();
  _impl_.public_key_y_.Clear();
  _impl_.signature_.Clear();
  _impl_.hashed_message_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.output_ != nullptr);
    _impl_.output_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_EcdsaSecp256r1::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_EcdsaSecp256r1& this_ = static_cast<const BlackBoxFuncCall_EcdsaSecp256r1&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_EcdsaSecp256r1::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_EcdsaSecp256r1& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput public_key_x = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_public_key_x_size());
               i < n; i++) {
            const auto& repfield = this_._internal_public_key_x().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput public_key_y = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_public_key_y_size());
               i < n; i++) {
            const auto& repfield = this_._internal_public_key_y().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput signature = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_signature_size());
               i < n; i++) {
            const auto& repfield = this_._internal_signature().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput hashed_message = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_hashed_message_size());
               i < n; i++) {
            const auto& repfield = this_._internal_hashed_message().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.native.Witness output = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.output_, this_._impl_.output_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_EcdsaSecp256r1::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_EcdsaSecp256r1& this_ = static_cast<const BlackBoxFuncCall_EcdsaSecp256r1&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_EcdsaSecp256r1::ByteSizeLong() const {
          const BlackBoxFuncCall_EcdsaSecp256r1& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput public_key_x = 1;
            {
              total_size += 1UL * this_._internal_public_key_x_size();
              for (const auto& msg : this_._internal_public_key_x()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput public_key_y = 2;
            {
              total_size += 1UL * this_._internal_public_key_y_size();
              for (const auto& msg : this_._internal_public_key_y()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput signature = 3;
            {
              total_size += 1UL * this_._internal_signature_size();
              for (const auto& msg : this_._internal_signature()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput hashed_message = 4;
            {
              total_size += 1UL * this_._internal_hashed_message_size();
              for (const auto& msg : this_._internal_hashed_message()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .acvm.acir.native.Witness output = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.output_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_EcdsaSecp256r1::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_EcdsaSecp256r1*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_EcdsaSecp256r1&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_public_key_x()->MergeFrom(
      from._internal_public_key_x());
  _this->_internal_mutable_public_key_y()->MergeFrom(
      from._internal_public_key_y());
  _this->_internal_mutable_signature()->MergeFrom(
      from._internal_signature());
  _this->_internal_mutable_hashed_message()->MergeFrom(
      from._internal_hashed_message());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.output_ != nullptr);
    if (_this->_impl_.output_ == nullptr) {
      _this->_impl_.output_ =
          ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.output_);
    } else {
      _this->_impl_.output_->MergeFrom(*from._impl_.output_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_EcdsaSecp256r1::CopyFrom(const BlackBoxFuncCall_EcdsaSecp256r1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_EcdsaSecp256r1::InternalSwap(BlackBoxFuncCall_EcdsaSecp256r1* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.public_key_x_.InternalSwap(&other->_impl_.public_key_x_);
  _impl_.public_key_y_.InternalSwap(&other->_impl_.public_key_y_);
  _impl_.signature_.InternalSwap(&other->_impl_.signature_);
  _impl_.hashed_message_.InternalSwap(&other->_impl_.hashed_message_);
  swap(_impl_.output_, other->_impl_.output_);
}

::google::protobuf::Metadata BlackBoxFuncCall_EcdsaSecp256r1::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_MultiScalarMul::_Internal {
 public:
};

void BlackBoxFuncCall_MultiScalarMul::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
BlackBoxFuncCall_MultiScalarMul::BlackBoxFuncCall_MultiScalarMul(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_MultiScalarMul::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul& from_msg)
      : points_{visibility, arena, from.points_},
        scalars_{visibility, arena, from.scalars_},
        outputs_{visibility, arena, from.outputs_},
        _cached_size_{0} {}

BlackBoxFuncCall_MultiScalarMul::BlackBoxFuncCall_MultiScalarMul(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_MultiScalarMul& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_MultiScalarMul* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_MultiScalarMul::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : points_{visibility, arena},
        scalars_{visibility, arena},
        outputs_{visibility, arena},
        _cached_size_{0} {}

inline void BlackBoxFuncCall_MultiScalarMul::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlackBoxFuncCall_MultiScalarMul::~BlackBoxFuncCall_MultiScalarMul() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_MultiScalarMul::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_MultiScalarMul& this_ = static_cast<BlackBoxFuncCall_MultiScalarMul&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_MultiScalarMul::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_MultiScalarMul(arena);
}
constexpr auto BlackBoxFuncCall_MultiScalarMul::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_MultiScalarMul, _impl_.points_) +
          decltype(BlackBoxFuncCall_MultiScalarMul::_impl_.points_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_MultiScalarMul, _impl_.scalars_) +
          decltype(BlackBoxFuncCall_MultiScalarMul::_impl_.scalars_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_MultiScalarMul, _impl_.outputs_) +
          decltype(BlackBoxFuncCall_MultiScalarMul::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_MultiScalarMul), alignof(BlackBoxFuncCall_MultiScalarMul), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_MultiScalarMul::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_MultiScalarMul),
                                 alignof(BlackBoxFuncCall_MultiScalarMul));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_MultiScalarMul::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_MultiScalarMul_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_MultiScalarMul::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_MultiScalarMul>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_MultiScalarMul::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_MultiScalarMul>(), &BlackBoxFuncCall_MultiScalarMul::ByteSizeLong,
            &BlackBoxFuncCall_MultiScalarMul::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_MultiScalarMul, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_MultiScalarMul::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_MultiScalarMul::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> BlackBoxFuncCall_MultiScalarMul::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .acvm.acir.circuit.FunctionInput points = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_MultiScalarMul, _impl_.points_)}},
    // repeated .acvm.acir.circuit.FunctionInput scalars = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_MultiScalarMul, _impl_.scalars_)}},
    // repeated .acvm.acir.native.Witness outputs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_MultiScalarMul, _impl_.outputs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput points = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_MultiScalarMul, _impl_.points_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput scalars = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_MultiScalarMul, _impl_.scalars_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness outputs = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_MultiScalarMul, _impl_.outputs_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_MultiScalarMul::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  _impl_.scalars_.Clear();
  _impl_.outputs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_MultiScalarMul::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_MultiScalarMul& this_ = static_cast<const BlackBoxFuncCall_MultiScalarMul&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_MultiScalarMul::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_MultiScalarMul& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput points = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_points_size());
               i < n; i++) {
            const auto& repfield = this_._internal_points().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput scalars = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_scalars_size());
               i < n; i++) {
            const auto& repfield = this_._internal_scalars().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness outputs = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_MultiScalarMul::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_MultiScalarMul& this_ = static_cast<const BlackBoxFuncCall_MultiScalarMul&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_MultiScalarMul::ByteSizeLong() const {
          const BlackBoxFuncCall_MultiScalarMul& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput points = 1;
            {
              total_size += 1UL * this_._internal_points_size();
              for (const auto& msg : this_._internal_points()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput scalars = 2;
            {
              total_size += 1UL * this_._internal_scalars_size();
              for (const auto& msg : this_._internal_scalars()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness outputs = 3;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_MultiScalarMul::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_MultiScalarMul*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_MultiScalarMul&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  _this->_internal_mutable_scalars()->MergeFrom(
      from._internal_scalars());
  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_MultiScalarMul::CopyFrom(const BlackBoxFuncCall_MultiScalarMul& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_MultiScalarMul::InternalSwap(BlackBoxFuncCall_MultiScalarMul* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
  _impl_.scalars_.InternalSwap(&other->_impl_.scalars_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
}

::google::protobuf::Metadata BlackBoxFuncCall_MultiScalarMul::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_EmbeddedCurveAdd::_Internal {
 public:
};

void BlackBoxFuncCall_EmbeddedCurveAdd::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
BlackBoxFuncCall_EmbeddedCurveAdd::BlackBoxFuncCall_EmbeddedCurveAdd(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_EmbeddedCurveAdd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd& from_msg)
      : input1_{visibility, arena, from.input1_},
        input2_{visibility, arena, from.input2_},
        outputs_{visibility, arena, from.outputs_},
        _cached_size_{0} {}

BlackBoxFuncCall_EmbeddedCurveAdd::BlackBoxFuncCall_EmbeddedCurveAdd(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_EmbeddedCurveAdd& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_EmbeddedCurveAdd* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_EmbeddedCurveAdd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : input1_{visibility, arena},
        input2_{visibility, arena},
        outputs_{visibility, arena},
        _cached_size_{0} {}

inline void BlackBoxFuncCall_EmbeddedCurveAdd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlackBoxFuncCall_EmbeddedCurveAdd::~BlackBoxFuncCall_EmbeddedCurveAdd() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_EmbeddedCurveAdd::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_EmbeddedCurveAdd& this_ = static_cast<BlackBoxFuncCall_EmbeddedCurveAdd&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_EmbeddedCurveAdd::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_EmbeddedCurveAdd(arena);
}
constexpr auto BlackBoxFuncCall_EmbeddedCurveAdd::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.input1_) +
          decltype(BlackBoxFuncCall_EmbeddedCurveAdd::_impl_.input1_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.input2_) +
          decltype(BlackBoxFuncCall_EmbeddedCurveAdd::_impl_.input2_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.outputs_) +
          decltype(BlackBoxFuncCall_EmbeddedCurveAdd::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_EmbeddedCurveAdd), alignof(BlackBoxFuncCall_EmbeddedCurveAdd), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_EmbeddedCurveAdd::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_EmbeddedCurveAdd),
                                 alignof(BlackBoxFuncCall_EmbeddedCurveAdd));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_EmbeddedCurveAdd::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_EmbeddedCurveAdd_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_EmbeddedCurveAdd::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_EmbeddedCurveAdd>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_EmbeddedCurveAdd::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_EmbeddedCurveAdd>(), &BlackBoxFuncCall_EmbeddedCurveAdd::ByteSizeLong,
            &BlackBoxFuncCall_EmbeddedCurveAdd::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EmbeddedCurveAdd, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_EmbeddedCurveAdd::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_EmbeddedCurveAdd::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> BlackBoxFuncCall_EmbeddedCurveAdd::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .acvm.acir.circuit.FunctionInput input1 = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.input1_)}},
    // repeated .acvm.acir.circuit.FunctionInput input2 = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.input2_)}},
    // repeated .acvm.acir.native.Witness outputs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.outputs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput input1 = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.input1_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput input2 = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.input2_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness outputs = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_EmbeddedCurveAdd, _impl_.outputs_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_EmbeddedCurveAdd::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input1_.Clear();
  _impl_.input2_.Clear();
  _impl_.outputs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_EmbeddedCurveAdd::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_EmbeddedCurveAdd& this_ = static_cast<const BlackBoxFuncCall_EmbeddedCurveAdd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_EmbeddedCurveAdd::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_EmbeddedCurveAdd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput input1 = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_input1_size());
               i < n; i++) {
            const auto& repfield = this_._internal_input1().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput input2 = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_input2_size());
               i < n; i++) {
            const auto& repfield = this_._internal_input2().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness outputs = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_EmbeddedCurveAdd::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_EmbeddedCurveAdd& this_ = static_cast<const BlackBoxFuncCall_EmbeddedCurveAdd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_EmbeddedCurveAdd::ByteSizeLong() const {
          const BlackBoxFuncCall_EmbeddedCurveAdd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput input1 = 1;
            {
              total_size += 1UL * this_._internal_input1_size();
              for (const auto& msg : this_._internal_input1()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput input2 = 2;
            {
              total_size += 1UL * this_._internal_input2_size();
              for (const auto& msg : this_._internal_input2()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness outputs = 3;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_EmbeddedCurveAdd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_EmbeddedCurveAdd*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_EmbeddedCurveAdd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input1()->MergeFrom(
      from._internal_input1());
  _this->_internal_mutable_input2()->MergeFrom(
      from._internal_input2());
  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_EmbeddedCurveAdd::CopyFrom(const BlackBoxFuncCall_EmbeddedCurveAdd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_EmbeddedCurveAdd::InternalSwap(BlackBoxFuncCall_EmbeddedCurveAdd* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.input1_.InternalSwap(&other->_impl_.input1_);
  _impl_.input2_.InternalSwap(&other->_impl_.input2_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
}

::google::protobuf::Metadata BlackBoxFuncCall_EmbeddedCurveAdd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_Keccakf1600::_Internal {
 public:
};

void BlackBoxFuncCall_Keccakf1600::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
BlackBoxFuncCall_Keccakf1600::BlackBoxFuncCall_Keccakf1600(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_Keccakf1600::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_Keccakf1600& from_msg)
      : inputs_{visibility, arena, from.inputs_},
        outputs_{visibility, arena, from.outputs_},
        _cached_size_{0} {}

BlackBoxFuncCall_Keccakf1600::BlackBoxFuncCall_Keccakf1600(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_Keccakf1600& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_Keccakf1600* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_Keccakf1600::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inputs_{visibility, arena},
        outputs_{visibility, arena},
        _cached_size_{0} {}

inline void BlackBoxFuncCall_Keccakf1600::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlackBoxFuncCall_Keccakf1600::~BlackBoxFuncCall_Keccakf1600() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_Keccakf1600::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_Keccakf1600& this_ = static_cast<BlackBoxFuncCall_Keccakf1600&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_Keccakf1600::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_Keccakf1600(arena);
}
constexpr auto BlackBoxFuncCall_Keccakf1600::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Keccakf1600, _impl_.inputs_) +
          decltype(BlackBoxFuncCall_Keccakf1600::_impl_.inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Keccakf1600, _impl_.outputs_) +
          decltype(BlackBoxFuncCall_Keccakf1600::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_Keccakf1600), alignof(BlackBoxFuncCall_Keccakf1600), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_Keccakf1600::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_Keccakf1600),
                                 alignof(BlackBoxFuncCall_Keccakf1600));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_Keccakf1600::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_Keccakf1600_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_Keccakf1600::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_Keccakf1600>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_Keccakf1600::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_Keccakf1600>(), &BlackBoxFuncCall_Keccakf1600::ByteSizeLong,
            &BlackBoxFuncCall_Keccakf1600::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Keccakf1600, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_Keccakf1600::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_Keccakf1600::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> BlackBoxFuncCall_Keccakf1600::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_Keccakf1600>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .acvm.acir.native.Witness outputs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Keccakf1600, _impl_.outputs_)}},
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Keccakf1600, _impl_.inputs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Keccakf1600, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness outputs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Keccakf1600, _impl_.outputs_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_Keccakf1600::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.outputs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_Keccakf1600::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_Keccakf1600& this_ = static_cast<const BlackBoxFuncCall_Keccakf1600&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_Keccakf1600::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_Keccakf1600& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness outputs = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_Keccakf1600::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_Keccakf1600& this_ = static_cast<const BlackBoxFuncCall_Keccakf1600&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_Keccakf1600::ByteSizeLong() const {
          const BlackBoxFuncCall_Keccakf1600& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
            {
              total_size += 1UL * this_._internal_inputs_size();
              for (const auto& msg : this_._internal_inputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness outputs = 2;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_Keccakf1600::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_Keccakf1600*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_Keccakf1600&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inputs()->MergeFrom(
      from._internal_inputs());
  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_Keccakf1600::CopyFrom(const BlackBoxFuncCall_Keccakf1600& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_Keccakf1600::InternalSwap(BlackBoxFuncCall_Keccakf1600* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
}

::google::protobuf::Metadata BlackBoxFuncCall_Keccakf1600::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_RecursiveAggregation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlackBoxFuncCall_RecursiveAggregation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_._has_bits_);
};

BlackBoxFuncCall_RecursiveAggregation::BlackBoxFuncCall_RecursiveAggregation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_RecursiveAggregation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        verification_key_{visibility, arena, from.verification_key_},
        proof_{visibility, arena, from.proof_},
        public_inputs_{visibility, arena, from.public_inputs_} {}

BlackBoxFuncCall_RecursiveAggregation::BlackBoxFuncCall_RecursiveAggregation(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_RecursiveAggregation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_RecursiveAggregation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.key_hash_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(
                              arena, *from._impl_.key_hash_)
                        : nullptr;
  _impl_.proof_type_ = from._impl_.proof_type_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_RecursiveAggregation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        verification_key_{visibility, arena},
        proof_{visibility, arena},
        public_inputs_{visibility, arena} {}

inline void BlackBoxFuncCall_RecursiveAggregation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, key_hash_),
           0,
           offsetof(Impl_, proof_type_) -
               offsetof(Impl_, key_hash_) +
               sizeof(Impl_::proof_type_));
}
BlackBoxFuncCall_RecursiveAggregation::~BlackBoxFuncCall_RecursiveAggregation() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_RecursiveAggregation::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_RecursiveAggregation& this_ = static_cast<BlackBoxFuncCall_RecursiveAggregation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.key_hash_;
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_RecursiveAggregation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_RecursiveAggregation(arena);
}
constexpr auto BlackBoxFuncCall_RecursiveAggregation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.verification_key_) +
          decltype(BlackBoxFuncCall_RecursiveAggregation::_impl_.verification_key_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.proof_) +
          decltype(BlackBoxFuncCall_RecursiveAggregation::_impl_.proof_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.public_inputs_) +
          decltype(BlackBoxFuncCall_RecursiveAggregation::_impl_.public_inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_RecursiveAggregation), alignof(BlackBoxFuncCall_RecursiveAggregation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_RecursiveAggregation::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_RecursiveAggregation),
                                 alignof(BlackBoxFuncCall_RecursiveAggregation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_RecursiveAggregation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_RecursiveAggregation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_RecursiveAggregation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_RecursiveAggregation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_RecursiveAggregation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_RecursiveAggregation>(), &BlackBoxFuncCall_RecursiveAggregation::ByteSizeLong,
            &BlackBoxFuncCall_RecursiveAggregation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_RecursiveAggregation::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_RecursiveAggregation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 0, 2> BlackBoxFuncCall_RecursiveAggregation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .acvm.acir.circuit.FunctionInput verification_key = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.verification_key_)}},
    // repeated .acvm.acir.circuit.FunctionInput proof = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.proof_)}},
    // repeated .acvm.acir.circuit.FunctionInput public_inputs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.public_inputs_)}},
    // .acvm.acir.circuit.FunctionInput key_hash = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 3, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.key_hash_)}},
    // uint32 proof_type = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_RecursiveAggregation, _impl_.proof_type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.proof_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput verification_key = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.verification_key_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput proof = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.proof_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput public_inputs = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.public_inputs_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.FunctionInput key_hash = 4;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.key_hash_), _Internal::kHasBitsOffset + 0, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 proof_type = 5;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.proof_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_RecursiveAggregation::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.verification_key_.Clear();
  _impl_.proof_.Clear();
  _impl_.public_inputs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.key_hash_ != nullptr);
    _impl_.key_hash_->Clear();
  }
  _impl_.proof_type_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_RecursiveAggregation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_RecursiveAggregation& this_ = static_cast<const BlackBoxFuncCall_RecursiveAggregation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_RecursiveAggregation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_RecursiveAggregation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput verification_key = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_verification_key_size());
               i < n; i++) {
            const auto& repfield = this_._internal_verification_key().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput proof = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_proof_size());
               i < n; i++) {
            const auto& repfield = this_._internal_proof().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput public_inputs = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_public_inputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_public_inputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.circuit.FunctionInput key_hash = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.key_hash_, this_._impl_.key_hash_->GetCachedSize(), target,
                stream);
          }

          // uint32 proof_type = 5;
          if (this_._internal_proof_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_proof_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_RecursiveAggregation::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_RecursiveAggregation& this_ = static_cast<const BlackBoxFuncCall_RecursiveAggregation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_RecursiveAggregation::ByteSizeLong() const {
          const BlackBoxFuncCall_RecursiveAggregation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput verification_key = 1;
            {
              total_size += 1UL * this_._internal_verification_key_size();
              for (const auto& msg : this_._internal_verification_key()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput proof = 2;
            {
              total_size += 1UL * this_._internal_proof_size();
              for (const auto& msg : this_._internal_proof()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput public_inputs = 3;
            {
              total_size += 1UL * this_._internal_public_inputs_size();
              for (const auto& msg : this_._internal_public_inputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .acvm.acir.circuit.FunctionInput key_hash = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.key_hash_);
            }
          }
           {
            // uint32 proof_type = 5;
            if (this_._internal_proof_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_proof_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_RecursiveAggregation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_RecursiveAggregation*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_RecursiveAggregation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_verification_key()->MergeFrom(
      from._internal_verification_key());
  _this->_internal_mutable_proof()->MergeFrom(
      from._internal_proof());
  _this->_internal_mutable_public_inputs()->MergeFrom(
      from._internal_public_inputs());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.key_hash_ != nullptr);
    if (_this->_impl_.key_hash_ == nullptr) {
      _this->_impl_.key_hash_ =
          ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::FunctionInput>(arena, *from._impl_.key_hash_);
    } else {
      _this->_impl_.key_hash_->MergeFrom(*from._impl_.key_hash_);
    }
  }
  if (from._internal_proof_type() != 0) {
    _this->_impl_.proof_type_ = from._impl_.proof_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_RecursiveAggregation::CopyFrom(const BlackBoxFuncCall_RecursiveAggregation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_RecursiveAggregation::InternalSwap(BlackBoxFuncCall_RecursiveAggregation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.verification_key_.InternalSwap(&other->_impl_.verification_key_);
  _impl_.proof_.InternalSwap(&other->_impl_.proof_);
  _impl_.public_inputs_.InternalSwap(&other->_impl_.public_inputs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.proof_type_)
      + sizeof(BlackBoxFuncCall_RecursiveAggregation::_impl_.proof_type_)
      - PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_RecursiveAggregation, _impl_.key_hash_)>(
          reinterpret_cast<char*>(&_impl_.key_hash_),
          reinterpret_cast<char*>(&other->_impl_.key_hash_));
}

::google::protobuf::Metadata BlackBoxFuncCall_RecursiveAggregation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_BigIntAdd::_Internal {
 public:
};

BlackBoxFuncCall_BigIntAdd::BlackBoxFuncCall_BigIntAdd(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntAdd)
}
BlackBoxFuncCall_BigIntAdd::BlackBoxFuncCall_BigIntAdd(
    ::google::protobuf::Arena* arena, const BlackBoxFuncCall_BigIntAdd& from)
    : BlackBoxFuncCall_BigIntAdd(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_BigIntAdd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlackBoxFuncCall_BigIntAdd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lhs_),
           0,
           offsetof(Impl_, output_) -
               offsetof(Impl_, lhs_) +
               sizeof(Impl_::output_));
}
BlackBoxFuncCall_BigIntAdd::~BlackBoxFuncCall_BigIntAdd() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntAdd)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_BigIntAdd::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_BigIntAdd& this_ = static_cast<BlackBoxFuncCall_BigIntAdd&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_BigIntAdd::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_BigIntAdd(arena);
}
constexpr auto BlackBoxFuncCall_BigIntAdd::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlackBoxFuncCall_BigIntAdd),
                                            alignof(BlackBoxFuncCall_BigIntAdd));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_BigIntAdd::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_BigIntAdd_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_BigIntAdd::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_BigIntAdd>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_BigIntAdd::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_BigIntAdd>(), &BlackBoxFuncCall_BigIntAdd::ByteSizeLong,
            &BlackBoxFuncCall_BigIntAdd::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntAdd, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_BigIntAdd::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_BigIntAdd::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> BlackBoxFuncCall_BigIntAdd::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntAdd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 lhs = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntAdd, _impl_.lhs_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntAdd, _impl_.lhs_)}},
    // uint32 rhs = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntAdd, _impl_.rhs_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntAdd, _impl_.rhs_)}},
    // uint32 output = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntAdd, _impl_.output_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntAdd, _impl_.output_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 lhs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntAdd, _impl_.lhs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rhs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntAdd, _impl_.rhs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 output = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntAdd, _impl_.output_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_BigIntAdd::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntAdd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lhs_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.output_) -
      reinterpret_cast<char*>(&_impl_.lhs_)) + sizeof(_impl_.output_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_BigIntAdd::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_BigIntAdd& this_ = static_cast<const BlackBoxFuncCall_BigIntAdd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_BigIntAdd::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_BigIntAdd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntAdd)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 lhs = 1;
          if (this_._internal_lhs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_lhs(), target);
          }

          // uint32 rhs = 2;
          if (this_._internal_rhs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_rhs(), target);
          }

          // uint32 output = 3;
          if (this_._internal_output() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_output(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.BigIntAdd)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_BigIntAdd::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_BigIntAdd& this_ = static_cast<const BlackBoxFuncCall_BigIntAdd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_BigIntAdd::ByteSizeLong() const {
          const BlackBoxFuncCall_BigIntAdd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntAdd)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 lhs = 1;
            if (this_._internal_lhs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_lhs());
            }
            // uint32 rhs = 2;
            if (this_._internal_rhs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_rhs());
            }
            // uint32 output = 3;
            if (this_._internal_output() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_output());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_BigIntAdd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_BigIntAdd*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_BigIntAdd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntAdd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lhs() != 0) {
    _this->_impl_.lhs_ = from._impl_.lhs_;
  }
  if (from._internal_rhs() != 0) {
    _this->_impl_.rhs_ = from._impl_.rhs_;
  }
  if (from._internal_output() != 0) {
    _this->_impl_.output_ = from._impl_.output_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_BigIntAdd::CopyFrom(const BlackBoxFuncCall_BigIntAdd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_BigIntAdd::InternalSwap(BlackBoxFuncCall_BigIntAdd* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntAdd, _impl_.output_)
      + sizeof(BlackBoxFuncCall_BigIntAdd::_impl_.output_)
      - PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntAdd, _impl_.lhs_)>(
          reinterpret_cast<char*>(&_impl_.lhs_),
          reinterpret_cast<char*>(&other->_impl_.lhs_));
}

::google::protobuf::Metadata BlackBoxFuncCall_BigIntAdd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_BigIntSub::_Internal {
 public:
};

BlackBoxFuncCall_BigIntSub::BlackBoxFuncCall_BigIntSub(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntSub)
}
BlackBoxFuncCall_BigIntSub::BlackBoxFuncCall_BigIntSub(
    ::google::protobuf::Arena* arena, const BlackBoxFuncCall_BigIntSub& from)
    : BlackBoxFuncCall_BigIntSub(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_BigIntSub::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlackBoxFuncCall_BigIntSub::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lhs_),
           0,
           offsetof(Impl_, output_) -
               offsetof(Impl_, lhs_) +
               sizeof(Impl_::output_));
}
BlackBoxFuncCall_BigIntSub::~BlackBoxFuncCall_BigIntSub() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntSub)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_BigIntSub::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_BigIntSub& this_ = static_cast<BlackBoxFuncCall_BigIntSub&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_BigIntSub::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_BigIntSub(arena);
}
constexpr auto BlackBoxFuncCall_BigIntSub::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlackBoxFuncCall_BigIntSub),
                                            alignof(BlackBoxFuncCall_BigIntSub));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_BigIntSub::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_BigIntSub_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_BigIntSub::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_BigIntSub>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_BigIntSub::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_BigIntSub>(), &BlackBoxFuncCall_BigIntSub::ByteSizeLong,
            &BlackBoxFuncCall_BigIntSub::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntSub, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_BigIntSub::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_BigIntSub::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> BlackBoxFuncCall_BigIntSub::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntSub>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 lhs = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntSub, _impl_.lhs_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntSub, _impl_.lhs_)}},
    // uint32 rhs = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntSub, _impl_.rhs_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntSub, _impl_.rhs_)}},
    // uint32 output = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntSub, _impl_.output_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntSub, _impl_.output_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 lhs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntSub, _impl_.lhs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rhs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntSub, _impl_.rhs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 output = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntSub, _impl_.output_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_BigIntSub::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntSub)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lhs_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.output_) -
      reinterpret_cast<char*>(&_impl_.lhs_)) + sizeof(_impl_.output_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_BigIntSub::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_BigIntSub& this_ = static_cast<const BlackBoxFuncCall_BigIntSub&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_BigIntSub::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_BigIntSub& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntSub)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 lhs = 1;
          if (this_._internal_lhs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_lhs(), target);
          }

          // uint32 rhs = 2;
          if (this_._internal_rhs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_rhs(), target);
          }

          // uint32 output = 3;
          if (this_._internal_output() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_output(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.BigIntSub)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_BigIntSub::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_BigIntSub& this_ = static_cast<const BlackBoxFuncCall_BigIntSub&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_BigIntSub::ByteSizeLong() const {
          const BlackBoxFuncCall_BigIntSub& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntSub)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 lhs = 1;
            if (this_._internal_lhs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_lhs());
            }
            // uint32 rhs = 2;
            if (this_._internal_rhs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_rhs());
            }
            // uint32 output = 3;
            if (this_._internal_output() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_output());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_BigIntSub::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_BigIntSub*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_BigIntSub&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntSub)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lhs() != 0) {
    _this->_impl_.lhs_ = from._impl_.lhs_;
  }
  if (from._internal_rhs() != 0) {
    _this->_impl_.rhs_ = from._impl_.rhs_;
  }
  if (from._internal_output() != 0) {
    _this->_impl_.output_ = from._impl_.output_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_BigIntSub::CopyFrom(const BlackBoxFuncCall_BigIntSub& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntSub)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_BigIntSub::InternalSwap(BlackBoxFuncCall_BigIntSub* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntSub, _impl_.output_)
      + sizeof(BlackBoxFuncCall_BigIntSub::_impl_.output_)
      - PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntSub, _impl_.lhs_)>(
          reinterpret_cast<char*>(&_impl_.lhs_),
          reinterpret_cast<char*>(&other->_impl_.lhs_));
}

::google::protobuf::Metadata BlackBoxFuncCall_BigIntSub::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_BigIntMul::_Internal {
 public:
};

BlackBoxFuncCall_BigIntMul::BlackBoxFuncCall_BigIntMul(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntMul)
}
BlackBoxFuncCall_BigIntMul::BlackBoxFuncCall_BigIntMul(
    ::google::protobuf::Arena* arena, const BlackBoxFuncCall_BigIntMul& from)
    : BlackBoxFuncCall_BigIntMul(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_BigIntMul::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlackBoxFuncCall_BigIntMul::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lhs_),
           0,
           offsetof(Impl_, output_) -
               offsetof(Impl_, lhs_) +
               sizeof(Impl_::output_));
}
BlackBoxFuncCall_BigIntMul::~BlackBoxFuncCall_BigIntMul() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntMul)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_BigIntMul::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_BigIntMul& this_ = static_cast<BlackBoxFuncCall_BigIntMul&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_BigIntMul::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_BigIntMul(arena);
}
constexpr auto BlackBoxFuncCall_BigIntMul::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlackBoxFuncCall_BigIntMul),
                                            alignof(BlackBoxFuncCall_BigIntMul));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_BigIntMul::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_BigIntMul_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_BigIntMul::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_BigIntMul>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_BigIntMul::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_BigIntMul>(), &BlackBoxFuncCall_BigIntMul::ByteSizeLong,
            &BlackBoxFuncCall_BigIntMul::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntMul, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_BigIntMul::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_BigIntMul::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> BlackBoxFuncCall_BigIntMul::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntMul>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 lhs = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntMul, _impl_.lhs_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntMul, _impl_.lhs_)}},
    // uint32 rhs = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntMul, _impl_.rhs_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntMul, _impl_.rhs_)}},
    // uint32 output = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntMul, _impl_.output_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntMul, _impl_.output_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 lhs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntMul, _impl_.lhs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rhs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntMul, _impl_.rhs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 output = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntMul, _impl_.output_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_BigIntMul::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntMul)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lhs_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.output_) -
      reinterpret_cast<char*>(&_impl_.lhs_)) + sizeof(_impl_.output_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_BigIntMul::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_BigIntMul& this_ = static_cast<const BlackBoxFuncCall_BigIntMul&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_BigIntMul::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_BigIntMul& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntMul)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 lhs = 1;
          if (this_._internal_lhs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_lhs(), target);
          }

          // uint32 rhs = 2;
          if (this_._internal_rhs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_rhs(), target);
          }

          // uint32 output = 3;
          if (this_._internal_output() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_output(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.BigIntMul)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_BigIntMul::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_BigIntMul& this_ = static_cast<const BlackBoxFuncCall_BigIntMul&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_BigIntMul::ByteSizeLong() const {
          const BlackBoxFuncCall_BigIntMul& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntMul)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 lhs = 1;
            if (this_._internal_lhs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_lhs());
            }
            // uint32 rhs = 2;
            if (this_._internal_rhs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_rhs());
            }
            // uint32 output = 3;
            if (this_._internal_output() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_output());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_BigIntMul::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_BigIntMul*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_BigIntMul&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntMul)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lhs() != 0) {
    _this->_impl_.lhs_ = from._impl_.lhs_;
  }
  if (from._internal_rhs() != 0) {
    _this->_impl_.rhs_ = from._impl_.rhs_;
  }
  if (from._internal_output() != 0) {
    _this->_impl_.output_ = from._impl_.output_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_BigIntMul::CopyFrom(const BlackBoxFuncCall_BigIntMul& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntMul)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_BigIntMul::InternalSwap(BlackBoxFuncCall_BigIntMul* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntMul, _impl_.output_)
      + sizeof(BlackBoxFuncCall_BigIntMul::_impl_.output_)
      - PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntMul, _impl_.lhs_)>(
          reinterpret_cast<char*>(&_impl_.lhs_),
          reinterpret_cast<char*>(&other->_impl_.lhs_));
}

::google::protobuf::Metadata BlackBoxFuncCall_BigIntMul::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_BigIntDiv::_Internal {
 public:
};

BlackBoxFuncCall_BigIntDiv::BlackBoxFuncCall_BigIntDiv(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntDiv)
}
BlackBoxFuncCall_BigIntDiv::BlackBoxFuncCall_BigIntDiv(
    ::google::protobuf::Arena* arena, const BlackBoxFuncCall_BigIntDiv& from)
    : BlackBoxFuncCall_BigIntDiv(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_BigIntDiv::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlackBoxFuncCall_BigIntDiv::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lhs_),
           0,
           offsetof(Impl_, output_) -
               offsetof(Impl_, lhs_) +
               sizeof(Impl_::output_));
}
BlackBoxFuncCall_BigIntDiv::~BlackBoxFuncCall_BigIntDiv() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntDiv)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_BigIntDiv::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_BigIntDiv& this_ = static_cast<BlackBoxFuncCall_BigIntDiv&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_BigIntDiv::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_BigIntDiv(arena);
}
constexpr auto BlackBoxFuncCall_BigIntDiv::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlackBoxFuncCall_BigIntDiv),
                                            alignof(BlackBoxFuncCall_BigIntDiv));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_BigIntDiv::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_BigIntDiv_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_BigIntDiv::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_BigIntDiv>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_BigIntDiv::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_BigIntDiv>(), &BlackBoxFuncCall_BigIntDiv::ByteSizeLong,
            &BlackBoxFuncCall_BigIntDiv::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntDiv, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_BigIntDiv::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_BigIntDiv::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> BlackBoxFuncCall_BigIntDiv::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntDiv>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 lhs = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntDiv, _impl_.lhs_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntDiv, _impl_.lhs_)}},
    // uint32 rhs = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntDiv, _impl_.rhs_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntDiv, _impl_.rhs_)}},
    // uint32 output = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntDiv, _impl_.output_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntDiv, _impl_.output_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 lhs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntDiv, _impl_.lhs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rhs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntDiv, _impl_.rhs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 output = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntDiv, _impl_.output_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_BigIntDiv::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntDiv)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lhs_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.output_) -
      reinterpret_cast<char*>(&_impl_.lhs_)) + sizeof(_impl_.output_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_BigIntDiv::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_BigIntDiv& this_ = static_cast<const BlackBoxFuncCall_BigIntDiv&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_BigIntDiv::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_BigIntDiv& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntDiv)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 lhs = 1;
          if (this_._internal_lhs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_lhs(), target);
          }

          // uint32 rhs = 2;
          if (this_._internal_rhs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_rhs(), target);
          }

          // uint32 output = 3;
          if (this_._internal_output() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_output(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.BigIntDiv)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_BigIntDiv::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_BigIntDiv& this_ = static_cast<const BlackBoxFuncCall_BigIntDiv&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_BigIntDiv::ByteSizeLong() const {
          const BlackBoxFuncCall_BigIntDiv& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntDiv)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 lhs = 1;
            if (this_._internal_lhs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_lhs());
            }
            // uint32 rhs = 2;
            if (this_._internal_rhs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_rhs());
            }
            // uint32 output = 3;
            if (this_._internal_output() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_output());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_BigIntDiv::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_BigIntDiv*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_BigIntDiv&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntDiv)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lhs() != 0) {
    _this->_impl_.lhs_ = from._impl_.lhs_;
  }
  if (from._internal_rhs() != 0) {
    _this->_impl_.rhs_ = from._impl_.rhs_;
  }
  if (from._internal_output() != 0) {
    _this->_impl_.output_ = from._impl_.output_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_BigIntDiv::CopyFrom(const BlackBoxFuncCall_BigIntDiv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntDiv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_BigIntDiv::InternalSwap(BlackBoxFuncCall_BigIntDiv* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntDiv, _impl_.output_)
      + sizeof(BlackBoxFuncCall_BigIntDiv::_impl_.output_)
      - PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntDiv, _impl_.lhs_)>(
          reinterpret_cast<char*>(&_impl_.lhs_),
          reinterpret_cast<char*>(&other->_impl_.lhs_));
}

::google::protobuf::Metadata BlackBoxFuncCall_BigIntDiv::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_BigIntFromLeBytes::_Internal {
 public:
};

BlackBoxFuncCall_BigIntFromLeBytes::BlackBoxFuncCall_BigIntFromLeBytes(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_BigIntFromLeBytes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes& from_msg)
      : inputs_{visibility, arena, from.inputs_},
        modulus_(arena, from.modulus_),
        _cached_size_{0} {}

BlackBoxFuncCall_BigIntFromLeBytes::BlackBoxFuncCall_BigIntFromLeBytes(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_BigIntFromLeBytes& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_BigIntFromLeBytes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.output_ = from._impl_.output_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_BigIntFromLeBytes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inputs_{visibility, arena},
        modulus_(arena),
        _cached_size_{0} {}

inline void BlackBoxFuncCall_BigIntFromLeBytes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.output_ = {};
}
BlackBoxFuncCall_BigIntFromLeBytes::~BlackBoxFuncCall_BigIntFromLeBytes() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_BigIntFromLeBytes::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_BigIntFromLeBytes& this_ = static_cast<BlackBoxFuncCall_BigIntFromLeBytes&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.modulus_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_BigIntFromLeBytes::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_BigIntFromLeBytes(arena);
}
constexpr auto BlackBoxFuncCall_BigIntFromLeBytes::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntFromLeBytes, _impl_.inputs_) +
          decltype(BlackBoxFuncCall_BigIntFromLeBytes::_impl_.inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(BlackBoxFuncCall_BigIntFromLeBytes), alignof(BlackBoxFuncCall_BigIntFromLeBytes), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_BigIntFromLeBytes::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_BigIntFromLeBytes),
                                 alignof(BlackBoxFuncCall_BigIntFromLeBytes));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_BigIntFromLeBytes::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_BigIntFromLeBytes_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_BigIntFromLeBytes::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_BigIntFromLeBytes>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_BigIntFromLeBytes::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_BigIntFromLeBytes>(), &BlackBoxFuncCall_BigIntFromLeBytes::ByteSizeLong,
            &BlackBoxFuncCall_BigIntFromLeBytes::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntFromLeBytes, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_BigIntFromLeBytes::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_BigIntFromLeBytes::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> BlackBoxFuncCall_BigIntFromLeBytes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntFromLeBytes, _impl_.inputs_)}},
    // bytes modulus = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntFromLeBytes, _impl_.modulus_)}},
    // uint32 output = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntFromLeBytes, _impl_.output_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntFromLeBytes, _impl_.output_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntFromLeBytes, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes modulus = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntFromLeBytes, _impl_.modulus_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 output = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntFromLeBytes, _impl_.output_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_BigIntFromLeBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.modulus_.ClearToEmpty();
  _impl_.output_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_BigIntFromLeBytes::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_BigIntFromLeBytes& this_ = static_cast<const BlackBoxFuncCall_BigIntFromLeBytes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_BigIntFromLeBytes::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_BigIntFromLeBytes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bytes modulus = 2;
          if (!this_._internal_modulus().empty()) {
            const std::string& _s = this_._internal_modulus();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // uint32 output = 3;
          if (this_._internal_output() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_output(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_BigIntFromLeBytes::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_BigIntFromLeBytes& this_ = static_cast<const BlackBoxFuncCall_BigIntFromLeBytes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_BigIntFromLeBytes::ByteSizeLong() const {
          const BlackBoxFuncCall_BigIntFromLeBytes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
            {
              total_size += 1UL * this_._internal_inputs_size();
              for (const auto& msg : this_._internal_inputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes modulus = 2;
            if (!this_._internal_modulus().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_modulus());
            }
            // uint32 output = 3;
            if (this_._internal_output() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_output());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_BigIntFromLeBytes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_BigIntFromLeBytes*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_BigIntFromLeBytes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inputs()->MergeFrom(
      from._internal_inputs());
  if (!from._internal_modulus().empty()) {
    _this->_internal_set_modulus(from._internal_modulus());
  }
  if (from._internal_output() != 0) {
    _this->_impl_.output_ = from._impl_.output_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_BigIntFromLeBytes::CopyFrom(const BlackBoxFuncCall_BigIntFromLeBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_BigIntFromLeBytes::InternalSwap(BlackBoxFuncCall_BigIntFromLeBytes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modulus_, &other->_impl_.modulus_, arena);
        swap(_impl_.output_, other->_impl_.output_);
}

::google::protobuf::Metadata BlackBoxFuncCall_BigIntFromLeBytes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_BigIntToLeBytes::_Internal {
 public:
};

void BlackBoxFuncCall_BigIntToLeBytes::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
BlackBoxFuncCall_BigIntToLeBytes::BlackBoxFuncCall_BigIntToLeBytes(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_BigIntToLeBytes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_BigIntToLeBytes& from_msg)
      : outputs_{visibility, arena, from.outputs_},
        _cached_size_{0} {}

BlackBoxFuncCall_BigIntToLeBytes::BlackBoxFuncCall_BigIntToLeBytes(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_BigIntToLeBytes& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_BigIntToLeBytes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.input_ = from._impl_.input_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_BigIntToLeBytes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : outputs_{visibility, arena},
        _cached_size_{0} {}

inline void BlackBoxFuncCall_BigIntToLeBytes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.input_ = {};
}
BlackBoxFuncCall_BigIntToLeBytes::~BlackBoxFuncCall_BigIntToLeBytes() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_BigIntToLeBytes::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_BigIntToLeBytes& this_ = static_cast<BlackBoxFuncCall_BigIntToLeBytes&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_BigIntToLeBytes::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_BigIntToLeBytes(arena);
}
constexpr auto BlackBoxFuncCall_BigIntToLeBytes::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntToLeBytes, _impl_.outputs_) +
          decltype(BlackBoxFuncCall_BigIntToLeBytes::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_BigIntToLeBytes), alignof(BlackBoxFuncCall_BigIntToLeBytes), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_BigIntToLeBytes::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_BigIntToLeBytes),
                                 alignof(BlackBoxFuncCall_BigIntToLeBytes));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_BigIntToLeBytes::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_BigIntToLeBytes_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_BigIntToLeBytes::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_BigIntToLeBytes>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_BigIntToLeBytes::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_BigIntToLeBytes>(), &BlackBoxFuncCall_BigIntToLeBytes::ByteSizeLong,
            &BlackBoxFuncCall_BigIntToLeBytes::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntToLeBytes, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_BigIntToLeBytes::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_BigIntToLeBytes::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> BlackBoxFuncCall_BigIntToLeBytes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntToLeBytes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .acvm.acir.native.Witness outputs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntToLeBytes, _impl_.outputs_)}},
    // uint32 input = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_BigIntToLeBytes, _impl_.input_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntToLeBytes, _impl_.input_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 input = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntToLeBytes, _impl_.input_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .acvm.acir.native.Witness outputs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_BigIntToLeBytes, _impl_.outputs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_BigIntToLeBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.outputs_.Clear();
  _impl_.input_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_BigIntToLeBytes::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_BigIntToLeBytes& this_ = static_cast<const BlackBoxFuncCall_BigIntToLeBytes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_BigIntToLeBytes::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_BigIntToLeBytes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 input = 1;
          if (this_._internal_input() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_input(), target);
          }

          // repeated .acvm.acir.native.Witness outputs = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_BigIntToLeBytes::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_BigIntToLeBytes& this_ = static_cast<const BlackBoxFuncCall_BigIntToLeBytes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_BigIntToLeBytes::ByteSizeLong() const {
          const BlackBoxFuncCall_BigIntToLeBytes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.native.Witness outputs = 2;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 input = 1;
            if (this_._internal_input() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_input());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_BigIntToLeBytes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_BigIntToLeBytes*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_BigIntToLeBytes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  if (from._internal_input() != 0) {
    _this->_impl_.input_ = from._impl_.input_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_BigIntToLeBytes::CopyFrom(const BlackBoxFuncCall_BigIntToLeBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_BigIntToLeBytes::InternalSwap(BlackBoxFuncCall_BigIntToLeBytes* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
        swap(_impl_.input_, other->_impl_.input_);
}

::google::protobuf::Metadata BlackBoxFuncCall_BigIntToLeBytes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_Poseidon2Permutation::_Internal {
 public:
};

void BlackBoxFuncCall_Poseidon2Permutation::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
BlackBoxFuncCall_Poseidon2Permutation::BlackBoxFuncCall_Poseidon2Permutation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_Poseidon2Permutation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation& from_msg)
      : inputs_{visibility, arena, from.inputs_},
        outputs_{visibility, arena, from.outputs_},
        _cached_size_{0} {}

BlackBoxFuncCall_Poseidon2Permutation::BlackBoxFuncCall_Poseidon2Permutation(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_Poseidon2Permutation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_Poseidon2Permutation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.len_ = from._impl_.len_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_Poseidon2Permutation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inputs_{visibility, arena},
        outputs_{visibility, arena},
        _cached_size_{0} {}

inline void BlackBoxFuncCall_Poseidon2Permutation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.len_ = {};
}
BlackBoxFuncCall_Poseidon2Permutation::~BlackBoxFuncCall_Poseidon2Permutation() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_Poseidon2Permutation::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_Poseidon2Permutation& this_ = static_cast<BlackBoxFuncCall_Poseidon2Permutation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_Poseidon2Permutation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_Poseidon2Permutation(arena);
}
constexpr auto BlackBoxFuncCall_Poseidon2Permutation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Poseidon2Permutation, _impl_.inputs_) +
          decltype(BlackBoxFuncCall_Poseidon2Permutation::_impl_.inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Poseidon2Permutation, _impl_.outputs_) +
          decltype(BlackBoxFuncCall_Poseidon2Permutation::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_Poseidon2Permutation), alignof(BlackBoxFuncCall_Poseidon2Permutation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_Poseidon2Permutation::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_Poseidon2Permutation),
                                 alignof(BlackBoxFuncCall_Poseidon2Permutation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_Poseidon2Permutation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_Poseidon2Permutation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_Poseidon2Permutation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_Poseidon2Permutation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_Poseidon2Permutation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_Poseidon2Permutation>(), &BlackBoxFuncCall_Poseidon2Permutation::ByteSizeLong,
            &BlackBoxFuncCall_Poseidon2Permutation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Poseidon2Permutation, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_Poseidon2Permutation::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_Poseidon2Permutation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> BlackBoxFuncCall_Poseidon2Permutation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Poseidon2Permutation, _impl_.inputs_)}},
    // repeated .acvm.acir.native.Witness outputs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Poseidon2Permutation, _impl_.outputs_)}},
    // uint32 len = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlackBoxFuncCall_Poseidon2Permutation, _impl_.len_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Poseidon2Permutation, _impl_.len_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Poseidon2Permutation, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness outputs = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Poseidon2Permutation, _impl_.outputs_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 len = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Poseidon2Permutation, _impl_.len_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_Poseidon2Permutation::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.outputs_.Clear();
  _impl_.len_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_Poseidon2Permutation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_Poseidon2Permutation& this_ = static_cast<const BlackBoxFuncCall_Poseidon2Permutation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_Poseidon2Permutation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_Poseidon2Permutation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness outputs = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 len = 3;
          if (this_._internal_len() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_len(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_Poseidon2Permutation::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_Poseidon2Permutation& this_ = static_cast<const BlackBoxFuncCall_Poseidon2Permutation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_Poseidon2Permutation::ByteSizeLong() const {
          const BlackBoxFuncCall_Poseidon2Permutation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
            {
              total_size += 1UL * this_._internal_inputs_size();
              for (const auto& msg : this_._internal_inputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness outputs = 2;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 len = 3;
            if (this_._internal_len() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_len());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_Poseidon2Permutation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_Poseidon2Permutation*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_Poseidon2Permutation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inputs()->MergeFrom(
      from._internal_inputs());
  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  if (from._internal_len() != 0) {
    _this->_impl_.len_ = from._impl_.len_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_Poseidon2Permutation::CopyFrom(const BlackBoxFuncCall_Poseidon2Permutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_Poseidon2Permutation::InternalSwap(BlackBoxFuncCall_Poseidon2Permutation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
        swap(_impl_.len_, other->_impl_.len_);
}

::google::protobuf::Metadata BlackBoxFuncCall_Poseidon2Permutation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall_Sha256Compression::_Internal {
 public:
};

void BlackBoxFuncCall_Sha256Compression::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
BlackBoxFuncCall_Sha256Compression::BlackBoxFuncCall_Sha256Compression(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_Sha256Compression::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression& from_msg)
      : inputs_{visibility, arena, from.inputs_},
        hash_values_{visibility, arena, from.hash_values_},
        outputs_{visibility, arena, from.outputs_},
        _cached_size_{0} {}

BlackBoxFuncCall_Sha256Compression::BlackBoxFuncCall_Sha256Compression(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall_Sha256Compression& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall_Sha256Compression* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall_Sha256Compression::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inputs_{visibility, arena},
        hash_values_{visibility, arena},
        outputs_{visibility, arena},
        _cached_size_{0} {}

inline void BlackBoxFuncCall_Sha256Compression::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlackBoxFuncCall_Sha256Compression::~BlackBoxFuncCall_Sha256Compression() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall_Sha256Compression::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall_Sha256Compression& this_ = static_cast<BlackBoxFuncCall_Sha256Compression&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlackBoxFuncCall_Sha256Compression::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall_Sha256Compression(arena);
}
constexpr auto BlackBoxFuncCall_Sha256Compression::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Sha256Compression, _impl_.inputs_) +
          decltype(BlackBoxFuncCall_Sha256Compression::_impl_.inputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Sha256Compression, _impl_.hash_values_) +
          decltype(BlackBoxFuncCall_Sha256Compression::_impl_.hash_values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Sha256Compression, _impl_.outputs_) +
          decltype(BlackBoxFuncCall_Sha256Compression::_impl_.outputs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BlackBoxFuncCall_Sha256Compression), alignof(BlackBoxFuncCall_Sha256Compression), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BlackBoxFuncCall_Sha256Compression::PlacementNew_,
                                 sizeof(BlackBoxFuncCall_Sha256Compression),
                                 alignof(BlackBoxFuncCall_Sha256Compression));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall_Sha256Compression::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_Sha256Compression_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall_Sha256Compression::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall_Sha256Compression>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall_Sha256Compression::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall_Sha256Compression>(), &BlackBoxFuncCall_Sha256Compression::ByteSizeLong,
            &BlackBoxFuncCall_Sha256Compression::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Sha256Compression, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall_Sha256Compression::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall_Sha256Compression::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> BlackBoxFuncCall_Sha256Compression::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Sha256Compression, _impl_.inputs_)}},
    // repeated .acvm.acir.circuit.FunctionInput hash_values = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Sha256Compression, _impl_.hash_values_)}},
    // repeated .acvm.acir.native.Witness outputs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Sha256Compression, _impl_.outputs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Sha256Compression, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.circuit.FunctionInput hash_values = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Sha256Compression, _impl_.hash_values_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Witness outputs = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall_Sha256Compression, _impl_.outputs_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall_Sha256Compression::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.hash_values_.Clear();
  _impl_.outputs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall_Sha256Compression::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall_Sha256Compression& this_ = static_cast<const BlackBoxFuncCall_Sha256Compression&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall_Sha256Compression::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall_Sha256Compression& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_inputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_inputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.circuit.FunctionInput hash_values = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_hash_values_size());
               i < n; i++) {
            const auto& repfield = this_._internal_hash_values().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Witness outputs = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall_Sha256Compression::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall_Sha256Compression& this_ = static_cast<const BlackBoxFuncCall_Sha256Compression&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall_Sha256Compression::ByteSizeLong() const {
          const BlackBoxFuncCall_Sha256Compression& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.circuit.FunctionInput inputs = 1;
            {
              total_size += 1UL * this_._internal_inputs_size();
              for (const auto& msg : this_._internal_inputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.circuit.FunctionInput hash_values = 2;
            {
              total_size += 1UL * this_._internal_hash_values_size();
              for (const auto& msg : this_._internal_hash_values()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Witness outputs = 3;
            {
              total_size += 1UL * this_._internal_outputs_size();
              for (const auto& msg : this_._internal_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall_Sha256Compression::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall_Sha256Compression*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall_Sha256Compression&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inputs()->MergeFrom(
      from._internal_inputs());
  _this->_internal_mutable_hash_values()->MergeFrom(
      from._internal_hash_values());
  _this->_internal_mutable_outputs()->MergeFrom(
      from._internal_outputs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall_Sha256Compression::CopyFrom(const BlackBoxFuncCall_Sha256Compression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall_Sha256Compression::InternalSwap(BlackBoxFuncCall_Sha256Compression* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.hash_values_.InternalSwap(&other->_impl_.hash_values_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
}

::google::protobuf::Metadata BlackBoxFuncCall_Sha256Compression::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackBoxFuncCall::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlackBoxFuncCall, _impl_._oneof_case_);
};

void BlackBoxFuncCall::set_allocated_aes128_encrypt(::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt* aes128_encrypt) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (aes128_encrypt) {
    ::google::protobuf::Arena* submessage_arena = aes128_encrypt->GetArena();
    if (message_arena != submessage_arena) {
      aes128_encrypt = ::google::protobuf::internal::GetOwnedMessage(message_arena, aes128_encrypt, submessage_arena);
    }
    set_has_aes128_encrypt();
    _impl_.value_.aes128_encrypt_ = aes128_encrypt;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.aes128_encrypt)
}
void BlackBoxFuncCall::set_allocated_and_(::acvm::acir::circuit::BlackBoxFuncCall_AND* and_) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (and_) {
    ::google::protobuf::Arena* submessage_arena = and_->GetArena();
    if (message_arena != submessage_arena) {
      and_ = ::google::protobuf::internal::GetOwnedMessage(message_arena, and_, submessage_arena);
    }
    set_has_and_();
    _impl_.value_.and__ = and_;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.and)
}
void BlackBoxFuncCall::set_allocated_xor_(::acvm::acir::circuit::BlackBoxFuncCall_XOR* xor_) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (xor_) {
    ::google::protobuf::Arena* submessage_arena = xor_->GetArena();
    if (message_arena != submessage_arena) {
      xor_ = ::google::protobuf::internal::GetOwnedMessage(message_arena, xor_, submessage_arena);
    }
    set_has_xor_();
    _impl_.value_.xor__ = xor_;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.xor)
}
void BlackBoxFuncCall::set_allocated_range(::acvm::acir::circuit::BlackBoxFuncCall_RANGE* range) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = range->GetArena();
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(message_arena, range, submessage_arena);
    }
    set_has_range();
    _impl_.value_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.range)
}
void BlackBoxFuncCall::set_allocated_blake2s(::acvm::acir::circuit::BlackBoxFuncCall_Blake2s* blake2s) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (blake2s) {
    ::google::protobuf::Arena* submessage_arena = blake2s->GetArena();
    if (message_arena != submessage_arena) {
      blake2s = ::google::protobuf::internal::GetOwnedMessage(message_arena, blake2s, submessage_arena);
    }
    set_has_blake2s();
    _impl_.value_.blake2s_ = blake2s;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.blake2s)
}
void BlackBoxFuncCall::set_allocated_blake3(::acvm::acir::circuit::BlackBoxFuncCall_Blake3* blake3) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (blake3) {
    ::google::protobuf::Arena* submessage_arena = blake3->GetArena();
    if (message_arena != submessage_arena) {
      blake3 = ::google::protobuf::internal::GetOwnedMessage(message_arena, blake3, submessage_arena);
    }
    set_has_blake3();
    _impl_.value_.blake3_ = blake3;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.blake3)
}
void BlackBoxFuncCall::set_allocated_ecdsa_secp256k1(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1* ecdsa_secp256k1) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (ecdsa_secp256k1) {
    ::google::protobuf::Arena* submessage_arena = ecdsa_secp256k1->GetArena();
    if (message_arena != submessage_arena) {
      ecdsa_secp256k1 = ::google::protobuf::internal::GetOwnedMessage(message_arena, ecdsa_secp256k1, submessage_arena);
    }
    set_has_ecdsa_secp256k1();
    _impl_.value_.ecdsa_secp256k1_ = ecdsa_secp256k1;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.ecdsa_secp256k1)
}
void BlackBoxFuncCall::set_allocated_ecdsa_secp256r1(::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1* ecdsa_secp256r1) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (ecdsa_secp256r1) {
    ::google::protobuf::Arena* submessage_arena = ecdsa_secp256r1->GetArena();
    if (message_arena != submessage_arena) {
      ecdsa_secp256r1 = ::google::protobuf::internal::GetOwnedMessage(message_arena, ecdsa_secp256r1, submessage_arena);
    }
    set_has_ecdsa_secp256r1();
    _impl_.value_.ecdsa_secp256r1_ = ecdsa_secp256r1;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.ecdsa_secp256r1)
}
void BlackBoxFuncCall::set_allocated_multi_scalar_mul(::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul* multi_scalar_mul) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (multi_scalar_mul) {
    ::google::protobuf::Arena* submessage_arena = multi_scalar_mul->GetArena();
    if (message_arena != submessage_arena) {
      multi_scalar_mul = ::google::protobuf::internal::GetOwnedMessage(message_arena, multi_scalar_mul, submessage_arena);
    }
    set_has_multi_scalar_mul();
    _impl_.value_.multi_scalar_mul_ = multi_scalar_mul;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.multi_scalar_mul)
}
void BlackBoxFuncCall::set_allocated_embedded_curve_add(::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd* embedded_curve_add) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (embedded_curve_add) {
    ::google::protobuf::Arena* submessage_arena = embedded_curve_add->GetArena();
    if (message_arena != submessage_arena) {
      embedded_curve_add = ::google::protobuf::internal::GetOwnedMessage(message_arena, embedded_curve_add, submessage_arena);
    }
    set_has_embedded_curve_add();
    _impl_.value_.embedded_curve_add_ = embedded_curve_add;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.embedded_curve_add)
}
void BlackBoxFuncCall::set_allocated_keccak_f1600(::acvm::acir::circuit::BlackBoxFuncCall_Keccakf1600* keccak_f1600) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (keccak_f1600) {
    ::google::protobuf::Arena* submessage_arena = keccak_f1600->GetArena();
    if (message_arena != submessage_arena) {
      keccak_f1600 = ::google::protobuf::internal::GetOwnedMessage(message_arena, keccak_f1600, submessage_arena);
    }
    set_has_keccak_f1600();
    _impl_.value_.keccak_f1600_ = keccak_f1600;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.keccak_f1600)
}
void BlackBoxFuncCall::set_allocated_recursive_aggregation(::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation* recursive_aggregation) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (recursive_aggregation) {
    ::google::protobuf::Arena* submessage_arena = recursive_aggregation->GetArena();
    if (message_arena != submessage_arena) {
      recursive_aggregation = ::google::protobuf::internal::GetOwnedMessage(message_arena, recursive_aggregation, submessage_arena);
    }
    set_has_recursive_aggregation();
    _impl_.value_.recursive_aggregation_ = recursive_aggregation;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.recursive_aggregation)
}
void BlackBoxFuncCall::set_allocated_big_int_add(::acvm::acir::circuit::BlackBoxFuncCall_BigIntAdd* big_int_add) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (big_int_add) {
    ::google::protobuf::Arena* submessage_arena = big_int_add->GetArena();
    if (message_arena != submessage_arena) {
      big_int_add = ::google::protobuf::internal::GetOwnedMessage(message_arena, big_int_add, submessage_arena);
    }
    set_has_big_int_add();
    _impl_.value_.big_int_add_ = big_int_add;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.big_int_add)
}
void BlackBoxFuncCall::set_allocated_big_int_sub(::acvm::acir::circuit::BlackBoxFuncCall_BigIntSub* big_int_sub) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (big_int_sub) {
    ::google::protobuf::Arena* submessage_arena = big_int_sub->GetArena();
    if (message_arena != submessage_arena) {
      big_int_sub = ::google::protobuf::internal::GetOwnedMessage(message_arena, big_int_sub, submessage_arena);
    }
    set_has_big_int_sub();
    _impl_.value_.big_int_sub_ = big_int_sub;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.big_int_sub)
}
void BlackBoxFuncCall::set_allocated_big_int_mul(::acvm::acir::circuit::BlackBoxFuncCall_BigIntMul* big_int_mul) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (big_int_mul) {
    ::google::protobuf::Arena* submessage_arena = big_int_mul->GetArena();
    if (message_arena != submessage_arena) {
      big_int_mul = ::google::protobuf::internal::GetOwnedMessage(message_arena, big_int_mul, submessage_arena);
    }
    set_has_big_int_mul();
    _impl_.value_.big_int_mul_ = big_int_mul;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.big_int_mul)
}
void BlackBoxFuncCall::set_allocated_big_int_div(::acvm::acir::circuit::BlackBoxFuncCall_BigIntDiv* big_int_div) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (big_int_div) {
    ::google::protobuf::Arena* submessage_arena = big_int_div->GetArena();
    if (message_arena != submessage_arena) {
      big_int_div = ::google::protobuf::internal::GetOwnedMessage(message_arena, big_int_div, submessage_arena);
    }
    set_has_big_int_div();
    _impl_.value_.big_int_div_ = big_int_div;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.big_int_div)
}
void BlackBoxFuncCall::set_allocated_big_int_from_le_bytes(::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes* big_int_from_le_bytes) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (big_int_from_le_bytes) {
    ::google::protobuf::Arena* submessage_arena = big_int_from_le_bytes->GetArena();
    if (message_arena != submessage_arena) {
      big_int_from_le_bytes = ::google::protobuf::internal::GetOwnedMessage(message_arena, big_int_from_le_bytes, submessage_arena);
    }
    set_has_big_int_from_le_bytes();
    _impl_.value_.big_int_from_le_bytes_ = big_int_from_le_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.big_int_from_le_bytes)
}
void BlackBoxFuncCall::set_allocated_big_int_to_le_bytes(::acvm::acir::circuit::BlackBoxFuncCall_BigIntToLeBytes* big_int_to_le_bytes) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (big_int_to_le_bytes) {
    ::google::protobuf::Arena* submessage_arena = big_int_to_le_bytes->GetArena();
    if (message_arena != submessage_arena) {
      big_int_to_le_bytes = ::google::protobuf::internal::GetOwnedMessage(message_arena, big_int_to_le_bytes, submessage_arena);
    }
    set_has_big_int_to_le_bytes();
    _impl_.value_.big_int_to_le_bytes_ = big_int_to_le_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.big_int_to_le_bytes)
}
void BlackBoxFuncCall::set_allocated_poseidon2_permutation(::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation* poseidon2_permutation) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (poseidon2_permutation) {
    ::google::protobuf::Arena* submessage_arena = poseidon2_permutation->GetArena();
    if (message_arena != submessage_arena) {
      poseidon2_permutation = ::google::protobuf::internal::GetOwnedMessage(message_arena, poseidon2_permutation, submessage_arena);
    }
    set_has_poseidon2_permutation();
    _impl_.value_.poseidon2_permutation_ = poseidon2_permutation;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.poseidon2_permutation)
}
void BlackBoxFuncCall::set_allocated_sha256_compression(::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression* sha256_compression) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (sha256_compression) {
    ::google::protobuf::Arena* submessage_arena = sha256_compression->GetArena();
    if (message_arena != submessage_arena) {
      sha256_compression = ::google::protobuf::internal::GetOwnedMessage(message_arena, sha256_compression, submessage_arena);
    }
    set_has_sha256_compression();
    _impl_.value_.sha256_compression_ = sha256_compression;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlackBoxFuncCall.sha256_compression)
}
BlackBoxFuncCall::BlackBoxFuncCall(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlackBoxFuncCall)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlackBoxFuncCall& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BlackBoxFuncCall::BlackBoxFuncCall(
    ::google::protobuf::Arena* arena,
    const BlackBoxFuncCall& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackBoxFuncCall* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kAes128Encrypt:
        _impl_.value_.aes128_encrypt_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt>(arena, *from._impl_.value_.aes128_encrypt_);
        break;
      case kAnd:
        _impl_.value_.and__ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_AND>(arena, *from._impl_.value_.and__);
        break;
      case kXor:
        _impl_.value_.xor__ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_XOR>(arena, *from._impl_.value_.xor__);
        break;
      case kRange:
        _impl_.value_.range_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_RANGE>(arena, *from._impl_.value_.range_);
        break;
      case kBlake2S:
        _impl_.value_.blake2s_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_Blake2s>(arena, *from._impl_.value_.blake2s_);
        break;
      case kBlake3:
        _impl_.value_.blake3_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_Blake3>(arena, *from._impl_.value_.blake3_);
        break;
      case kEcdsaSecp256K1:
        _impl_.value_.ecdsa_secp256k1_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1>(arena, *from._impl_.value_.ecdsa_secp256k1_);
        break;
      case kEcdsaSecp256R1:
        _impl_.value_.ecdsa_secp256r1_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1>(arena, *from._impl_.value_.ecdsa_secp256r1_);
        break;
      case kMultiScalarMul:
        _impl_.value_.multi_scalar_mul_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul>(arena, *from._impl_.value_.multi_scalar_mul_);
        break;
      case kEmbeddedCurveAdd:
        _impl_.value_.embedded_curve_add_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd>(arena, *from._impl_.value_.embedded_curve_add_);
        break;
      case kKeccakF1600:
        _impl_.value_.keccak_f1600_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_Keccakf1600>(arena, *from._impl_.value_.keccak_f1600_);
        break;
      case kRecursiveAggregation:
        _impl_.value_.recursive_aggregation_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation>(arena, *from._impl_.value_.recursive_aggregation_);
        break;
      case kBigIntAdd:
        _impl_.value_.big_int_add_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntAdd>(arena, *from._impl_.value_.big_int_add_);
        break;
      case kBigIntSub:
        _impl_.value_.big_int_sub_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntSub>(arena, *from._impl_.value_.big_int_sub_);
        break;
      case kBigIntMul:
        _impl_.value_.big_int_mul_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntMul>(arena, *from._impl_.value_.big_int_mul_);
        break;
      case kBigIntDiv:
        _impl_.value_.big_int_div_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntDiv>(arena, *from._impl_.value_.big_int_div_);
        break;
      case kBigIntFromLeBytes:
        _impl_.value_.big_int_from_le_bytes_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes>(arena, *from._impl_.value_.big_int_from_le_bytes_);
        break;
      case kBigIntToLeBytes:
        _impl_.value_.big_int_to_le_bytes_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntToLeBytes>(arena, *from._impl_.value_.big_int_to_le_bytes_);
        break;
      case kPoseidon2Permutation:
        _impl_.value_.poseidon2_permutation_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation>(arena, *from._impl_.value_.poseidon2_permutation_);
        break;
      case kSha256Compression:
        _impl_.value_.sha256_compression_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression>(arena, *from._impl_.value_.sha256_compression_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlackBoxFuncCall)
}
inline PROTOBUF_NDEBUG_INLINE BlackBoxFuncCall::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BlackBoxFuncCall::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlackBoxFuncCall::~BlackBoxFuncCall() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlackBoxFuncCall)
  SharedDtor(*this);
}
inline void BlackBoxFuncCall::SharedDtor(MessageLite& self) {
  BlackBoxFuncCall& this_ = static_cast<BlackBoxFuncCall&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void BlackBoxFuncCall::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:acvm.acir.circuit.BlackBoxFuncCall)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kAes128Encrypt: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.aes128_encrypt_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.aes128_encrypt_);
      }
      break;
    }
    case kAnd: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.and__;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.and__);
      }
      break;
    }
    case kXor: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.xor__;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.xor__);
      }
      break;
    }
    case kRange: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.range_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.range_);
      }
      break;
    }
    case kBlake2S: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.blake2s_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.blake2s_);
      }
      break;
    }
    case kBlake3: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.blake3_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.blake3_);
      }
      break;
    }
    case kEcdsaSecp256K1: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.ecdsa_secp256k1_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.ecdsa_secp256k1_);
      }
      break;
    }
    case kEcdsaSecp256R1: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.ecdsa_secp256r1_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.ecdsa_secp256r1_);
      }
      break;
    }
    case kMultiScalarMul: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.multi_scalar_mul_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.multi_scalar_mul_);
      }
      break;
    }
    case kEmbeddedCurveAdd: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.embedded_curve_add_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.embedded_curve_add_);
      }
      break;
    }
    case kKeccakF1600: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.keccak_f1600_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.keccak_f1600_);
      }
      break;
    }
    case kRecursiveAggregation: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.recursive_aggregation_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.recursive_aggregation_);
      }
      break;
    }
    case kBigIntAdd: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.big_int_add_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.big_int_add_);
      }
      break;
    }
    case kBigIntSub: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.big_int_sub_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.big_int_sub_);
      }
      break;
    }
    case kBigIntMul: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.big_int_mul_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.big_int_mul_);
      }
      break;
    }
    case kBigIntDiv: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.big_int_div_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.big_int_div_);
      }
      break;
    }
    case kBigIntFromLeBytes: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.big_int_from_le_bytes_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.big_int_from_le_bytes_);
      }
      break;
    }
    case kBigIntToLeBytes: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.big_int_to_le_bytes_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.big_int_to_le_bytes_);
      }
      break;
    }
    case kPoseidon2Permutation: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.poseidon2_permutation_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.poseidon2_permutation_);
      }
      break;
    }
    case kSha256Compression: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.sha256_compression_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.sha256_compression_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* BlackBoxFuncCall::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlackBoxFuncCall(arena);
}
constexpr auto BlackBoxFuncCall::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlackBoxFuncCall),
                                            alignof(BlackBoxFuncCall));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlackBoxFuncCall::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlackBoxFuncCall_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlackBoxFuncCall::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlackBoxFuncCall>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlackBoxFuncCall::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlackBoxFuncCall>(), &BlackBoxFuncCall::ByteSizeLong,
            &BlackBoxFuncCall::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_._cached_size_),
        false,
    },
    &BlackBoxFuncCall::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlackBoxFuncCall::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 20, 20, 0, 2> BlackBoxFuncCall::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    20, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918720,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    20,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt aes128_encrypt = 1;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.aes128_encrypt_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.AND and = 2;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.and__), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.XOR xor = 3;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.xor__), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.RANGE range = 4;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.range_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.Blake2s blake2s = 5;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.blake2s_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.Blake3 blake3 = 6;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.blake3_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1 ecdsa_secp256k1 = 7;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.ecdsa_secp256k1_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1 ecdsa_secp256r1 = 8;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.ecdsa_secp256r1_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul multi_scalar_mul = 9;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.multi_scalar_mul_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd embedded_curve_add = 10;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.embedded_curve_add_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600 keccak_f1600 = 11;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.keccak_f1600_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation recursive_aggregation = 12;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.recursive_aggregation_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.BigIntAdd big_int_add = 13;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.big_int_add_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.BigIntSub big_int_sub = 14;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.big_int_sub_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.BigIntMul big_int_mul = 15;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.big_int_mul_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.BigIntDiv big_int_div = 16;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.big_int_div_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes big_int_from_le_bytes = 17;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.big_int_from_le_bytes_), _Internal::kOneofCaseOffset + 0, 16,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes big_int_to_le_bytes = 18;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.big_int_to_le_bytes_), _Internal::kOneofCaseOffset + 0, 17,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation poseidon2_permutation = 19;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.poseidon2_permutation_), _Internal::kOneofCaseOffset + 0, 18,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression sha256_compression = 20;
    {PROTOBUF_FIELD_OFFSET(BlackBoxFuncCall, _impl_.value_.sha256_compression_), _Internal::kOneofCaseOffset + 0, 19,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_AND>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_XOR>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_RANGE>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_Blake2s>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_Blake3>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_Keccakf1600>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntAdd>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntSub>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntMul>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntDiv>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_BigIntToLeBytes>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlackBoxFuncCall::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlackBoxFuncCall)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackBoxFuncCall::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackBoxFuncCall& this_ = static_cast<const BlackBoxFuncCall&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackBoxFuncCall::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackBoxFuncCall& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlackBoxFuncCall)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kAes128Encrypt: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.value_.aes128_encrypt_, this_._impl_.value_.aes128_encrypt_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kAnd: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.value_.and__, this_._impl_.value_.and__->GetCachedSize(), target,
                  stream);
              break;
            }
            case kXor: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.value_.xor__, this_._impl_.value_.xor__->GetCachedSize(), target,
                  stream);
              break;
            }
            case kRange: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.value_.range_, this_._impl_.value_.range_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBlake2S: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.value_.blake2s_, this_._impl_.value_.blake2s_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBlake3: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.value_.blake3_, this_._impl_.value_.blake3_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kEcdsaSecp256K1: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.value_.ecdsa_secp256k1_, this_._impl_.value_.ecdsa_secp256k1_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kEcdsaSecp256R1: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  8, *this_._impl_.value_.ecdsa_secp256r1_, this_._impl_.value_.ecdsa_secp256r1_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMultiScalarMul: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  9, *this_._impl_.value_.multi_scalar_mul_, this_._impl_.value_.multi_scalar_mul_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kEmbeddedCurveAdd: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.value_.embedded_curve_add_, this_._impl_.value_.embedded_curve_add_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kKeccakF1600: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.value_.keccak_f1600_, this_._impl_.value_.keccak_f1600_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kRecursiveAggregation: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.value_.recursive_aggregation_, this_._impl_.value_.recursive_aggregation_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBigIntAdd: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  13, *this_._impl_.value_.big_int_add_, this_._impl_.value_.big_int_add_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBigIntSub: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  14, *this_._impl_.value_.big_int_sub_, this_._impl_.value_.big_int_sub_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBigIntMul: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  15, *this_._impl_.value_.big_int_mul_, this_._impl_.value_.big_int_mul_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBigIntDiv: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  16, *this_._impl_.value_.big_int_div_, this_._impl_.value_.big_int_div_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBigIntFromLeBytes: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  17, *this_._impl_.value_.big_int_from_le_bytes_, this_._impl_.value_.big_int_from_le_bytes_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBigIntToLeBytes: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  18, *this_._impl_.value_.big_int_to_le_bytes_, this_._impl_.value_.big_int_to_le_bytes_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPoseidon2Permutation: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  19, *this_._impl_.value_.poseidon2_permutation_, this_._impl_.value_.poseidon2_permutation_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSha256Compression: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  20, *this_._impl_.value_.sha256_compression_, this_._impl_.value_.sha256_compression_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlackBoxFuncCall)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackBoxFuncCall::ByteSizeLong(const MessageLite& base) {
          const BlackBoxFuncCall& this_ = static_cast<const BlackBoxFuncCall&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackBoxFuncCall::ByteSizeLong() const {
          const BlackBoxFuncCall& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlackBoxFuncCall)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // .acvm.acir.circuit.BlackBoxFuncCall.AES128Encrypt aes128_encrypt = 1;
            case kAes128Encrypt: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.aes128_encrypt_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.AND and = 2;
            case kAnd: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.and__);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.XOR xor = 3;
            case kXor: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.xor__);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.RANGE range = 4;
            case kRange: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.range_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.Blake2s blake2s = 5;
            case kBlake2S: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.blake2s_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.Blake3 blake3 = 6;
            case kBlake3: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.blake3_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256k1 ecdsa_secp256k1 = 7;
            case kEcdsaSecp256K1: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.ecdsa_secp256k1_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.EcdsaSecp256r1 ecdsa_secp256r1 = 8;
            case kEcdsaSecp256R1: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.ecdsa_secp256r1_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.MultiScalarMul multi_scalar_mul = 9;
            case kMultiScalarMul: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.multi_scalar_mul_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.EmbeddedCurveAdd embedded_curve_add = 10;
            case kEmbeddedCurveAdd: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.embedded_curve_add_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.Keccakf1600 keccak_f1600 = 11;
            case kKeccakF1600: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.keccak_f1600_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.RecursiveAggregation recursive_aggregation = 12;
            case kRecursiveAggregation: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.recursive_aggregation_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.BigIntAdd big_int_add = 13;
            case kBigIntAdd: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.big_int_add_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.BigIntSub big_int_sub = 14;
            case kBigIntSub: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.big_int_sub_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.BigIntMul big_int_mul = 15;
            case kBigIntMul: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.big_int_mul_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.BigIntDiv big_int_div = 16;
            case kBigIntDiv: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.big_int_div_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.BigIntFromLeBytes big_int_from_le_bytes = 17;
            case kBigIntFromLeBytes: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.big_int_from_le_bytes_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.BigIntToLeBytes big_int_to_le_bytes = 18;
            case kBigIntToLeBytes: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.big_int_to_le_bytes_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.Poseidon2Permutation poseidon2_permutation = 19;
            case kPoseidon2Permutation: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.poseidon2_permutation_);
              break;
            }
            // .acvm.acir.circuit.BlackBoxFuncCall.Sha256Compression sha256_compression = 20;
            case kSha256Compression: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.sha256_compression_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackBoxFuncCall::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackBoxFuncCall*>(&to_msg);
  auto& from = static_cast<const BlackBoxFuncCall&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlackBoxFuncCall)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAes128Encrypt: {
        if (oneof_needs_init) {
          _this->_impl_.value_.aes128_encrypt_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_AES128Encrypt>(arena, *from._impl_.value_.aes128_encrypt_);
        } else {
          _this->_impl_.value_.aes128_encrypt_->MergeFrom(from._internal_aes128_encrypt());
        }
        break;
      }
      case kAnd: {
        if (oneof_needs_init) {
          _this->_impl_.value_.and__ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_AND>(arena, *from._impl_.value_.and__);
        } else {
          _this->_impl_.value_.and__->MergeFrom(from._internal_and_());
        }
        break;
      }
      case kXor: {
        if (oneof_needs_init) {
          _this->_impl_.value_.xor__ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_XOR>(arena, *from._impl_.value_.xor__);
        } else {
          _this->_impl_.value_.xor__->MergeFrom(from._internal_xor_());
        }
        break;
      }
      case kRange: {
        if (oneof_needs_init) {
          _this->_impl_.value_.range_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_RANGE>(arena, *from._impl_.value_.range_);
        } else {
          _this->_impl_.value_.range_->MergeFrom(from._internal_range());
        }
        break;
      }
      case kBlake2S: {
        if (oneof_needs_init) {
          _this->_impl_.value_.blake2s_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_Blake2s>(arena, *from._impl_.value_.blake2s_);
        } else {
          _this->_impl_.value_.blake2s_->MergeFrom(from._internal_blake2s());
        }
        break;
      }
      case kBlake3: {
        if (oneof_needs_init) {
          _this->_impl_.value_.blake3_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_Blake3>(arena, *from._impl_.value_.blake3_);
        } else {
          _this->_impl_.value_.blake3_->MergeFrom(from._internal_blake3());
        }
        break;
      }
      case kEcdsaSecp256K1: {
        if (oneof_needs_init) {
          _this->_impl_.value_.ecdsa_secp256k1_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256k1>(arena, *from._impl_.value_.ecdsa_secp256k1_);
        } else {
          _this->_impl_.value_.ecdsa_secp256k1_->MergeFrom(from._internal_ecdsa_secp256k1());
        }
        break;
      }
      case kEcdsaSecp256R1: {
        if (oneof_needs_init) {
          _this->_impl_.value_.ecdsa_secp256r1_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_EcdsaSecp256r1>(arena, *from._impl_.value_.ecdsa_secp256r1_);
        } else {
          _this->_impl_.value_.ecdsa_secp256r1_->MergeFrom(from._internal_ecdsa_secp256r1());
        }
        break;
      }
      case kMultiScalarMul: {
        if (oneof_needs_init) {
          _this->_impl_.value_.multi_scalar_mul_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_MultiScalarMul>(arena, *from._impl_.value_.multi_scalar_mul_);
        } else {
          _this->_impl_.value_.multi_scalar_mul_->MergeFrom(from._internal_multi_scalar_mul());
        }
        break;
      }
      case kEmbeddedCurveAdd: {
        if (oneof_needs_init) {
          _this->_impl_.value_.embedded_curve_add_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_EmbeddedCurveAdd>(arena, *from._impl_.value_.embedded_curve_add_);
        } else {
          _this->_impl_.value_.embedded_curve_add_->MergeFrom(from._internal_embedded_curve_add());
        }
        break;
      }
      case kKeccakF1600: {
        if (oneof_needs_init) {
          _this->_impl_.value_.keccak_f1600_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_Keccakf1600>(arena, *from._impl_.value_.keccak_f1600_);
        } else {
          _this->_impl_.value_.keccak_f1600_->MergeFrom(from._internal_keccak_f1600());
        }
        break;
      }
      case kRecursiveAggregation: {
        if (oneof_needs_init) {
          _this->_impl_.value_.recursive_aggregation_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_RecursiveAggregation>(arena, *from._impl_.value_.recursive_aggregation_);
        } else {
          _this->_impl_.value_.recursive_aggregation_->MergeFrom(from._internal_recursive_aggregation());
        }
        break;
      }
      case kBigIntAdd: {
        if (oneof_needs_init) {
          _this->_impl_.value_.big_int_add_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntAdd>(arena, *from._impl_.value_.big_int_add_);
        } else {
          _this->_impl_.value_.big_int_add_->MergeFrom(from._internal_big_int_add());
        }
        break;
      }
      case kBigIntSub: {
        if (oneof_needs_init) {
          _this->_impl_.value_.big_int_sub_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntSub>(arena, *from._impl_.value_.big_int_sub_);
        } else {
          _this->_impl_.value_.big_int_sub_->MergeFrom(from._internal_big_int_sub());
        }
        break;
      }
      case kBigIntMul: {
        if (oneof_needs_init) {
          _this->_impl_.value_.big_int_mul_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntMul>(arena, *from._impl_.value_.big_int_mul_);
        } else {
          _this->_impl_.value_.big_int_mul_->MergeFrom(from._internal_big_int_mul());
        }
        break;
      }
      case kBigIntDiv: {
        if (oneof_needs_init) {
          _this->_impl_.value_.big_int_div_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntDiv>(arena, *from._impl_.value_.big_int_div_);
        } else {
          _this->_impl_.value_.big_int_div_->MergeFrom(from._internal_big_int_div());
        }
        break;
      }
      case kBigIntFromLeBytes: {
        if (oneof_needs_init) {
          _this->_impl_.value_.big_int_from_le_bytes_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntFromLeBytes>(arena, *from._impl_.value_.big_int_from_le_bytes_);
        } else {
          _this->_impl_.value_.big_int_from_le_bytes_->MergeFrom(from._internal_big_int_from_le_bytes());
        }
        break;
      }
      case kBigIntToLeBytes: {
        if (oneof_needs_init) {
          _this->_impl_.value_.big_int_to_le_bytes_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_BigIntToLeBytes>(arena, *from._impl_.value_.big_int_to_le_bytes_);
        } else {
          _this->_impl_.value_.big_int_to_le_bytes_->MergeFrom(from._internal_big_int_to_le_bytes());
        }
        break;
      }
      case kPoseidon2Permutation: {
        if (oneof_needs_init) {
          _this->_impl_.value_.poseidon2_permutation_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_Poseidon2Permutation>(arena, *from._impl_.value_.poseidon2_permutation_);
        } else {
          _this->_impl_.value_.poseidon2_permutation_->MergeFrom(from._internal_poseidon2_permutation());
        }
        break;
      }
      case kSha256Compression: {
        if (oneof_needs_init) {
          _this->_impl_.value_.sha256_compression_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlackBoxFuncCall_Sha256Compression>(arena, *from._impl_.value_.sha256_compression_);
        } else {
          _this->_impl_.value_.sha256_compression_->MergeFrom(from._internal_sha256_compression());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackBoxFuncCall::CopyFrom(const BlackBoxFuncCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlackBoxFuncCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackBoxFuncCall::InternalSwap(BlackBoxFuncCall* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BlackBoxFuncCall::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FunctionInput::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FunctionInput>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FunctionInput, _impl_._has_bits_);
};

FunctionInput::FunctionInput(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.FunctionInput)
}
inline PROTOBUF_NDEBUG_INLINE FunctionInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::FunctionInput& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FunctionInput::FunctionInput(
    ::google::protobuf::Arena* arena,
    const FunctionInput& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FunctionInput* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.input_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::ConstantOrWitnessEnum>(
                              arena, *from._impl_.input_)
                        : nullptr;
  _impl_.num_bits_ = from._impl_.num_bits_;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.FunctionInput)
}
inline PROTOBUF_NDEBUG_INLINE FunctionInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FunctionInput::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, input_),
           0,
           offsetof(Impl_, num_bits_) -
               offsetof(Impl_, input_) +
               sizeof(Impl_::num_bits_));
}
FunctionInput::~FunctionInput() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.FunctionInput)
  SharedDtor(*this);
}
inline void FunctionInput::SharedDtor(MessageLite& self) {
  FunctionInput& this_ = static_cast<FunctionInput&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.input_;
  this_._impl_.~Impl_();
}

inline void* FunctionInput::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FunctionInput(arena);
}
constexpr auto FunctionInput::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FunctionInput),
                                            alignof(FunctionInput));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FunctionInput::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FunctionInput_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FunctionInput::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FunctionInput>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FunctionInput::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FunctionInput>(), &FunctionInput::ByteSizeLong,
            &FunctionInput::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FunctionInput, _impl_._cached_size_),
        false,
    },
    &FunctionInput::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FunctionInput::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> FunctionInput::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FunctionInput, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::FunctionInput>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 num_bits = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FunctionInput, _impl_.num_bits_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FunctionInput, _impl_.num_bits_)}},
    // .acvm.acir.circuit.ConstantOrWitnessEnum input = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FunctionInput, _impl_.input_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.circuit.ConstantOrWitnessEnum input = 1;
    {PROTOBUF_FIELD_OFFSET(FunctionInput, _impl_.input_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 num_bits = 2;
    {PROTOBUF_FIELD_OFFSET(FunctionInput, _impl_.num_bits_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::ConstantOrWitnessEnum>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FunctionInput::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.FunctionInput)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.input_ != nullptr);
    _impl_.input_->Clear();
  }
  _impl_.num_bits_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FunctionInput::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FunctionInput& this_ = static_cast<const FunctionInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FunctionInput::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FunctionInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.FunctionInput)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.circuit.ConstantOrWitnessEnum input = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.input_, this_._impl_.input_->GetCachedSize(), target,
                stream);
          }

          // uint32 num_bits = 2;
          if (this_._internal_num_bits() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_num_bits(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.FunctionInput)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FunctionInput::ByteSizeLong(const MessageLite& base) {
          const FunctionInput& this_ = static_cast<const FunctionInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FunctionInput::ByteSizeLong() const {
          const FunctionInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.FunctionInput)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .acvm.acir.circuit.ConstantOrWitnessEnum input = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.input_);
            }
          }
           {
            // uint32 num_bits = 2;
            if (this_._internal_num_bits() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_num_bits());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FunctionInput::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FunctionInput*>(&to_msg);
  auto& from = static_cast<const FunctionInput&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.FunctionInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.input_ != nullptr);
    if (_this->_impl_.input_ == nullptr) {
      _this->_impl_.input_ =
          ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::ConstantOrWitnessEnum>(arena, *from._impl_.input_);
    } else {
      _this->_impl_.input_->MergeFrom(*from._impl_.input_);
    }
  }
  if (from._internal_num_bits() != 0) {
    _this->_impl_.num_bits_ = from._impl_.num_bits_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionInput::CopyFrom(const FunctionInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.FunctionInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FunctionInput::InternalSwap(FunctionInput* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FunctionInput, _impl_.num_bits_)
      + sizeof(FunctionInput::_impl_.num_bits_)
      - PROTOBUF_FIELD_OFFSET(FunctionInput, _impl_.input_)>(
          reinterpret_cast<char*>(&_impl_.input_),
          reinterpret_cast<char*>(&other->_impl_.input_));
}

::google::protobuf::Metadata FunctionInput::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConstantOrWitnessEnum::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::ConstantOrWitnessEnum, _impl_._oneof_case_);
};

void ConstantOrWitnessEnum::set_allocated_constant(::acvm::acir::native::Field* constant) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (constant) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(constant)->GetArena();
    if (message_arena != submessage_arena) {
      constant = ::google::protobuf::internal::GetOwnedMessage(message_arena, constant, submessage_arena);
    }
    set_has_constant();
    _impl_.value_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.ConstantOrWitnessEnum.constant)
}
void ConstantOrWitnessEnum::clear_constant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kConstant) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.constant_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.constant_);
    }
    clear_has_value();
  }
}
void ConstantOrWitnessEnum::set_allocated_witness(::acvm::acir::native::Witness* witness) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (witness) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(witness)->GetArena();
    if (message_arena != submessage_arena) {
      witness = ::google::protobuf::internal::GetOwnedMessage(message_arena, witness, submessage_arena);
    }
    set_has_witness();
    _impl_.value_.witness_ = witness;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.ConstantOrWitnessEnum.witness)
}
void ConstantOrWitnessEnum::clear_witness() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kWitness) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.witness_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.witness_);
    }
    clear_has_value();
  }
}
ConstantOrWitnessEnum::ConstantOrWitnessEnum(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.ConstantOrWitnessEnum)
}
inline PROTOBUF_NDEBUG_INLINE ConstantOrWitnessEnum::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::ConstantOrWitnessEnum& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ConstantOrWitnessEnum::ConstantOrWitnessEnum(
    ::google::protobuf::Arena* arena,
    const ConstantOrWitnessEnum& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConstantOrWitnessEnum* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kConstant:
        _impl_.value_.constant_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Field>(arena, *from._impl_.value_.constant_);
        break;
      case kWitness:
        _impl_.value_.witness_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.value_.witness_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.ConstantOrWitnessEnum)
}
inline PROTOBUF_NDEBUG_INLINE ConstantOrWitnessEnum::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ConstantOrWitnessEnum::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ConstantOrWitnessEnum::~ConstantOrWitnessEnum() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.ConstantOrWitnessEnum)
  SharedDtor(*this);
}
inline void ConstantOrWitnessEnum::SharedDtor(MessageLite& self) {
  ConstantOrWitnessEnum& this_ = static_cast<ConstantOrWitnessEnum&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void ConstantOrWitnessEnum::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:acvm.acir.circuit.ConstantOrWitnessEnum)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kConstant: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.constant_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.constant_);
      }
      break;
    }
    case kWitness: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.witness_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.witness_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* ConstantOrWitnessEnum::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConstantOrWitnessEnum(arena);
}
constexpr auto ConstantOrWitnessEnum::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ConstantOrWitnessEnum),
                                            alignof(ConstantOrWitnessEnum));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConstantOrWitnessEnum::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConstantOrWitnessEnum_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConstantOrWitnessEnum::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConstantOrWitnessEnum>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConstantOrWitnessEnum::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConstantOrWitnessEnum>(), &ConstantOrWitnessEnum::ByteSizeLong,
            &ConstantOrWitnessEnum::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConstantOrWitnessEnum, _impl_._cached_size_),
        false,
    },
    &ConstantOrWitnessEnum::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConstantOrWitnessEnum::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> ConstantOrWitnessEnum::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::ConstantOrWitnessEnum>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.native.Field constant = 1;
    {PROTOBUF_FIELD_OFFSET(ConstantOrWitnessEnum, _impl_.value_.constant_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Witness witness = 2;
    {PROTOBUF_FIELD_OFFSET(ConstantOrWitnessEnum, _impl_.value_.witness_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Field>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ConstantOrWitnessEnum::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.ConstantOrWitnessEnum)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConstantOrWitnessEnum::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConstantOrWitnessEnum& this_ = static_cast<const ConstantOrWitnessEnum&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConstantOrWitnessEnum::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConstantOrWitnessEnum& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.ConstantOrWitnessEnum)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kConstant: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.value_.constant_, this_._impl_.value_.constant_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kWitness: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.value_.witness_, this_._impl_.value_.witness_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.ConstantOrWitnessEnum)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConstantOrWitnessEnum::ByteSizeLong(const MessageLite& base) {
          const ConstantOrWitnessEnum& this_ = static_cast<const ConstantOrWitnessEnum&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConstantOrWitnessEnum::ByteSizeLong() const {
          const ConstantOrWitnessEnum& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.ConstantOrWitnessEnum)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // .acvm.acir.native.Field constant = 1;
            case kConstant: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.constant_);
              break;
            }
            // .acvm.acir.native.Witness witness = 2;
            case kWitness: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.witness_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConstantOrWitnessEnum::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConstantOrWitnessEnum*>(&to_msg);
  auto& from = static_cast<const ConstantOrWitnessEnum&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.ConstantOrWitnessEnum)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kConstant: {
        if (oneof_needs_init) {
          _this->_impl_.value_.constant_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Field>(arena, *from._impl_.value_.constant_);
        } else {
          _this->_impl_.value_.constant_->MergeFrom(from._internal_constant());
        }
        break;
      }
      case kWitness: {
        if (oneof_needs_init) {
          _this->_impl_.value_.witness_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.value_.witness_);
        } else {
          _this->_impl_.value_.witness_->MergeFrom(from._internal_witness());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConstantOrWitnessEnum::CopyFrom(const ConstantOrWitnessEnum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.ConstantOrWitnessEnum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConstantOrWitnessEnum::InternalSwap(ConstantOrWitnessEnum* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ConstantOrWitnessEnum::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MemOp::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MemOp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MemOp, _impl_._has_bits_);
};

void MemOp::clear_operation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.operation_ != nullptr) _impl_.operation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MemOp::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.index_ != nullptr) _impl_.index_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void MemOp::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
MemOp::MemOp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.MemOp)
}
inline PROTOBUF_NDEBUG_INLINE MemOp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::MemOp& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MemOp::MemOp(
    ::google::protobuf::Arena* arena,
    const MemOp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MemOp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.operation_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(
                              arena, *from._impl_.operation_)
                        : nullptr;
  _impl_.index_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(
                              arena, *from._impl_.index_)
                        : nullptr;
  _impl_.value_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(
                              arena, *from._impl_.value_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.MemOp)
}
inline PROTOBUF_NDEBUG_INLINE MemOp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MemOp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, operation_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, operation_) +
               sizeof(Impl_::value_));
}
MemOp::~MemOp() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.MemOp)
  SharedDtor(*this);
}
inline void MemOp::SharedDtor(MessageLite& self) {
  MemOp& this_ = static_cast<MemOp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.operation_;
  delete this_._impl_.index_;
  delete this_._impl_.value_;
  this_._impl_.~Impl_();
}

inline void* MemOp::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MemOp(arena);
}
constexpr auto MemOp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MemOp),
                                            alignof(MemOp));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MemOp::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MemOp_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MemOp::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MemOp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MemOp::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MemOp>(), &MemOp::ByteSizeLong,
            &MemOp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MemOp, _impl_._cached_size_),
        false,
    },
    &MemOp::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MemOp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> MemOp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MemOp, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::MemOp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .acvm.acir.native.Expression operation = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MemOp, _impl_.operation_)}},
    // .acvm.acir.native.Expression index = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MemOp, _impl_.index_)}},
    // .acvm.acir.native.Expression value = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(MemOp, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.native.Expression operation = 1;
    {PROTOBUF_FIELD_OFFSET(MemOp, _impl_.operation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Expression index = 2;
    {PROTOBUF_FIELD_OFFSET(MemOp, _impl_.index_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Expression value = 3;
    {PROTOBUF_FIELD_OFFSET(MemOp, _impl_.value_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MemOp::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.MemOp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.operation_ != nullptr);
      _impl_.operation_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.index_ != nullptr);
      _impl_.index_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MemOp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MemOp& this_ = static_cast<const MemOp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MemOp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MemOp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.MemOp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.native.Expression operation = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.operation_, this_._impl_.operation_->GetCachedSize(), target,
                stream);
          }

          // .acvm.acir.native.Expression index = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.index_, this_._impl_.index_->GetCachedSize(), target,
                stream);
          }

          // .acvm.acir.native.Expression value = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.value_, this_._impl_.value_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.MemOp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MemOp::ByteSizeLong(const MessageLite& base) {
          const MemOp& this_ = static_cast<const MemOp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MemOp::ByteSizeLong() const {
          const MemOp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.MemOp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .acvm.acir.native.Expression operation = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.operation_);
            }
            // .acvm.acir.native.Expression index = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.index_);
            }
            // .acvm.acir.native.Expression value = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MemOp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MemOp*>(&to_msg);
  auto& from = static_cast<const MemOp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.MemOp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.operation_ != nullptr);
      if (_this->_impl_.operation_ == nullptr) {
        _this->_impl_.operation_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.operation_);
      } else {
        _this->_impl_.operation_->MergeFrom(*from._impl_.operation_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.index_ != nullptr);
      if (_this->_impl_.index_ == nullptr) {
        _this->_impl_.index_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.index_);
      } else {
        _this->_impl_.index_->MergeFrom(*from._impl_.index_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.value_ != nullptr);
      if (_this->_impl_.value_ == nullptr) {
        _this->_impl_.value_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.value_);
      } else {
        _this->_impl_.value_->MergeFrom(*from._impl_.value_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MemOp::CopyFrom(const MemOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.MemOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MemOp::InternalSwap(MemOp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemOp, _impl_.value_)
      + sizeof(MemOp::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(MemOp, _impl_.operation_)>(
          reinterpret_cast<char*>(&_impl_.operation_),
          reinterpret_cast<char*>(&other->_impl_.operation_));
}

::google::protobuf::Metadata MemOp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockType_Memory::_Internal {
 public:
};

BlockType_Memory::BlockType_Memory(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlockType.Memory)
}
BlockType_Memory::BlockType_Memory(
    ::google::protobuf::Arena* arena,
    const BlockType_Memory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockType_Memory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlockType.Memory)
}

inline void* BlockType_Memory::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlockType_Memory(arena);
}
constexpr auto BlockType_Memory::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlockType_Memory),
                                            alignof(BlockType_Memory));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlockType_Memory::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlockType_Memory_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlockType_Memory::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<BlockType_Memory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlockType_Memory::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<BlockType_Memory>(), &BlockType_Memory::ByteSizeLong,
            &BlockType_Memory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlockType_Memory, _impl_._cached_size_),
        false,
    },
    &BlockType_Memory::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlockType_Memory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> BlockType_Memory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlockType_Memory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata BlockType_Memory::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockType_CallData::_Internal {
 public:
};

BlockType_CallData::BlockType_CallData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlockType.CallData)
}
BlockType_CallData::BlockType_CallData(
    ::google::protobuf::Arena* arena, const BlockType_CallData& from)
    : BlockType_CallData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BlockType_CallData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlockType_CallData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
BlockType_CallData::~BlockType_CallData() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlockType.CallData)
  SharedDtor(*this);
}
inline void BlockType_CallData::SharedDtor(MessageLite& self) {
  BlockType_CallData& this_ = static_cast<BlockType_CallData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BlockType_CallData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlockType_CallData(arena);
}
constexpr auto BlockType_CallData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlockType_CallData),
                                            alignof(BlockType_CallData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlockType_CallData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlockType_CallData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlockType_CallData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlockType_CallData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlockType_CallData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlockType_CallData>(), &BlockType_CallData::ByteSizeLong,
            &BlockType_CallData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlockType_CallData, _impl_._cached_size_),
        false,
    },
    &BlockType_CallData::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlockType_CallData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BlockType_CallData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlockType_CallData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockType_CallData, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlockType_CallData, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 value = 1;
    {PROTOBUF_FIELD_OFFSET(BlockType_CallData, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BlockType_CallData::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlockType.CallData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlockType_CallData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlockType_CallData& this_ = static_cast<const BlockType_CallData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlockType_CallData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlockType_CallData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlockType.CallData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 value = 1;
          if (this_._internal_value() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_value(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlockType.CallData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlockType_CallData::ByteSizeLong(const MessageLite& base) {
          const BlockType_CallData& this_ = static_cast<const BlockType_CallData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlockType_CallData::ByteSizeLong() const {
          const BlockType_CallData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlockType.CallData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 value = 1;
            if (this_._internal_value() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlockType_CallData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockType_CallData*>(&to_msg);
  auto& from = static_cast<const BlockType_CallData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlockType.CallData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockType_CallData::CopyFrom(const BlockType_CallData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlockType.CallData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockType_CallData::InternalSwap(BlockType_CallData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata BlockType_CallData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockType_ReturnData::_Internal {
 public:
};

BlockType_ReturnData::BlockType_ReturnData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlockType.ReturnData)
}
BlockType_ReturnData::BlockType_ReturnData(
    ::google::protobuf::Arena* arena,
    const BlockType_ReturnData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockType_ReturnData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlockType.ReturnData)
}

inline void* BlockType_ReturnData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlockType_ReturnData(arena);
}
constexpr auto BlockType_ReturnData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlockType_ReturnData),
                                            alignof(BlockType_ReturnData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlockType_ReturnData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlockType_ReturnData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlockType_ReturnData::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<BlockType_ReturnData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlockType_ReturnData::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<BlockType_ReturnData>(), &BlockType_ReturnData::ByteSizeLong,
            &BlockType_ReturnData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlockType_ReturnData, _impl_._cached_size_),
        false,
    },
    &BlockType_ReturnData::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlockType_ReturnData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> BlockType_ReturnData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlockType_ReturnData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata BlockType_ReturnData::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockType::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BlockType, _impl_._oneof_case_);
};

void BlockType::set_allocated_memory(::acvm::acir::circuit::BlockType_Memory* memory) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (memory) {
    ::google::protobuf::Arena* submessage_arena = memory->GetArena();
    if (message_arena != submessage_arena) {
      memory = ::google::protobuf::internal::GetOwnedMessage(message_arena, memory, submessage_arena);
    }
    set_has_memory();
    _impl_.value_.memory_ = memory;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlockType.memory)
}
void BlockType::set_allocated_call_data(::acvm::acir::circuit::BlockType_CallData* call_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (call_data) {
    ::google::protobuf::Arena* submessage_arena = call_data->GetArena();
    if (message_arena != submessage_arena) {
      call_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, call_data, submessage_arena);
    }
    set_has_call_data();
    _impl_.value_.call_data_ = call_data;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlockType.call_data)
}
void BlockType::set_allocated_return_data(::acvm::acir::circuit::BlockType_ReturnData* return_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (return_data) {
    ::google::protobuf::Arena* submessage_arena = return_data->GetArena();
    if (message_arena != submessage_arena) {
      return_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, return_data, submessage_arena);
    }
    set_has_return_data();
    _impl_.value_.return_data_ = return_data;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BlockType.return_data)
}
BlockType::BlockType(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BlockType)
}
inline PROTOBUF_NDEBUG_INLINE BlockType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BlockType& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BlockType::BlockType(
    ::google::protobuf::Arena* arena,
    const BlockType& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kMemory:
        _impl_.value_.memory_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlockType_Memory>(arena, *from._impl_.value_.memory_);
        break;
      case kCallData:
        _impl_.value_.call_data_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlockType_CallData>(arena, *from._impl_.value_.call_data_);
        break;
      case kReturnData:
        _impl_.value_.return_data_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlockType_ReturnData>(arena, *from._impl_.value_.return_data_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BlockType)
}
inline PROTOBUF_NDEBUG_INLINE BlockType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BlockType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlockType::~BlockType() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BlockType)
  SharedDtor(*this);
}
inline void BlockType::SharedDtor(MessageLite& self) {
  BlockType& this_ = static_cast<BlockType&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void BlockType::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:acvm.acir.circuit.BlockType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kMemory: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.memory_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.memory_);
      }
      break;
    }
    case kCallData: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.call_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.call_data_);
      }
      break;
    }
    case kReturnData: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.return_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.return_data_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* BlockType::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlockType(arena);
}
constexpr auto BlockType::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlockType),
                                            alignof(BlockType));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlockType::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlockType_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlockType::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlockType>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlockType::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlockType>(), &BlockType::ByteSizeLong,
            &BlockType::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlockType, _impl_._cached_size_),
        false,
    },
    &BlockType::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlockType::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> BlockType::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlockType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.circuit.BlockType.Memory memory = 1;
    {PROTOBUF_FIELD_OFFSET(BlockType, _impl_.value_.memory_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlockType.CallData call_data = 2;
    {PROTOBUF_FIELD_OFFSET(BlockType, _impl_.value_.call_data_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BlockType.ReturnData return_data = 3;
    {PROTOBUF_FIELD_OFFSET(BlockType, _impl_.value_.return_data_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlockType_Memory>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlockType_CallData>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BlockType_ReturnData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlockType::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BlockType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlockType::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlockType& this_ = static_cast<const BlockType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlockType::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlockType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BlockType)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kMemory: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.value_.memory_, this_._impl_.value_.memory_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCallData: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.value_.call_data_, this_._impl_.value_.call_data_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReturnData: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.value_.return_data_, this_._impl_.value_.return_data_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BlockType)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlockType::ByteSizeLong(const MessageLite& base) {
          const BlockType& this_ = static_cast<const BlockType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlockType::ByteSizeLong() const {
          const BlockType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BlockType)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // .acvm.acir.circuit.BlockType.Memory memory = 1;
            case kMemory: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.memory_);
              break;
            }
            // .acvm.acir.circuit.BlockType.CallData call_data = 2;
            case kCallData: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.call_data_);
              break;
            }
            // .acvm.acir.circuit.BlockType.ReturnData return_data = 3;
            case kReturnData: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.return_data_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlockType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockType*>(&to_msg);
  auto& from = static_cast<const BlockType&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BlockType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMemory: {
        if (oneof_needs_init) {
          _this->_impl_.value_.memory_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlockType_Memory>(arena, *from._impl_.value_.memory_);
        } else {
          _this->_impl_.value_.memory_->MergeFrom(from._internal_memory());
        }
        break;
      }
      case kCallData: {
        if (oneof_needs_init) {
          _this->_impl_.value_.call_data_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlockType_CallData>(arena, *from._impl_.value_.call_data_);
        } else {
          _this->_impl_.value_.call_data_->MergeFrom(from._internal_call_data());
        }
        break;
      }
      case kReturnData: {
        if (oneof_needs_init) {
          _this->_impl_.value_.return_data_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BlockType_ReturnData>(arena, *from._impl_.value_.return_data_);
        } else {
          _this->_impl_.value_.return_data_->MergeFrom(from._internal_return_data());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockType::CopyFrom(const BlockType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BlockType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockType::InternalSwap(BlockType* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BlockType::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BrilligInputs_Array::_Internal {
 public:
};

void BrilligInputs_Array::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
BrilligInputs_Array::BrilligInputs_Array(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BrilligInputs.Array)
}
inline PROTOBUF_NDEBUG_INLINE BrilligInputs_Array::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BrilligInputs_Array& from_msg)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

BrilligInputs_Array::BrilligInputs_Array(
    ::google::protobuf::Arena* arena,
    const BrilligInputs_Array& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BrilligInputs_Array* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BrilligInputs.Array)
}
inline PROTOBUF_NDEBUG_INLINE BrilligInputs_Array::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void BrilligInputs_Array::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BrilligInputs_Array::~BrilligInputs_Array() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BrilligInputs.Array)
  SharedDtor(*this);
}
inline void BrilligInputs_Array::SharedDtor(MessageLite& self) {
  BrilligInputs_Array& this_ = static_cast<BrilligInputs_Array&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BrilligInputs_Array::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BrilligInputs_Array(arena);
}
constexpr auto BrilligInputs_Array::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BrilligInputs_Array, _impl_.values_) +
          decltype(BrilligInputs_Array::_impl_.values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BrilligInputs_Array), alignof(BrilligInputs_Array), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BrilligInputs_Array::PlacementNew_,
                                 sizeof(BrilligInputs_Array),
                                 alignof(BrilligInputs_Array));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BrilligInputs_Array::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BrilligInputs_Array_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BrilligInputs_Array::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BrilligInputs_Array>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BrilligInputs_Array::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BrilligInputs_Array>(), &BrilligInputs_Array::ByteSizeLong,
            &BrilligInputs_Array::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BrilligInputs_Array, _impl_._cached_size_),
        false,
    },
    &BrilligInputs_Array::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BrilligInputs_Array::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BrilligInputs_Array::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BrilligInputs_Array>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .acvm.acir.native.Expression values = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BrilligInputs_Array, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.native.Expression values = 2;
    {PROTOBUF_FIELD_OFFSET(BrilligInputs_Array, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BrilligInputs_Array::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BrilligInputs.Array)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BrilligInputs_Array::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BrilligInputs_Array& this_ = static_cast<const BrilligInputs_Array&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BrilligInputs_Array::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BrilligInputs_Array& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BrilligInputs.Array)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.native.Expression values = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_values_size());
               i < n; i++) {
            const auto& repfield = this_._internal_values().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BrilligInputs.Array)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BrilligInputs_Array::ByteSizeLong(const MessageLite& base) {
          const BrilligInputs_Array& this_ = static_cast<const BrilligInputs_Array&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BrilligInputs_Array::ByteSizeLong() const {
          const BrilligInputs_Array& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BrilligInputs.Array)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.native.Expression values = 2;
            {
              total_size += 1UL * this_._internal_values_size();
              for (const auto& msg : this_._internal_values()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BrilligInputs_Array::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BrilligInputs_Array*>(&to_msg);
  auto& from = static_cast<const BrilligInputs_Array&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BrilligInputs.Array)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(
      from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrilligInputs_Array::CopyFrom(const BrilligInputs_Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BrilligInputs.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BrilligInputs_Array::InternalSwap(BrilligInputs_Array* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata BrilligInputs_Array::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BrilligInputs::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligInputs, _impl_._oneof_case_);
};

void BrilligInputs::set_allocated_single(::acvm::acir::native::Expression* single) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (single) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(single)->GetArena();
    if (message_arena != submessage_arena) {
      single = ::google::protobuf::internal::GetOwnedMessage(message_arena, single, submessage_arena);
    }
    set_has_single();
    _impl_.value_.single_ = single;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BrilligInputs.single)
}
void BrilligInputs::clear_single() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kSingle) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.single_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.single_);
    }
    clear_has_value();
  }
}
void BrilligInputs::set_allocated_array(::acvm::acir::circuit::BrilligInputs_Array* array) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (array) {
    ::google::protobuf::Arena* submessage_arena = array->GetArena();
    if (message_arena != submessage_arena) {
      array = ::google::protobuf::internal::GetOwnedMessage(message_arena, array, submessage_arena);
    }
    set_has_array();
    _impl_.value_.array_ = array;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BrilligInputs.array)
}
BrilligInputs::BrilligInputs(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BrilligInputs)
}
inline PROTOBUF_NDEBUG_INLINE BrilligInputs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BrilligInputs& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BrilligInputs::BrilligInputs(
    ::google::protobuf::Arena* arena,
    const BrilligInputs& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BrilligInputs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kSingle:
        _impl_.value_.single_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.value_.single_);
        break;
      case kArray:
        _impl_.value_.array_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BrilligInputs_Array>(arena, *from._impl_.value_.array_);
        break;
      case kMemoryArray:
        _impl_.value_.memory_array_ = from._impl_.value_.memory_array_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BrilligInputs)
}
inline PROTOBUF_NDEBUG_INLINE BrilligInputs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BrilligInputs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BrilligInputs::~BrilligInputs() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BrilligInputs)
  SharedDtor(*this);
}
inline void BrilligInputs::SharedDtor(MessageLite& self) {
  BrilligInputs& this_ = static_cast<BrilligInputs&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void BrilligInputs::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:acvm.acir.circuit.BrilligInputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kSingle: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.single_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.single_);
      }
      break;
    }
    case kArray: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.array_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.array_);
      }
      break;
    }
    case kMemoryArray: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* BrilligInputs::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BrilligInputs(arena);
}
constexpr auto BrilligInputs::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BrilligInputs),
                                            alignof(BrilligInputs));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BrilligInputs::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BrilligInputs_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BrilligInputs::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BrilligInputs>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BrilligInputs::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BrilligInputs>(), &BrilligInputs::ByteSizeLong,
            &BrilligInputs::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BrilligInputs, _impl_._cached_size_),
        false,
    },
    &BrilligInputs::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BrilligInputs::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 0, 2> BrilligInputs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BrilligInputs>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.native.Expression single = 1;
    {PROTOBUF_FIELD_OFFSET(BrilligInputs, _impl_.value_.single_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BrilligInputs.Array array = 2;
    {PROTOBUF_FIELD_OFFSET(BrilligInputs, _impl_.value_.array_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 memory_array = 3;
    {PROTOBUF_FIELD_OFFSET(BrilligInputs, _impl_.value_.memory_array_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BrilligInputs_Array>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BrilligInputs::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BrilligInputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BrilligInputs::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BrilligInputs& this_ = static_cast<const BrilligInputs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BrilligInputs::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BrilligInputs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BrilligInputs)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kSingle: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.value_.single_, this_._impl_.value_.single_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kArray: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.value_.array_, this_._impl_.value_.array_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMemoryArray: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                  3, this_._internal_memory_array(), target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BrilligInputs)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BrilligInputs::ByteSizeLong(const MessageLite& base) {
          const BrilligInputs& this_ = static_cast<const BrilligInputs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BrilligInputs::ByteSizeLong() const {
          const BrilligInputs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BrilligInputs)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // .acvm.acir.native.Expression single = 1;
            case kSingle: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.single_);
              break;
            }
            // .acvm.acir.circuit.BrilligInputs.Array array = 2;
            case kArray: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.array_);
              break;
            }
            // uint32 memory_array = 3;
            case kMemoryArray: {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_memory_array());
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BrilligInputs::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BrilligInputs*>(&to_msg);
  auto& from = static_cast<const BrilligInputs&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BrilligInputs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSingle: {
        if (oneof_needs_init) {
          _this->_impl_.value_.single_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Expression>(arena, *from._impl_.value_.single_);
        } else {
          _this->_impl_.value_.single_->MergeFrom(from._internal_single());
        }
        break;
      }
      case kArray: {
        if (oneof_needs_init) {
          _this->_impl_.value_.array_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BrilligInputs_Array>(arena, *from._impl_.value_.array_);
        } else {
          _this->_impl_.value_.array_->MergeFrom(from._internal_array());
        }
        break;
      }
      case kMemoryArray: {
        _this->_impl_.value_.memory_array_ = from._impl_.value_.memory_array_;
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrilligInputs::CopyFrom(const BrilligInputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BrilligInputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BrilligInputs::InternalSwap(BrilligInputs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BrilligInputs::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BrilligOutputs_Array::_Internal {
 public:
};

void BrilligOutputs_Array::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
BrilligOutputs_Array::BrilligOutputs_Array(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BrilligOutputs.Array)
}
inline PROTOBUF_NDEBUG_INLINE BrilligOutputs_Array::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BrilligOutputs_Array& from_msg)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

BrilligOutputs_Array::BrilligOutputs_Array(
    ::google::protobuf::Arena* arena,
    const BrilligOutputs_Array& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BrilligOutputs_Array* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BrilligOutputs.Array)
}
inline PROTOBUF_NDEBUG_INLINE BrilligOutputs_Array::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void BrilligOutputs_Array::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BrilligOutputs_Array::~BrilligOutputs_Array() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BrilligOutputs.Array)
  SharedDtor(*this);
}
inline void BrilligOutputs_Array::SharedDtor(MessageLite& self) {
  BrilligOutputs_Array& this_ = static_cast<BrilligOutputs_Array&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BrilligOutputs_Array::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BrilligOutputs_Array(arena);
}
constexpr auto BrilligOutputs_Array::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BrilligOutputs_Array, _impl_.values_) +
          decltype(BrilligOutputs_Array::_impl_.values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BrilligOutputs_Array), alignof(BrilligOutputs_Array), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BrilligOutputs_Array::PlacementNew_,
                                 sizeof(BrilligOutputs_Array),
                                 alignof(BrilligOutputs_Array));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BrilligOutputs_Array::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BrilligOutputs_Array_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BrilligOutputs_Array::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BrilligOutputs_Array>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BrilligOutputs_Array::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BrilligOutputs_Array>(), &BrilligOutputs_Array::ByteSizeLong,
            &BrilligOutputs_Array::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BrilligOutputs_Array, _impl_._cached_size_),
        false,
    },
    &BrilligOutputs_Array::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BrilligOutputs_Array::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BrilligOutputs_Array::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BrilligOutputs_Array>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .acvm.acir.native.Witness values = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BrilligOutputs_Array, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.native.Witness values = 1;
    {PROTOBUF_FIELD_OFFSET(BrilligOutputs_Array, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BrilligOutputs_Array::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BrilligOutputs.Array)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BrilligOutputs_Array::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BrilligOutputs_Array& this_ = static_cast<const BrilligOutputs_Array&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BrilligOutputs_Array::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BrilligOutputs_Array& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BrilligOutputs.Array)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.native.Witness values = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_values_size());
               i < n; i++) {
            const auto& repfield = this_._internal_values().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BrilligOutputs.Array)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BrilligOutputs_Array::ByteSizeLong(const MessageLite& base) {
          const BrilligOutputs_Array& this_ = static_cast<const BrilligOutputs_Array&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BrilligOutputs_Array::ByteSizeLong() const {
          const BrilligOutputs_Array& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BrilligOutputs.Array)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.native.Witness values = 1;
            {
              total_size += 1UL * this_._internal_values_size();
              for (const auto& msg : this_._internal_values()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BrilligOutputs_Array::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BrilligOutputs_Array*>(&to_msg);
  auto& from = static_cast<const BrilligOutputs_Array&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BrilligOutputs.Array)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(
      from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrilligOutputs_Array::CopyFrom(const BrilligOutputs_Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BrilligOutputs.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BrilligOutputs_Array::InternalSwap(BrilligOutputs_Array* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata BrilligOutputs_Array::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BrilligOutputs::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::acvm::acir::circuit::BrilligOutputs, _impl_._oneof_case_);
};

void BrilligOutputs::set_allocated_simple(::acvm::acir::native::Witness* simple) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (simple) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(simple)->GetArena();
    if (message_arena != submessage_arena) {
      simple = ::google::protobuf::internal::GetOwnedMessage(message_arena, simple, submessage_arena);
    }
    set_has_simple();
    _impl_.value_.simple_ = simple;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BrilligOutputs.simple)
}
void BrilligOutputs::clear_simple() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kSimple) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.simple_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.simple_);
    }
    clear_has_value();
  }
}
void BrilligOutputs::set_allocated_array(::acvm::acir::circuit::BrilligOutputs_Array* array) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (array) {
    ::google::protobuf::Arena* submessage_arena = array->GetArena();
    if (message_arena != submessage_arena) {
      array = ::google::protobuf::internal::GetOwnedMessage(message_arena, array, submessage_arena);
    }
    set_has_array();
    _impl_.value_.array_ = array;
  }
  // @@protoc_insertion_point(field_set_allocated:acvm.acir.circuit.BrilligOutputs.array)
}
BrilligOutputs::BrilligOutputs(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.circuit.BrilligOutputs)
}
inline PROTOBUF_NDEBUG_INLINE BrilligOutputs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::circuit::BrilligOutputs& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BrilligOutputs::BrilligOutputs(
    ::google::protobuf::Arena* arena,
    const BrilligOutputs& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BrilligOutputs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kSimple:
        _impl_.value_.simple_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.value_.simple_);
        break;
      case kArray:
        _impl_.value_.array_ = ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BrilligOutputs_Array>(arena, *from._impl_.value_.array_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:acvm.acir.circuit.BrilligOutputs)
}
inline PROTOBUF_NDEBUG_INLINE BrilligOutputs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BrilligOutputs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BrilligOutputs::~BrilligOutputs() {
  // @@protoc_insertion_point(destructor:acvm.acir.circuit.BrilligOutputs)
  SharedDtor(*this);
}
inline void BrilligOutputs::SharedDtor(MessageLite& self) {
  BrilligOutputs& this_ = static_cast<BrilligOutputs&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void BrilligOutputs::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:acvm.acir.circuit.BrilligOutputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kSimple: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.simple_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.simple_);
      }
      break;
    }
    case kArray: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.array_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.array_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* BrilligOutputs::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BrilligOutputs(arena);
}
constexpr auto BrilligOutputs::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BrilligOutputs),
                                            alignof(BrilligOutputs));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BrilligOutputs::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BrilligOutputs_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BrilligOutputs::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BrilligOutputs>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BrilligOutputs::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BrilligOutputs>(), &BrilligOutputs::ByteSizeLong,
            &BrilligOutputs::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BrilligOutputs, _impl_._cached_size_),
        false,
    },
    &BrilligOutputs::kDescriptorMethods,
    &descriptor_table_acir_2fcircuit_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BrilligOutputs::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> BrilligOutputs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::circuit::BrilligOutputs>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.native.Witness simple = 1;
    {PROTOBUF_FIELD_OFFSET(BrilligOutputs, _impl_.value_.simple_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.circuit.BrilligOutputs.Array array = 2;
    {PROTOBUF_FIELD_OFFSET(BrilligOutputs, _impl_.value_.array_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::circuit::BrilligOutputs_Array>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BrilligOutputs::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.circuit.BrilligOutputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BrilligOutputs::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BrilligOutputs& this_ = static_cast<const BrilligOutputs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BrilligOutputs::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BrilligOutputs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.circuit.BrilligOutputs)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kSimple: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.value_.simple_, this_._impl_.value_.simple_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kArray: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.value_.array_, this_._impl_.value_.array_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.circuit.BrilligOutputs)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BrilligOutputs::ByteSizeLong(const MessageLite& base) {
          const BrilligOutputs& this_ = static_cast<const BrilligOutputs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BrilligOutputs::ByteSizeLong() const {
          const BrilligOutputs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.circuit.BrilligOutputs)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // .acvm.acir.native.Witness simple = 1;
            case kSimple: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.simple_);
              break;
            }
            // .acvm.acir.circuit.BrilligOutputs.Array array = 2;
            case kArray: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.array_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BrilligOutputs::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BrilligOutputs*>(&to_msg);
  auto& from = static_cast<const BrilligOutputs&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.circuit.BrilligOutputs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSimple: {
        if (oneof_needs_init) {
          _this->_impl_.value_.simple_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.value_.simple_);
        } else {
          _this->_impl_.value_.simple_->MergeFrom(from._internal_simple());
        }
        break;
      }
      case kArray: {
        if (oneof_needs_init) {
          _this->_impl_.value_.array_ =
              ::google::protobuf::Message::CopyConstruct<::acvm::acir::circuit::BrilligOutputs_Array>(arena, *from._impl_.value_.array_);
        } else {
          _this->_impl_.value_.array_->MergeFrom(from._internal_array());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrilligOutputs::CopyFrom(const BrilligOutputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.circuit.BrilligOutputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BrilligOutputs::InternalSwap(BrilligOutputs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BrilligOutputs::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace circuit
}  // namespace acir
}  // namespace acvm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_acir_2fcircuit_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
