// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: acir/native.proto
// Protobuf C++ Version: 5.29.3

#include "acir/native.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace acvm {
namespace acir {
namespace native {

inline constexpr Witness::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Witness::Witness(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WitnessDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WitnessDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WitnessDefaultTypeInternal() {}
  union {
    Witness _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WitnessDefaultTypeInternal _Witness_default_instance_;

inline constexpr Field::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Field::Field(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldDefaultTypeInternal() {}
  union {
    Field _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldDefaultTypeInternal _Field_default_instance_;

inline constexpr Expression_MulTerm::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        q_m_{nullptr},
        witness_left_{nullptr},
        witness_right_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Expression_MulTerm::Expression_MulTerm(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Expression_MulTermDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expression_MulTermDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expression_MulTermDefaultTypeInternal() {}
  union {
    Expression_MulTerm _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expression_MulTermDefaultTypeInternal _Expression_MulTerm_default_instance_;

inline constexpr Expression_LinearCombination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        q_l_{nullptr},
        witness_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Expression_LinearCombination::Expression_LinearCombination(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Expression_LinearCombinationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expression_LinearCombinationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expression_LinearCombinationDefaultTypeInternal() {}
  union {
    Expression_LinearCombination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expression_LinearCombinationDefaultTypeInternal _Expression_LinearCombination_default_instance_;

inline constexpr Expression::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mul_terms_{},
        linear_combinations_{},
        q_c_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Expression::Expression(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExpressionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExpressionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExpressionDefaultTypeInternal() {}
  union {
    Expression _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExpressionDefaultTypeInternal _Expression_default_instance_;
}  // namespace native
}  // namespace acir
}  // namespace acvm
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_acir_2fnative_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_acir_2fnative_2eproto = nullptr;
const ::uint32_t
    TableStruct_acir_2fnative_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Field, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Field, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Witness, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Witness, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression_MulTerm, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression_MulTerm, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression_MulTerm, _impl_.q_m_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression_MulTerm, _impl_.witness_left_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression_MulTerm, _impl_.witness_right_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression_LinearCombination, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression_LinearCombination, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression_LinearCombination, _impl_.q_l_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression_LinearCombination, _impl_.witness_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression, _impl_.mul_terms_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression, _impl_.linear_combinations_),
        PROTOBUF_FIELD_OFFSET(::acvm::acir::native::Expression, _impl_.q_c_),
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::acvm::acir::native::Field)},
        {9, -1, -1, sizeof(::acvm::acir::native::Witness)},
        {18, 29, -1, sizeof(::acvm::acir::native::Expression_MulTerm)},
        {32, 42, -1, sizeof(::acvm::acir::native::Expression_LinearCombination)},
        {44, 55, -1, sizeof(::acvm::acir::native::Expression)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::acvm::acir::native::_Field_default_instance_._instance,
    &::acvm::acir::native::_Witness_default_instance_._instance,
    &::acvm::acir::native::_Expression_MulTerm_default_instance_._instance,
    &::acvm::acir::native::_Expression_LinearCombination_default_instance_._instance,
    &::acvm::acir::native::_Expression_default_instance_._instance,
};
const char descriptor_table_protodef_acir_2fnative_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021acir/native.proto\022\020acvm.acir.native\"\026\n"
    "\005Field\022\r\n\005value\030\001 \001(\014\"\030\n\007Witness\022\r\n\005inde"
    "x\030\001 \001(\r\"\264\003\n\nExpression\0227\n\tmul_terms\030\001 \003("
    "\0132$.acvm.acir.native.Expression.MulTerm\022"
    "K\n\023linear_combinations\030\002 \003(\0132..acvm.acir"
    ".native.Expression.LinearCombination\022$\n\003"
    "q_c\030\003 \001(\0132\027.acvm.acir.native.Field\032\222\001\n\007M"
    "ulTerm\022$\n\003q_m\030\001 \001(\0132\027.acvm.acir.native.F"
    "ield\022/\n\014witness_left\030\002 \001(\0132\031.acvm.acir.n"
    "ative.Witness\0220\n\rwitness_right\030\003 \001(\0132\031.a"
    "cvm.acir.native.Witness\032e\n\021LinearCombina"
    "tion\022$\n\003q_l\030\001 \001(\0132\027.acvm.acir.native.Fie"
    "ld\022*\n\007witness\030\002 \001(\0132\031.acvm.acir.native.W"
    "itnessb\006proto3"
};
static ::absl::once_flag descriptor_table_acir_2fnative_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_acir_2fnative_2eproto = {
    false,
    false,
    534,
    descriptor_table_protodef_acir_2fnative_2eproto,
    "acir/native.proto",
    &descriptor_table_acir_2fnative_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_acir_2fnative_2eproto::offsets,
    file_level_enum_descriptors_acir_2fnative_2eproto,
    file_level_service_descriptors_acir_2fnative_2eproto,
};
namespace acvm {
namespace acir {
namespace native {
// ===================================================================

class Field::_Internal {
 public:
};

Field::Field(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.native.Field)
}
inline PROTOBUF_NDEBUG_INLINE Field::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::native::Field& from_msg)
      : value_(arena, from.value_),
        _cached_size_{0} {}

Field::Field(
    ::google::protobuf::Arena* arena,
    const Field& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Field* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:acvm.acir.native.Field)
}
inline PROTOBUF_NDEBUG_INLINE Field::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_(arena),
        _cached_size_{0} {}

inline void Field::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Field::~Field() {
  // @@protoc_insertion_point(destructor:acvm.acir.native.Field)
  SharedDtor(*this);
}
inline void Field::SharedDtor(MessageLite& self) {
  Field& this_ = static_cast<Field&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Field::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Field(arena);
}
constexpr auto Field::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Field),
                                            alignof(Field));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Field::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Field_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Field::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Field>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Field::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Field>(), &Field::ByteSizeLong,
            &Field::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Field, _impl_._cached_size_),
        false,
    },
    &Field::kDescriptorMethods,
    &descriptor_table_acir_2fnative_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Field::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Field::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::native::Field>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes value = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Field, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes value = 1;
    {PROTOBUF_FIELD_OFFSET(Field, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.native.Field)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Field::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Field& this_ = static_cast<const Field&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Field::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Field& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.native.Field)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes value = 1;
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.native.Field)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Field::ByteSizeLong(const MessageLite& base) {
          const Field& this_ = static_cast<const Field&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Field::ByteSizeLong() const {
          const Field& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.native.Field)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes value = 1;
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Field::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Field*>(&to_msg);
  auto& from = static_cast<const Field&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.native.Field)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.native.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Field::InternalSwap(Field* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata Field::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Witness::_Internal {
 public:
};

Witness::Witness(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.native.Witness)
}
Witness::Witness(
    ::google::protobuf::Arena* arena, const Witness& from)
    : Witness(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Witness::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Witness::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
Witness::~Witness() {
  // @@protoc_insertion_point(destructor:acvm.acir.native.Witness)
  SharedDtor(*this);
}
inline void Witness::SharedDtor(MessageLite& self) {
  Witness& this_ = static_cast<Witness&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Witness::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Witness(arena);
}
constexpr auto Witness::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Witness),
                                            alignof(Witness));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Witness::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Witness_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Witness::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Witness>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Witness::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Witness>(), &Witness::ByteSizeLong,
            &Witness::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Witness, _impl_._cached_size_),
        false,
    },
    &Witness::kDescriptorMethods,
    &descriptor_table_acir_2fnative_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Witness::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Witness::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Witness, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Witness, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 index = 1;
    {PROTOBUF_FIELD_OFFSET(Witness, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Witness::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.native.Witness)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Witness::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Witness& this_ = static_cast<const Witness&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Witness::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Witness& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.native.Witness)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 index = 1;
          if (this_._internal_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.native.Witness)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Witness::ByteSizeLong(const MessageLite& base) {
          const Witness& this_ = static_cast<const Witness&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Witness::ByteSizeLong() const {
          const Witness& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.native.Witness)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 index = 1;
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Witness::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Witness*>(&to_msg);
  auto& from = static_cast<const Witness&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.native.Witness)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Witness::CopyFrom(const Witness& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.native.Witness)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Witness::InternalSwap(Witness* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata Witness::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Expression_MulTerm::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Expression_MulTerm>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_._has_bits_);
};

Expression_MulTerm::Expression_MulTerm(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.native.Expression.MulTerm)
}
inline PROTOBUF_NDEBUG_INLINE Expression_MulTerm::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::native::Expression_MulTerm& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Expression_MulTerm::Expression_MulTerm(
    ::google::protobuf::Arena* arena,
    const Expression_MulTerm& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Expression_MulTerm* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.q_m_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Field>(
                              arena, *from._impl_.q_m_)
                        : nullptr;
  _impl_.witness_left_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(
                              arena, *from._impl_.witness_left_)
                        : nullptr;
  _impl_.witness_right_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(
                              arena, *from._impl_.witness_right_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.native.Expression.MulTerm)
}
inline PROTOBUF_NDEBUG_INLINE Expression_MulTerm::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Expression_MulTerm::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, q_m_),
           0,
           offsetof(Impl_, witness_right_) -
               offsetof(Impl_, q_m_) +
               sizeof(Impl_::witness_right_));
}
Expression_MulTerm::~Expression_MulTerm() {
  // @@protoc_insertion_point(destructor:acvm.acir.native.Expression.MulTerm)
  SharedDtor(*this);
}
inline void Expression_MulTerm::SharedDtor(MessageLite& self) {
  Expression_MulTerm& this_ = static_cast<Expression_MulTerm&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.q_m_;
  delete this_._impl_.witness_left_;
  delete this_._impl_.witness_right_;
  this_._impl_.~Impl_();
}

inline void* Expression_MulTerm::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Expression_MulTerm(arena);
}
constexpr auto Expression_MulTerm::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Expression_MulTerm),
                                            alignof(Expression_MulTerm));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Expression_MulTerm::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Expression_MulTerm_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Expression_MulTerm::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Expression_MulTerm>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Expression_MulTerm::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Expression_MulTerm>(), &Expression_MulTerm::ByteSizeLong,
            &Expression_MulTerm::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_._cached_size_),
        false,
    },
    &Expression_MulTerm::kDescriptorMethods,
    &descriptor_table_acir_2fnative_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Expression_MulTerm::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Expression_MulTerm::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::native::Expression_MulTerm>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .acvm.acir.native.Field q_m = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_.q_m_)}},
    // .acvm.acir.native.Witness witness_left = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_.witness_left_)}},
    // .acvm.acir.native.Witness witness_right = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_.witness_right_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.native.Field q_m = 1;
    {PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_.q_m_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Witness witness_left = 2;
    {PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_.witness_left_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Witness witness_right = 3;
    {PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_.witness_right_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Field>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Expression_MulTerm::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.native.Expression.MulTerm)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.q_m_ != nullptr);
      _impl_.q_m_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.witness_left_ != nullptr);
      _impl_.witness_left_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.witness_right_ != nullptr);
      _impl_.witness_right_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Expression_MulTerm::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Expression_MulTerm& this_ = static_cast<const Expression_MulTerm&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Expression_MulTerm::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Expression_MulTerm& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.native.Expression.MulTerm)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.native.Field q_m = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.q_m_, this_._impl_.q_m_->GetCachedSize(), target,
                stream);
          }

          // .acvm.acir.native.Witness witness_left = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.witness_left_, this_._impl_.witness_left_->GetCachedSize(), target,
                stream);
          }

          // .acvm.acir.native.Witness witness_right = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.witness_right_, this_._impl_.witness_right_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.native.Expression.MulTerm)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Expression_MulTerm::ByteSizeLong(const MessageLite& base) {
          const Expression_MulTerm& this_ = static_cast<const Expression_MulTerm&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Expression_MulTerm::ByteSizeLong() const {
          const Expression_MulTerm& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.native.Expression.MulTerm)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .acvm.acir.native.Field q_m = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.q_m_);
            }
            // .acvm.acir.native.Witness witness_left = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.witness_left_);
            }
            // .acvm.acir.native.Witness witness_right = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.witness_right_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Expression_MulTerm::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Expression_MulTerm*>(&to_msg);
  auto& from = static_cast<const Expression_MulTerm&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.native.Expression.MulTerm)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.q_m_ != nullptr);
      if (_this->_impl_.q_m_ == nullptr) {
        _this->_impl_.q_m_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Field>(arena, *from._impl_.q_m_);
      } else {
        _this->_impl_.q_m_->MergeFrom(*from._impl_.q_m_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.witness_left_ != nullptr);
      if (_this->_impl_.witness_left_ == nullptr) {
        _this->_impl_.witness_left_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.witness_left_);
      } else {
        _this->_impl_.witness_left_->MergeFrom(*from._impl_.witness_left_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.witness_right_ != nullptr);
      if (_this->_impl_.witness_right_ == nullptr) {
        _this->_impl_.witness_right_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.witness_right_);
      } else {
        _this->_impl_.witness_right_->MergeFrom(*from._impl_.witness_right_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Expression_MulTerm::CopyFrom(const Expression_MulTerm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.native.Expression.MulTerm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Expression_MulTerm::InternalSwap(Expression_MulTerm* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_.witness_right_)
      + sizeof(Expression_MulTerm::_impl_.witness_right_)
      - PROTOBUF_FIELD_OFFSET(Expression_MulTerm, _impl_.q_m_)>(
          reinterpret_cast<char*>(&_impl_.q_m_),
          reinterpret_cast<char*>(&other->_impl_.q_m_));
}

::google::protobuf::Metadata Expression_MulTerm::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Expression_LinearCombination::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Expression_LinearCombination>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Expression_LinearCombination, _impl_._has_bits_);
};

Expression_LinearCombination::Expression_LinearCombination(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.native.Expression.LinearCombination)
}
inline PROTOBUF_NDEBUG_INLINE Expression_LinearCombination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::native::Expression_LinearCombination& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Expression_LinearCombination::Expression_LinearCombination(
    ::google::protobuf::Arena* arena,
    const Expression_LinearCombination& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Expression_LinearCombination* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.q_l_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Field>(
                              arena, *from._impl_.q_l_)
                        : nullptr;
  _impl_.witness_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(
                              arena, *from._impl_.witness_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.native.Expression.LinearCombination)
}
inline PROTOBUF_NDEBUG_INLINE Expression_LinearCombination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Expression_LinearCombination::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, q_l_),
           0,
           offsetof(Impl_, witness_) -
               offsetof(Impl_, q_l_) +
               sizeof(Impl_::witness_));
}
Expression_LinearCombination::~Expression_LinearCombination() {
  // @@protoc_insertion_point(destructor:acvm.acir.native.Expression.LinearCombination)
  SharedDtor(*this);
}
inline void Expression_LinearCombination::SharedDtor(MessageLite& self) {
  Expression_LinearCombination& this_ = static_cast<Expression_LinearCombination&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.q_l_;
  delete this_._impl_.witness_;
  this_._impl_.~Impl_();
}

inline void* Expression_LinearCombination::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Expression_LinearCombination(arena);
}
constexpr auto Expression_LinearCombination::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Expression_LinearCombination),
                                            alignof(Expression_LinearCombination));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Expression_LinearCombination::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Expression_LinearCombination_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Expression_LinearCombination::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Expression_LinearCombination>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Expression_LinearCombination::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Expression_LinearCombination>(), &Expression_LinearCombination::ByteSizeLong,
            &Expression_LinearCombination::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Expression_LinearCombination, _impl_._cached_size_),
        false,
    },
    &Expression_LinearCombination::kDescriptorMethods,
    &descriptor_table_acir_2fnative_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Expression_LinearCombination::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Expression_LinearCombination::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Expression_LinearCombination, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::native::Expression_LinearCombination>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .acvm.acir.native.Witness witness = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Expression_LinearCombination, _impl_.witness_)}},
    // .acvm.acir.native.Field q_l = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Expression_LinearCombination, _impl_.q_l_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .acvm.acir.native.Field q_l = 1;
    {PROTOBUF_FIELD_OFFSET(Expression_LinearCombination, _impl_.q_l_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Witness witness = 2;
    {PROTOBUF_FIELD_OFFSET(Expression_LinearCombination, _impl_.witness_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Field>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Witness>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Expression_LinearCombination::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.native.Expression.LinearCombination)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.q_l_ != nullptr);
      _impl_.q_l_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.witness_ != nullptr);
      _impl_.witness_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Expression_LinearCombination::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Expression_LinearCombination& this_ = static_cast<const Expression_LinearCombination&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Expression_LinearCombination::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Expression_LinearCombination& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.native.Expression.LinearCombination)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.native.Field q_l = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.q_l_, this_._impl_.q_l_->GetCachedSize(), target,
                stream);
          }

          // .acvm.acir.native.Witness witness = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.witness_, this_._impl_.witness_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.native.Expression.LinearCombination)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Expression_LinearCombination::ByteSizeLong(const MessageLite& base) {
          const Expression_LinearCombination& this_ = static_cast<const Expression_LinearCombination&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Expression_LinearCombination::ByteSizeLong() const {
          const Expression_LinearCombination& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.native.Expression.LinearCombination)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .acvm.acir.native.Field q_l = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.q_l_);
            }
            // .acvm.acir.native.Witness witness = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.witness_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Expression_LinearCombination::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Expression_LinearCombination*>(&to_msg);
  auto& from = static_cast<const Expression_LinearCombination&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.native.Expression.LinearCombination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.q_l_ != nullptr);
      if (_this->_impl_.q_l_ == nullptr) {
        _this->_impl_.q_l_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Field>(arena, *from._impl_.q_l_);
      } else {
        _this->_impl_.q_l_->MergeFrom(*from._impl_.q_l_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.witness_ != nullptr);
      if (_this->_impl_.witness_ == nullptr) {
        _this->_impl_.witness_ =
            ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Witness>(arena, *from._impl_.witness_);
      } else {
        _this->_impl_.witness_->MergeFrom(*from._impl_.witness_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Expression_LinearCombination::CopyFrom(const Expression_LinearCombination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.native.Expression.LinearCombination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Expression_LinearCombination::InternalSwap(Expression_LinearCombination* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Expression_LinearCombination, _impl_.witness_)
      + sizeof(Expression_LinearCombination::_impl_.witness_)
      - PROTOBUF_FIELD_OFFSET(Expression_LinearCombination, _impl_.q_l_)>(
          reinterpret_cast<char*>(&_impl_.q_l_),
          reinterpret_cast<char*>(&other->_impl_.q_l_));
}

::google::protobuf::Metadata Expression_LinearCombination::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Expression::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Expression>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Expression, _impl_._has_bits_);
};

Expression::Expression(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:acvm.acir.native.Expression)
}
inline PROTOBUF_NDEBUG_INLINE Expression::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::acvm::acir::native::Expression& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        mul_terms_{visibility, arena, from.mul_terms_},
        linear_combinations_{visibility, arena, from.linear_combinations_} {}

Expression::Expression(
    ::google::protobuf::Arena* arena,
    const Expression& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Expression* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.q_c_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Field>(
                              arena, *from._impl_.q_c_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:acvm.acir.native.Expression)
}
inline PROTOBUF_NDEBUG_INLINE Expression::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mul_terms_{visibility, arena},
        linear_combinations_{visibility, arena} {}

inline void Expression::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.q_c_ = {};
}
Expression::~Expression() {
  // @@protoc_insertion_point(destructor:acvm.acir.native.Expression)
  SharedDtor(*this);
}
inline void Expression::SharedDtor(MessageLite& self) {
  Expression& this_ = static_cast<Expression&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.q_c_;
  this_._impl_.~Impl_();
}

inline void* Expression::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Expression(arena);
}
constexpr auto Expression::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Expression, _impl_.mul_terms_) +
          decltype(Expression::_impl_.mul_terms_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Expression, _impl_.linear_combinations_) +
          decltype(Expression::_impl_.linear_combinations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Expression), alignof(Expression), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Expression::PlacementNew_,
                                 sizeof(Expression),
                                 alignof(Expression));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Expression::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Expression_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Expression::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Expression>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Expression::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Expression>(), &Expression::ByteSizeLong,
            &Expression::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Expression, _impl_._cached_size_),
        false,
    },
    &Expression::kDescriptorMethods,
    &descriptor_table_acir_2fnative_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Expression::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Expression::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Expression, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::acvm::acir::native::Expression>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .acvm.acir.native.Expression.MulTerm mul_terms = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Expression, _impl_.mul_terms_)}},
    // repeated .acvm.acir.native.Expression.LinearCombination linear_combinations = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Expression, _impl_.linear_combinations_)}},
    // .acvm.acir.native.Field q_c = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(Expression, _impl_.q_c_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .acvm.acir.native.Expression.MulTerm mul_terms = 1;
    {PROTOBUF_FIELD_OFFSET(Expression, _impl_.mul_terms_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .acvm.acir.native.Expression.LinearCombination linear_combinations = 2;
    {PROTOBUF_FIELD_OFFSET(Expression, _impl_.linear_combinations_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .acvm.acir.native.Field q_c = 3;
    {PROTOBUF_FIELD_OFFSET(Expression, _impl_.q_c_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression_MulTerm>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Expression_LinearCombination>()},
    {::_pbi::TcParser::GetTable<::acvm::acir::native::Field>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Expression::Clear() {
// @@protoc_insertion_point(message_clear_start:acvm.acir.native.Expression)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mul_terms_.Clear();
  _impl_.linear_combinations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.q_c_ != nullptr);
    _impl_.q_c_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Expression::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Expression& this_ = static_cast<const Expression&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Expression::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Expression& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:acvm.acir.native.Expression)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .acvm.acir.native.Expression.MulTerm mul_terms = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_mul_terms_size());
               i < n; i++) {
            const auto& repfield = this_._internal_mul_terms().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .acvm.acir.native.Expression.LinearCombination linear_combinations = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_linear_combinations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_linear_combinations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .acvm.acir.native.Field q_c = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.q_c_, this_._impl_.q_c_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:acvm.acir.native.Expression)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Expression::ByteSizeLong(const MessageLite& base) {
          const Expression& this_ = static_cast<const Expression&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Expression::ByteSizeLong() const {
          const Expression& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:acvm.acir.native.Expression)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .acvm.acir.native.Expression.MulTerm mul_terms = 1;
            {
              total_size += 1UL * this_._internal_mul_terms_size();
              for (const auto& msg : this_._internal_mul_terms()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .acvm.acir.native.Expression.LinearCombination linear_combinations = 2;
            {
              total_size += 1UL * this_._internal_linear_combinations_size();
              for (const auto& msg : this_._internal_linear_combinations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .acvm.acir.native.Field q_c = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.q_c_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Expression::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Expression*>(&to_msg);
  auto& from = static_cast<const Expression&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:acvm.acir.native.Expression)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mul_terms()->MergeFrom(
      from._internal_mul_terms());
  _this->_internal_mutable_linear_combinations()->MergeFrom(
      from._internal_linear_combinations());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.q_c_ != nullptr);
    if (_this->_impl_.q_c_ == nullptr) {
      _this->_impl_.q_c_ =
          ::google::protobuf::Message::CopyConstruct<::acvm::acir::native::Field>(arena, *from._impl_.q_c_);
    } else {
      _this->_impl_.q_c_->MergeFrom(*from._impl_.q_c_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Expression::CopyFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acvm.acir.native.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Expression::InternalSwap(Expression* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.mul_terms_.InternalSwap(&other->_impl_.mul_terms_);
  _impl_.linear_combinations_.InternalSwap(&other->_impl_.linear_combinations_);
  swap(_impl_.q_c_, other->_impl_.q_c_);
}

::google::protobuf::Metadata Expression::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace native
}  // namespace acir
}  // namespace acvm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_acir_2fnative_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
