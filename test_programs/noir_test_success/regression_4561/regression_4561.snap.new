---
source: test_programs/src/lib.rs
assertion_line: 64
expression: "&format!(\"success: {:?}\\nexit_code: {}\\n----- stdout -----\\n{}\\n----- stderr -----\\n{}\",\noutput.status.success(), output.status.code().unwrap_or(!0), stdout, stderr)"
---
success: true
exit_code: 0
----- stdout -----
[regression_4561] Running 4 test functions
----- stderr -----
warning: Unused expression result of type OracleMock
   â”Œâ”€ noir_test_success/regression_4561/src/main.nr:16:5
   â”‚
16 â”‚     OracleMock::mock("simple_nested_return").returns([1, 2, 3, 4, 5, 6]);
   â”‚     --------------------------------------------------------------------
   â”‚

warning: Unused expression result of type OracleMock
   â”Œâ”€ noir_test_success/regression_4561/src/main.nr:29:5
   â”‚
29 â”‚     OracleMock::mock("nested_with_fields_return").returns((0, [1, 2, 3, 4, 5, 6], 7));
   â”‚     ---------------------------------------------------------------------------------
   â”‚

warning: Unused expression result of type OracleMock
   â”Œâ”€ noir_test_success/regression_4561/src/main.nr:42:5
   â”‚
42 â”‚     OracleMock::mock("two_nested_return").returns((0, [1, 2, 3, 4, 5, 6], 7, [1, 2, 3, 4, 5, 6]));
   â”‚     ---------------------------------------------------------------------------------------------
   â”‚

warning: Unused expression result of type OracleMock
   â”Œâ”€ noir_test_success/regression_4561/src/main.nr:64:5
   â”‚  
64 â”‚ â•­     OracleMock::mock("foo_return").returns((
65 â”‚ â”‚         0, [1, 2, 3, 4, 5, 6], 7,
66 â”‚ â”‚         [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],
67 â”‚ â”‚         [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1, 2, 3, 4, 5, 6],
68 â”‚ â”‚     ));
   â”‚ â•°â”€â”€â”€â”€â”€â”€'
   â”‚  

warning: struct `TestTypeFoo` is never constructed
   â”Œâ”€ noir_test_success/regression_4561/src/main.nr:55:8
   â”‚
55 â”‚ struct TestTypeFoo {
   â”‚        ----------- struct is never constructed
   â”‚

[regression_4561] Testing test_simple_nested_return ... [0m[32mok[0m
[regression_4561] Testing two_nested_return ... [0m[32mok[0m
[regression_4561] Testing test_nested_with_fields_return ... [0m[32mok[0m
[regression_4561] Testing complexe_struct_return ... [0m[32mok[0m
[regression_4561] [0m[32m4 tests passed[0m
