---
source: test_programs/src/lib.rs
assertion_line: 64
expression: "&format!(\"success: {:?}\\nexit_code: {}\\n----- stdout -----\\n{}\\n----- stderr -----\\n{}\",\noutput.status.success(), output.status.code().unwrap_or(!0), stdout, stderr)"
---
success: true
exit_code: 0
----- stdout -----
[ski_calculus] Running 10 test functions
----- stderr -----
warning: Unreachable match case
   â”Œâ”€ noir_test_success/ski_calculus/src/main.nr:35:13
   â”‚
35 â”‚             (Node::Const(x), Node::Const(y)) => x == y,
   â”‚             -------------------------------- This pattern is redundant with one or more prior patterns
   â”‚

warning: Unreachable match case
   â”Œâ”€ noir_test_success/ski_calculus/src/main.nr:36:13
   â”‚
36 â”‚             (Node::App(f, x), Node::App(g, y)) => { (f == g) & (x == y) },
   â”‚             ---------------------------------- This pattern is redundant with one or more prior patterns
   â”‚

warning: Indexing an array or slice with a type other than `u32` is deprecated and will soon be an error
   â”Œâ”€ noir_test_success/ski_calculus/src/main.nr:93:58
   â”‚
93 â”‚                         output.output.push(BASE10_DIGITS[current_mod10]);
   â”‚                                                          -------------
   â”‚

[ski_calculus] Testing test_identity_and_show ... [0m[32mok[0m
[ski_calculus] Testing test_logic_and_show ... [0m[32mok[0m
[ski_calculus] Testing test_numeric_and_show ... [0m[32mok[0m
[ski_calculus] Testing test_pow_and_show ... [0m[32mok[0m
[ski_calculus] Testing test_add_and_show ... [0m[32mok[0m
[ski_calculus] Testing test_identity ... [0m[32mok[0m
[ski_calculus] Testing test_logic ... [0m[32mok[0m
[ski_calculus] Testing test_numeric ... [0m[32mok[0m
[ski_calculus] Testing test_add ... [0m[32mok[0m <32.646s>
[ski_calculus] Testing test_pow ... [0m[32mok[0m <32.818s>
[ski_calculus] [0m[32m10 tests passed[0m
