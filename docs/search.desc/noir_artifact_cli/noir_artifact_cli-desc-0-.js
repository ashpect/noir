searchState.loadedDescShard("noir_artifact_cli", 0, "A parsed JSON build artifact.\nThis module is for commands that we might want to invoke …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTry to parse an artifact as a binary program or a contract\nParses a path and turns it into an absolute one by joining …\nExecute a binary program or a circuit artifact.\nPath to the JSON build artifact (either a program or a …\nName of the function to execute, if the artifact is a …\nExecute a circuit and return the output witnesses.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPath to the oracle transcript that is to be replayed …\nPackage name for the RPC oracle resolver\nJSON RPC url to solve oracle calls.\nRoot directory for the RPC oracle resolver.\nPath to the directory where the output witness should be …\nUse pedantic ACVM solving, i.e. double-check some …\nPath to the Prover.toml file which contains the inputs and …\nWrite the execution witness to named file\nError related to ABI encoding\nError related to artifact deserialization\nError related to circuit deserialization\nError related to circuit execution\nFilesystem errors\nError related to ABI input deserialization\nError related to oracle transcript deserialization\nInput Witness Index Error\nInput Witness Value Error\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResults of a circuit execution.\nThe decoded <code>return</code> witnesses.\nThe <code>return</code> value from the circuit execution.\nCompare return values to expectations, returning errors if …\nExecute a circuit and return the output witnesses.\nThe <code>return</code> value from the <code>Prover.toml</code> file, if present.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrint some information and save the witness if an output …\nSave the witness stack to a file.\nPrint an error stack trace, if possible.\nReturns the circuit’s bytecode read from the file at the …\nRead a <code>ProgramArtifact</code>. Returns error if it turns out to …\nCreate the parent directory if needed and write the bytes …\nReturns the circuit’s parameters and its return value, …\nWrite <code>witness.gz</code> to the output directory.")