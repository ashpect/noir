searchState.loadedDescShard("noir_wasm", 0, "This is a wrapper class that is wasm-bindgen compatible We …\nThis is a method that exposes the same API as <code>compile</code> But …\nThis is a method that exposes the same API as <code>compile</code> But …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis map contains the paths of all of the files in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is a wrapper class that is wasm-bindgen compatible We …\nThis is a method that exposes the same API as <code>compile</code> But …\nThis is a method that exposes the same API as <code>compile</code> But …\nThis is a method that exposes the same API as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")