searchState.loadedDescShard("acir", 0, "This trait is extremely unstable and WILL have breaking …\nReturns the closest number of bytes to the bits specified …\nConverts bytes into a FieldElement and applies a reduction …\nConverts bytes in little-endian order into a FieldElement …\nComputes the inverse or returns zero if the inverse does …\nMaximum number of bits needed to represent a field element …\nMaximum numbers of bytes needed to represent a field …\nThis is the number of bits required to represent this …\nConverts the field element to a vector of bytes in …\nSpecifies the maximum width of the expressions which will …\nOpcodes are locatable so that callers can map opcodes to …\nA program represented by multiple ACIR circuits. The …\nThe opcode location for a call to a separate ACIR circuit …\nMaps opcode locations to failed assertion payloads. The …\nSerialize the program using <code>bincode</code>, which is what we have …\nBlack box functions are ACIR opcodes which rely on …\nReturns all witnesses which are required to execute the …\nDeserialize bytecode.\nDeserialize and base64 decode program\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the witness index of each public input\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe set of private inputs to the circuit.\nSerialize the program using <code>protobuf</code>, which is what we try …\nReturns all public inputs. This includes those provided as …\nThe set of public inputs provided by the prover.\nThe set of public inputs calculated within the circuit.\nSerialize and base64 encode program\nCiphers (encrypts) the provided plaintext using AES128 in …\nPerforms the bitwise AND of <code>lhs</code> and <code>rhs</code>. <code>bit_size</code> must be …\nBigInt addition\nBigInt division\nBigInt from le bytes\nBigInt multiplication\nBigInt subtraction\nBigInt to le bytes\nAn iterator over the variants of Self\nComputes the Blake2s hash of the inputs, as specified in …\nComputes the Blake3 hash of the inputs\nVerifies a ECDSA signature over the secp256k1 curve.\nVerifies a ECDSA signature over the secp256r1 curve.\nAddition over the embedded curve on which the witness is …\nKeccak Permutation function of width 1600\nMultiple scalar multiplication (MSM) with a variable …\nPermutation function of Poseidon2\nRange constraint to ensure that a witness can be …\nCompute a recursive aggregation object when verifying a …\nSHA256 compression function\nPerforms the bitwise XOR of <code>lhs</code> and <code>rhs</code>. <code>bit_size</code> must be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is purely a wrapper struct around a list of Brillig …\nId for the function being called.\nInputs for the Brillig VM. These are the initial inputs …\nOutputs for the Brillig VM. Once the VM has completed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn <code>AssertZero</code> opcode adds the constraint that <code>P(w) = 0</code>, …\nCalls to “gadgets” which rely on backends implementing …\nCalls to unconstrained functions\nCalls to functions represented as a separate circuit. A …\nOperation on a block of memory We can either write or read …\nInitialize an ACIR array from a vector of witnesses.\nAtomic operation on a block of memory\nApplies the Poseidon2 permutation function to the given …\nApplies the SHA-256 compression function to the input …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\narray index, it must be less than the array length\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA constant expression that can be 0 (read) or 1 (write)\nthe value we are reading, when operation is 0, or the …\nVector of 8 u32s used to compress the input\nInput state for the permutation of Poseidon2\n512 bits of the input message, represented by 16 u32s\nA key hash is used to check the validity of the …\nState length (in number of field elements) It is the …\nPermuted state\nOutput of the compression, represented by 8 u32s\nThese represent the public inputs of the proof we are …\nidentifier of the array\nId for the function being called. It is the responsibility …\nId for the function being called. It is the responsibility …\nInputs to the function call\nInputs to the function call\ndescribe the memory operation to perform\nOutputs to the function call\nOutputs of the function call\nPredicate of the memory operation - indicates if it should …\nPredicate of the Brillig execution - indicates if it …\nPredicate of the circuit execution - indicates if it …\nApplies the Poseidon2 permutation function to the given …\nApplies the SHA-256 compression function to the input …\nVector of 8 u32s used to compress the input\nInput state for the permutation of Poseidon2\n512 bits of the input message, represented by 16 u32s\nA key hash is used to check the validity of the …\nState length (in number of field elements) It is the …\nPermuted state\nOutput of the compression, represented by 8 u32s\nThese represent the public inputs of the proof we are …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOperation on a block of memory We can either write or read …\narray index, it must be less than the array length\nA constant expression that can be 0 (read) or 1 (write)\nCreates a <code>MemOp</code> which reads from memory at <code>index</code> and …\nthe value we are reading, when operation is 0, or the …\nCreates a <code>MemOp</code> which writes the <code>Expression</code> <code>value</code> into …\nA map from the witnesses in a constraint system to the …\nAn ordered set of witness maps for separate circuits\nReturns the argument unchanged.\nCreates an Expression from a Witness.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the maximum witness at the provided position, and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>self + k*b</code>\nReturns <code>true</code> if the expression represents a constant …\nReturns <code>true</code> if the expression can be seen as a degree-1 …\nReturns <code>true</code> if highest degree term in the expression is …\nReturns the number of multiplication terms\nAdds a new linear term to the <code>Expression</code>.\nAdds a new quadratic term to the <code>Expression</code>.\nSorts opcode in a deterministic order XXX: We can probably …\nReturns a <code>FieldElement</code> if the expression represents a …\nReturns a <code>Witness</code> if the <code>Expression</code> can be represented as …\nDetermine the width of this expression. The width meaning …\nReturns <code>w*b.linear_combinations</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA map from the witnesses in a constraint system to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn ordered set of witness maps for separate circuits\nReturns the argument unchanged.\nReturns the argument unchanged.\nIndex into a crate::circuit::Program function list for …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA full witness for the respective constraint system …\nNested message and enum types in <code>BlackBoxFuncCall</code>.\nNested message and enum types in <code>BlockType</code>.\nNested message and enum types in <code>BrilligInputs</code>.\nNested message and enum types in <code>BrilligOutputs</code>.\nNested message and enum types in <code>ConstantOrWitnessEnum</code>.\nNested message and enum types in <code>ExpressionOrMemory</code>.\nNested message and enum types in <code>ExpressionWidth</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>Opcode</code>.\nNested message and enum types in <code>OpcodeLocation</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nNested message and enum types in <code>Expression</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNested message and enum types in <code>WitnessMap</code>.\nNested message and enum types in <code>WitnessStack</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nNested message and enum types in <code>BitSize</code>.\nNested message and enum types in <code>BlackBoxOp</code>.\nNested message and enum types in <code>BrilligOpcode</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>BinaryFieldOpKind</code>, or <code>None</code> if <code>value</code> …\nConverts an <code>i32</code> to a <code>BinaryIntOpKind</code>, or <code>None</code> if <code>value</code> is …\nConverts an <code>i32</code> to a <code>IntegerBitSize</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nNested message and enum types in <code>HeapValueType</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>BinaryFieldOpKind</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>BinaryIntOpKind</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>IntegerBitSize</code>.\nNested message and enum types in <code>MemoryAddress</code>.\nNested message and enum types in <code>ValueOrArray</code>.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the enum value of <code>bit_size</code>, or the default if the …\nReturns the enum value of <code>bit_size</code>, or the default if the …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the enum value of <code>op</code>, or the default if the field …\nReturns the enum value of <code>op</code>, or the default if the field …\nSets <code>bit_size</code> to the provided enum value.\nSets <code>bit_size</code> to the provided enum value.\nSets <code>op</code> to the provided enum value.\nSets <code>op</code> to the provided enum value.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA program represents an entire circuit with ACIR and …\nReturns the argument unchanged.\nACIR circuits\nCalls <code>U::from(self)</code>.\nBrillig functions")