(function() {
    var type_impls = Object.fromEntries([["noir_greybox_fuzzer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WeightedSelectionConfig%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/noir_greybox_fuzzer/mutation/configurations.rs.html#10-32\">Source</a><a href=\"#impl-WeightedSelectionConfig%3CT,+N%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"noir_greybox_fuzzer/mutation/configurations/struct.WeightedSelectionConfig.html\" title=\"struct noir_greybox_fuzzer::mutation::configurations::WeightedSelectionConfig\">WeightedSelectionConfig</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_greybox_fuzzer/mutation/configurations.rs.html#11-20\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"noir_greybox_fuzzer/mutation/configurations/struct.WeightedSelectionConfig.html#tymethod.new\" class=\"fn\">new</a>(options_with_weights: [(T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>); <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.array.html\">N</a>]) -&gt; Self</h4></section><section id=\"method.select\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_greybox_fuzzer/mutation/configurations.rs.html#22-31\">Source</a><h4 class=\"code-header\">pub fn <a href=\"noir_greybox_fuzzer/mutation/configurations/struct.WeightedSelectionConfig.html#tymethod.select\" class=\"fn\">select</a>(&amp;self, prng: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rand_xorshift/0.3.0/rand_xorshift/struct.XorShiftRng.html\" title=\"struct rand_xorshift::XorShiftRng\">XorShiftRng</a>) -&gt; T</h4></section></div></details>",0,"noir_greybox_fuzzer::mutation::configurations::ByteValueMutationConfig","noir_greybox_fuzzer::mutation::configurations::SpliceMutationConfig","noir_greybox_fuzzer::mutation::configurations::UnbalancedArraySpliceConfig","noir_greybox_fuzzer::mutation::configurations::SpliceCandidateConfig","noir_greybox_fuzzer::mutation::configurations::StructuralMutationConfig","noir_greybox_fuzzer::mutation::configurations::TopLevelMutationConfig","noir_greybox_fuzzer::mutation::configurations::FieldElementSubstitutionMutationConfig","noir_greybox_fuzzer::mutation::configurations::FieldElementInversionMutationConfig","noir_greybox_fuzzer::mutation::configurations::FieldElementPow2UpdateConfig","noir_greybox_fuzzer::mutation::configurations::FieldElementSmallValueUpdateConfig","noir_greybox_fuzzer::mutation::configurations::FieldElementDictionaryUpdateConfig","noir_greybox_fuzzer::mutation::configurations::TopLevelFieldElementMutationConfig","noir_greybox_fuzzer::mutation::configurations::TestCaseSpliceConfig","noir_greybox_fuzzer::mutation::configurations::FixedIntSubstitutionConfig","noir_greybox_fuzzer::mutation::configurations::BinaryIntOperationMutationConfig","noir_greybox_fuzzer::mutation::configurations::IntTopLevelMutationConfig","noir_greybox_fuzzer::mutation::configurations::UnbalancedSpliceConfig"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3348]}