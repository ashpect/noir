(function() {
    var type_impls = Object.fromEntries([["noir_ast_fuzzer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BinarySearch\" class=\"impl\"><a href=\"#impl-BinarySearch\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BinarySearch</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i128.html\">i128</a>) -&gt; BinarySearch</h4></section></summary><div class=\"docblock\"><p>Creates a new binary searcher starting at the given value.</p>\n</div></details></div></details>",0,"noir_ast_fuzzer::input::int::BinarySearch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BinarySearch\" class=\"impl\"><a href=\"#impl-Clone-for-BinarySearch\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for BinarySearch</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; BinarySearch</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","noir_ast_fuzzer::input::int::BinarySearch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BinarySearch\" class=\"impl\"><a href=\"#impl-Debug-for-BinarySearch\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for BinarySearch</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","noir_ast_fuzzer::input::int::BinarySearch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValueTree-for-BinarySearch\" class=\"impl\"><a href=\"#impl-ValueTree-for-BinarySearch\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ValueTree for BinarySearch</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Value</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>The type of the value produced by this <code>ValueTree</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current\" class=\"method trait-impl\"><a href=\"#method.current\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Returns the current value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simplify\" class=\"method trait-impl\"><a href=\"#method.simplify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">simplify</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Attempts to simplify the current value. Notionally, this sets the\n“high” value to the current value, and the current value to a “halfway\npoint” between high and low, rounding towards low. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complicate\" class=\"method trait-impl\"><a href=\"#method.complicate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">complicate</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Attempts to partially undo the last simplification. Notionally, this\nsets the “low” value to one plus the current value, and the current\nvalue to a “halfway point” between high and the new low, rounding\ntowards low. <a>Read more</a></div></details></div></details>","ValueTree","noir_ast_fuzzer::input::int::BinarySearch"],["<section id=\"impl-Copy-for-BinarySearch\" class=\"impl\"><a href=\"#impl-Copy-for-BinarySearch\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for BinarySearch</h3></section>","Copy","noir_ast_fuzzer::input::int::BinarySearch"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[6988]}