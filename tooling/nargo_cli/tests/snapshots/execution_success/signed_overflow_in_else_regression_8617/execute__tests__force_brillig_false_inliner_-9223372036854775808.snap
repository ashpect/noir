---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "c",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "signed",
        "width": 32
      },
      "visibility": "public"
    },
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "7233212735005103307": {
        "error_kind": "string",
        "string": "attempt to multiply with overflow"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _24",
    "private parameters indices : [_0, _1]",
    "public parameters indices : []",
    "return value indices : [_2]",
    "BLACKBOX::RANGE [(_0, 32)] []",
    "BLACKBOX::RANGE [(_1, 1)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(0))], q_c: 8589934592 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(3)), Simple(Witness(4))]",
    "BLACKBOX::RANGE [(_3, 2)] []",
    "BLACKBOX::RANGE [(_4, 32)] []",
    "EXPR [ (-1, _0) (-4294967296, _3) (-1, _4) 8589934592 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _1) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 2147483648 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(5)), Simple(Witness(6))]",
    "BLACKBOX::RANGE [(_5, 1)] []",
    "BLACKBOX::RANGE [(_6, 33)] []",
    "EXPR [ (-1, _1) (1, _6) (-1, _7) 4294967296 ]",
    "BLACKBOX::RANGE [(_7, 33)] []",
    "EXPR [ (-1, _0, _1) (4294967296, _1, _5) (1, _1, _6) (1, _0) (-2147483648, _1) (-4294967296, _5) (-1, _6) 2147483648 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _1) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(4))], q_c: 2147483648 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(8)), Simple(Witness(9))]",
    "BLACKBOX::RANGE [(_8, 1)] []",
    "BLACKBOX::RANGE [(_9, 33)] []",
    "EXPR [ (-1, _1) (1, _9) (-1, _10) 4294967296 ]",
    "BLACKBOX::RANGE [(_10, 33)] []",
    "EXPR [ (-1, _1, _4) (4294967296, _1, _8) (1, _1, _9) (-2147483648, _1) (1, _4) (-4294967296, _8) (-1, _9) 2147483648 ]",
    "EXPR [ (-1, _5, _8) (1, _5) (-1, _11) 0 ]",
    "EXPR [ (-1, _1) (-1, _12) 1 ]",
    "EXPR [ (-1, _5, _12) (1, _11, _12) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(1, Witness(4), Witness(0))], linear_combinations: [], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(13)), Simple(Witness(14))]",
    "BLACKBOX::RANGE [(_13, 32)] []",
    "BLACKBOX::RANGE [(_14, 32)] []",
    "EXPR [ (1, _0, _4) (-4294967296, _13) (-1, _14) 0 ]",
    "EXPR [ (1, _5) (-1, _8) (-1, _15) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(15))], q_c: 0 })], outputs: [Simple(Witness(16))]",
    "EXPR [ (1, _15, _16) (1, _17) -1 ]",
    "EXPR [ (1, _15, _17) 0 ]",
    "EXPR [ (-2, _4, _8) (1, _4) (4294967296, _8) (-1, _18) 0 ]",
    "EXPR [ (-2, _0, _5) (1, _0) (4294967296, _5) (-1, _19) 0 ]",
    "EXPR [ (1, _18, _19) (-1, _20) 0 ]",
    "EXPR [ (1, _12, _20) (-1, _21) 0 ]",
    "BLACKBOX::RANGE [(_21, 32)] []",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _12) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(17)), (1, Witness(20))], q_c: 2147483647 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(22)), Simple(Witness(23))]",
    "BLACKBOX::RANGE [(_22, 1)] []",
    "BLACKBOX::RANGE [(_23, 33)] []",
    "EXPR [ (1, _12) (1, _23) (-1, _24) 4294967295 ]",
    "BLACKBOX::RANGE [(_24, 33)] []",
    "EXPR [ (1, _12, _17) (1, _12, _20) (-4294967296, _12, _22) (-1, _12, _23) (2147483647, _12) 0 ]",
    "EXPR [ (-1, _12, _22) 0 ]",
    "EXPR [ (-1, _0, _1) (-1, _12, _14) (1, _2) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "jZLBaoQwFEX/JWsXJk9n1F8pRaLGIRCiZLRQxH/v892xnVkUZnOP5uUeSMimBtett9bHcbqr5mNTXfIh+Fsbpt4ufoq8uu2ZOn/bJTnHS+ppzq3ZJhcX1cQ1hEx92bDKpvtso3Cxiad5plwcmCwcfXDH1579tfP/q5V5dKvit1y+39Znu35pf/Kf7X16Oa0yquH9JFlIlpIXyatkJVlL6hzQAOoafQ2BhkFDoeHQkGhYDCyGLXxWYwACCqAELsAVqIBaQDkAC8FCsBAsBAvBQrAQLARLcVj24z6Tt11wj0cwrrF/ehPL93xOzlczp6l3w5rccaMy4zv+AQ==",
  "file_map": {
    "50": {
      "source": "fn main(a: i32, c: bool) -> pub i32 {\n    if c {\n        a\n    } else {\n        ((-a) * a)\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
