---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "is_active",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": "H4sIAAAAAAAA/63OQQoAAAQEQMqD+IH/v0qKHMSFuWztYVuEgtBlp5F8I49b7N9o+T4xDikpe/QAAAA=",
  "debug_symbols": "jZHdCoMwDIXfJddetP5U3auMIVXjKJQqXTsY4rsvit30omNXaXL6nQTODD22/t4oM4wPuFxnaK3SWt0bPXbSqdHQdF4SCG3jLCKN4KATNUmLxsHFeK0TeErtt0+PSZqtOmlJZQmg6amS4aA0rq8l+dIsjooy22FRZR+8+JvPRbrzeZnG+PTH/pSH/QX/8Fyc+CzOV6wIB1SsLmMOedyBs7qqdwvOWSZOHjfqZKfsKTdgJC6rpVWy1bhnOXjTHaJ1rykoIfzJjh323uJqt2m04A0=",
  "file_map": {
    "50": {
      "source": "use std::embedded_curve_ops::EmbeddedCurvePoint;\nuse std::embedded_curve_ops::EmbeddedCurveScalar;\n\nfn main(is_active: bool) {\n    let a = EmbeddedCurvePoint {\n        x: 0x1d8eb4378a3bde41e0b6a9a8dcbd21b7ff9c51bdd6ca13ce989abbbf90df3666,\n        y: 0x06075b63354f2504f9cddba0b94ed0cef35fc88615e69ec1f853b51eb79a24a0,\n        is_infinite: false,\n    };\n\n    if is_active {\n        let bad = EmbeddedCurvePoint { x: 0, y: 5, is_infinite: false };\n        let d = bad.double();\n        let e = std::embedded_curve_ops::multi_scalar_mul(\n            [a, bad],\n            [EmbeddedCurveScalar { lo: 1, hi: 0 }, EmbeddedCurveScalar { lo: 1, hi: 0 }],\n        );\n        assert(e.x != d.x);\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": []
}
