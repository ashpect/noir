---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "c",
        "type": {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/81XO27DMAyV7Sjxp+1SdOjWI+hjx/KWDj1Ijcp7T9W79Bw9SPMhA0KRM8QUkAcYlCnjiXoUJTkTJzT75xna2f4pwB7wFviyiC+P+IqIbwW+FXDn4hI47g6sVdu29b3x2upPZYbRdartxq3TTneu+zLOWu9a1w/j0KtBt9brqRvspE6gXOo2aLBdJFwubkW1kGDXYUIkSQL61iAqRZFQxBu5DHBpyRjXmjm5eQLd5PIYz7FK4Avzq5ZBc8zZT0d4zvxu+OZoaM1sSM1kCbSUkbWklsFw6lryxaWoriXRlXn+OlUtMcdpOfNUJcpTJeYPYuZ6MKhzijpbynXYsEbtjYhgIXf0YK/BNig0JqQRyTYkc8eHxvlSUAu+omkSLQzum2kteIsbi1kGMeeQ+5W4REHauDhf/t5fv39/Puh3D1f6nmb6UK8SbBWMg+t/x6OBQf4mDf/xMhKiJu0m6MPCj+mezbzngb32beinvsdIH3Linx6NF+fxD/E4N38SDgAA",
  "debug_symbols": "tZTdjoMgEIXfhWsv+JXWV9lsDCo2JAQN1SYb03ffgYLbXpBsbHrDEcZvODNx3NCgu/XSGjdOV9R8bajzxlpzae3Uq8VMDk63e4Xytl281nCEnuJAzcprt6DGrdZW6KbsGl+6zspFXZSHKK6QdgMoJByN1eHpXv3RuIwSQhJMSL3j4v88P2e+FiWelnnB6sQLjt/k+RH/TOz+zyVelHnOcvM5pwfup4QnnrJi/fJz9VNG9/vlER7jnT+VeII/2EAhswHJXvhv2Kne+JeRQwLsVKiOq4zrKa5n1EAnCX4IQQ1814Q+hIXpAOVJQw5oG6mTyqQhU6jhprxRndVpxsfV9U8jv/zMOZJ/CrOfej2sXgevMQbufwE=",
  "file_map": {
    "50": {
      "source": "fn main(a: u32, mut c: [u32; 4]) {\n    // Regression for issue #661:\n    let mut c_661: [u32; 1] = [0];\n    if a > 5 {\n        c_661 = issue_661_foo(issue_661_bar(c), a);\n    } else {\n        c_661 = issue_661_foo(issue_661_bar(c), a + 2);\n    }\n    assert(c_661[0] < 20000);\n}\n\nfn test5(a: u32) {\n    if a > 1 {\n        let q = a / 2;\n        assert(q == 2);\n    }\n}\n\nfn issue_661_foo(array: [u32; 4], b: u32) -> [u32; 1] {\n    [array[0] + b]\n}\n\nfn issue_661_bar(a: [u32; 4]) -> [u32; 4] {\n    let mut b: [u32; 4] = [0; 4];\n    b[0] = a[0] + 1;\n    b\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient"
  ]
}
