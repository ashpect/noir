---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "z",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "u",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "private"
      },
      {
        "name": "v",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _188",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 8)] []",
    "BLACKBOX::RANGE [(_1, 8)] []",
    "BLACKBOX::RANGE [(_2, 8)] []",
    "BLACKBOX::RANGE [(_3, 8)] []",
    "BLACKBOX::RANGE [(_4, 8)] []",
    "BLACKBOX::RANGE [(_6, 16)] []",
    "BLACKBOX::RANGE [(_7, 16)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(5))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(8)), Simple(Witness(9))]",
    "BLACKBOX::RANGE [(_8, 222)] []",
    "BLACKBOX::RANGE [(_9, 32)] []",
    "EXPR [ (1, _5) (-4294967296, _8) (-1, _9) 0 ]",
    "EXPR [ (-1, _8) (-1, _10) 5096253676302562286669017222071363378443840053029366383258766538131 ]",
    "BLACKBOX::RANGE [(_10, 222)] []",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(8))], q_c: 5096253676302562286669017222071363378443840053029366383258766538131 })], outputs: [Simple(Witness(11))]",
    "EXPR [ (-1, _8, _11) (5096253676302562286669017222071363378443840053029366383258766538131, _11) (1, _12) -1 ]",
    "EXPR [ (-1, _8, _12) (5096253676302562286669017222071363378443840053029366383258766538131, _12) 0 ]",
    "EXPR [ (1, _9, _12) (1, _12, _12) (268435454, _12) (-1, _13) 0 ]",
    "BLACKBOX::RANGE [(_13, 32)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(9))], q_c: 4294967301 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(14)), Simple(Witness(15))]",
    "BLACKBOX::RANGE [(_15, 32)] []",
    "EXPR [ (-1, _9) (-4294967296, _14) (-1, _15) 4294967301 ]",
    "EXPR [ (-1, _14) 1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 16 })], outputs: [Simple(Witness(16)), Simple(Witness(17))]",
    "BLACKBOX::RANGE [(_16, 4)] []",
    "BLACKBOX::RANGE [(_17, 4)] []",
    "EXPR [ (1, _0) (-16, _16) (-1, _17) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(16))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 2 })], outputs: [Simple(Witness(18)), Simple(Witness(19))]",
    "BLACKBOX::RANGE [(_18, 7)] []",
    "BLACKBOX::RANGE [(_19, 1)] []",
    "EXPR [ (1, _16) (-2, _18) (-1, _19) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 16 })], outputs: [Simple(Witness(20)), Simple(Witness(21))]",
    "BLACKBOX::RANGE [(_20, 4)] []",
    "BLACKBOX::RANGE [(_21, 4)] []",
    "EXPR [ (1, _0) (-16, _20) (-1, _21) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _19) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(9))], q_c: 4294967297 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(22)), Simple(Witness(23))]",
    "BLACKBOX::RANGE [(_22, 1)] []",
    "BLACKBOX::RANGE [(_23, 33)] []",
    "EXPR [ (1, _19) (1, _23) (-1, _24) 4294967295 ]",
    "BLACKBOX::RANGE [(_24, 33)] []",
    "EXPR [ (-1, _9, _19) (-1, _188) 0 ]",
    "EXPR [ (-4294967296, _19, _22) (-1, _19, _23) (4294967297, _19) (1, _188) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _22, _19) (1, _19) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 16 })], outputs: [Simple(Witness(25)), Simple(Witness(26))]",
    "BLACKBOX::RANGE [(_25, 4)] []",
    "BLACKBOX::RANGE [(_26, 5)] []",
    "EXPR [ (-1, _19, _22) (1, _19) (1, _26) (-1, _27) 15 ]",
    "BLACKBOX::RANGE [(_27, 5)] []",
    "EXPR [ (16, _25) (1, _26) (-1, _28) 0 ]",
    "EXPR [ (-1, _19, _22) (1, _19) (-1, _29) 0 ]",
    "EXPR [ (1, _1, _29) (-1, _28, _29) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 16 })], outputs: [Simple(Witness(30)), Simple(Witness(31))]",
    "BLACKBOX::RANGE [(_30, 4)] []",
    "BLACKBOX::RANGE [(_31, 4)] []",
    "EXPR [ (1, _1) (-16, _30) (-1, _31) 0 ]",
    "EXPR [ (-1, _29) (-1, _32) 1 ]",
    "EXPR [ (1, _19, _21) (-1, _33) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _19) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(9))], q_c: 4294967298 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(34)), Simple(Witness(35))]",
    "BLACKBOX::RANGE [(_34, 1)] []",
    "BLACKBOX::RANGE [(_35, 33)] []",
    "EXPR [ (1, _19) (1, _35) (-1, _36) 4294967295 ]",
    "BLACKBOX::RANGE [(_36, 33)] []",
    "EXPR [ (-4294967296, _19, _34) (-1, _19, _35) (4294967298, _19) (1, _188) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _34, _19) (1, _19) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(2))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 16 })], outputs: [Simple(Witness(37)), Simple(Witness(38))]",
    "BLACKBOX::RANGE [(_37, 4)] []",
    "BLACKBOX::RANGE [(_38, 5)] []",
    "EXPR [ (-1, _19, _34) (1, _19) (1, _38) (-1, _39) 15 ]",
    "BLACKBOX::RANGE [(_39, 5)] []",
    "EXPR [ (16, _37) (1, _38) (-1, _40) 0 ]",
    "EXPR [ (-1, _19, _34) (1, _19) (-1, _41) 0 ]",
    "EXPR [ (1, _2, _41) (-1, _40, _41) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(2))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 16 })], outputs: [Simple(Witness(42)), Simple(Witness(43))]",
    "BLACKBOX::RANGE [(_42, 4)] []",
    "BLACKBOX::RANGE [(_43, 4)] []",
    "EXPR [ (1, _2) (-16, _42) (-1, _43) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _19) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(9))], q_c: 4294967299 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(44)), Simple(Witness(45))]",
    "BLACKBOX::RANGE [(_44, 1)] []",
    "BLACKBOX::RANGE [(_45, 33)] []",
    "EXPR [ (1, _19) (1, _45) (-1, _46) 4294967295 ]",
    "BLACKBOX::RANGE [(_46, 33)] []",
    "EXPR [ (-4294967296, _19, _44) (-1, _19, _45) (4294967299, _19) (1, _188) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _19) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(9))], q_c: 4294967300 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(47)), Simple(Witness(48))]",
    "BLACKBOX::RANGE [(_47, 1)] []",
    "BLACKBOX::RANGE [(_48, 33)] []",
    "EXPR [ (1, _19) (1, _48) (-1, _49) 4294967295 ]",
    "BLACKBOX::RANGE [(_49, 33)] []",
    "EXPR [ (-4294967296, _19, _47) (-1, _19, _48) (4294967300, _19) (1, _188) 0 ]",
    "EXPR [ (-1, _9, _19) (1, _9) (1, _19) (-1, _50) -1 ]",
    "BLACKBOX::RANGE [(_50, 32)] []",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _19) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(50))], q_c: 4294967296 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(51)), Simple(Witness(52))]",
    "BLACKBOX::RANGE [(_51, 1)] []",
    "BLACKBOX::RANGE [(_52, 33)] []",
    "EXPR [ (-1, _19) (1, _52) (-1, _53) 4294967296 ]",
    "BLACKBOX::RANGE [(_53, 33)] []",
    "EXPR [ (1, _19, _50) (4294967296, _19, _51) (1, _19, _52) (-4294967296, _19) (-1, _50) (-4294967296, _51) (-1, _52) 4294967296 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _19, _51) (-1, _19) (-1, _51) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 16 })], outputs: [Simple(Witness(54)), Simple(Witness(55))]",
    "BLACKBOX::RANGE [(_54, 4)] []",
    "BLACKBOX::RANGE [(_55, 5)] []",
    "EXPR [ (1, _19, _51) (-1, _19) (-1, _51) (1, _55) (-1, _56) 16 ]",
    "BLACKBOX::RANGE [(_56, 5)] []",
    "EXPR [ (16, _54) (1, _55) (-1, _57) 0 ]",
    "EXPR [ (1, _19, _51) (-1, _19) (-1, _51) (-1, _58) 1 ]",
    "EXPR [ (1, _1, _58) (-1, _57, _58) 0 ]",
    "EXPR [ (-1, _58) (-1, _59) 1 ]",
    "EXPR [ (1, _21, _29) (1, _32, _33) (-1, _60) 0 ]",
    "EXPR [ (1, _25, _29) (-1, _61) 0 ]",
    "EXPR [ (1, _29, _31) (-1, _62) 0 ]",
    "EXPR [ (1, _37, _41) (-1, _63) 0 ]",
    "EXPR [ (1, _41, _43) (-1, _64) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _19) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(50))], q_c: 4294967297 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(65)), Simple(Witness(66))]",
    "BLACKBOX::RANGE [(_65, 1)] []",
    "BLACKBOX::RANGE [(_66, 33)] []",
    "EXPR [ (-1, _19) (1, _66) (-1, _67) 4294967296 ]",
    "BLACKBOX::RANGE [(_67, 33)] []",
    "EXPR [ (1, _19, _50) (4294967296, _19, _65) (1, _19, _66) (-4294967297, _19) (-1, _50) (-4294967296, _65) (-1, _66) 4294967297 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _19, _65) (-1, _19) (-1, _65) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(2))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 16 })], outputs: [Simple(Witness(68)), Simple(Witness(69))]",
    "BLACKBOX::RANGE [(_68, 4)] []",
    "BLACKBOX::RANGE [(_69, 5)] []",
    "EXPR [ (1, _19, _65) (-1, _19) (-1, _65) (1, _69) (-1, _70) 16 ]",
    "BLACKBOX::RANGE [(_70, 5)] []",
    "EXPR [ (16, _68) (1, _69) (-1, _71) 0 ]",
    "EXPR [ (1, _19, _65) (-1, _19) (-1, _65) (-1, _72) 1 ]",
    "EXPR [ (1, _2, _72) (-1, _71, _72) 0 ]",
    "EXPR [ (-1, _72) (-1, _73) 1 ]",
    "EXPR [ (1, _59, _62) (-1, _74) 0 ]",
    "EXPR [ (1, _59, _63) (-1, _75) 0 ]",
    "EXPR [ (2, _5) (1, _19) -7 ]",
    "EXPR [ (1, _54, _58) (1, _59, _60) -15 ]",
    "EXPR [ (1, _31, _58) (1, _59, _61) -1 ]",
    "EXPR [ (1, _68, _72) (1, _73, _74) -12 ]",
    "EXPR [ (1, _43, _72) (1, _73, _75) -11 ]",
    "EXPR [ (1, _59, _64) -8 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 32768 })], outputs: [Simple(Witness(76)), Simple(Witness(77))]",
    "BLACKBOX::RANGE [(_76, 1)] []",
    "BLACKBOX::RANGE [(_77, 15)] []",
    "EXPR [ (1, _6) (-32768, _76) (-1, _77) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(6), Witness(76))], linear_combinations: [(1, Witness(6)), (65536, Witness(76))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 13 })], outputs: [Simple(Witness(78)), Simple(Witness(79))]",
    "BLACKBOX::RANGE [(_78, 12)] []",
    "BLACKBOX::RANGE [(_79, 4)] []",
    "EXPR [ (1, _79) (-1, _80) 3 ]",
    "BLACKBOX::RANGE [(_80, 4)] []",
    "EXPR [ (-2, _6, _76) (1, _6) (65536, _76) (-13, _78) (-1, _79) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(78))], q_c: 0 })], outputs: [Simple(Witness(81))]",
    "EXPR [ (1, _78, _81) (1, _82) -1 ]",
    "EXPR [ (1, _78, _82) 0 ]",
    "EXPR [ (2, _76, _78) (-65536, _76) (-1, _78) (-1, _83) 65536 ]",
    "EXPR [ (-1, _82) (-1, _84) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(79))], q_c: 0 })], outputs: [Simple(Witness(85))]",
    "EXPR [ (1, _79, _85) (1, _86) -1 ]",
    "EXPR [ (1, _79, _86) 0 ]",
    "EXPR [ (-2, _76, _79) (65536, _76) (1, _79) (-1, _87) 0 ]",
    "EXPR [ (-1, _86) (-1, _88) 1 ]",
    "EXPR [ (1, _87, _88) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(7))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 32768 })], outputs: [Simple(Witness(89)), Simple(Witness(90))]",
    "BLACKBOX::RANGE [(_89, 1)] []",
    "BLACKBOX::RANGE [(_90, 15)] []",
    "EXPR [ (1, _7) (-32768, _89) (-1, _90) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 32768 })], outputs: [Simple(Witness(91)), Simple(Witness(92))]",
    "BLACKBOX::RANGE [(_91, 1)] []",
    "BLACKBOX::RANGE [(_92, 15)] []",
    "EXPR [ (1, _6) (-32768, _91) (-1, _92) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(7), Witness(89))], linear_combinations: [(1, Witness(7)), (65536, Witness(89))], q_c: 0 })], outputs: [Simple(Witness(93))]",
    "EXPR [ (-2, _7, _89) (1, _7) (65536, _89) (-1, _94) 0 ]",
    "EXPR [ (1, _93, _94) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(6), Witness(91))], linear_combinations: [(1, Witness(6)), (65536, Witness(91))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(94))], q_c: 0 })], outputs: [Simple(Witness(95)), Simple(Witness(96))]",
    "BLACKBOX::RANGE [(_95, 15)] []",
    "BLACKBOX::RANGE [(_96, 15)] []",
    "EXPR [ (1, _94) (-1, _96) (-1, _97) -1 ]",
    "BLACKBOX::RANGE [(_97, 15)] []",
    "EXPR [ (-2, _6, _91) (-1, _94, _95) (1, _6) (65536, _91) (-1, _96) 0 ]",
    "EXPR [ (-1, _95) (-1, _98) 32768 ]",
    "EXPR [ (-2, _89, _91) (1, _89) (1, _91) (-1, _99) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(95))], q_c: 0 })], outputs: [Simple(Witness(100))]",
    "EXPR [ (1, _95, _100) (1, _101) -1 ]",
    "EXPR [ (1, _95, _101) 0 ]",
    "EXPR [ (2, _98, _99) (1, _95) (-1, _102) 0 ]",
    "EXPR [ (-1, _101) (-1, _103) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(96))], q_c: 0 })], outputs: [Simple(Witness(104))]",
    "EXPR [ (1, _96, _104) (1, _105) -1 ]",
    "EXPR [ (1, _96, _105) 0 ]",
    "EXPR [ (-2, _91, _96) (65536, _91) (1, _96) (-1, _106) 0 ]",
    "EXPR [ (-1, _105) (-1, _107) 1 ]",
    "EXPR [ (1, _106, _107) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 32768 })], outputs: [Simple(Witness(108)), Simple(Witness(109))]",
    "BLACKBOX::RANGE [(_108, 1)] []",
    "BLACKBOX::RANGE [(_109, 15)] []",
    "EXPR [ (1, _6) (-32768, _108) (-1, _109) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(6), Witness(108))], linear_combinations: [(1, Witness(6)), (65536, Witness(108))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 11 })], outputs: [Simple(Witness(110)), Simple(Witness(111))]",
    "BLACKBOX::RANGE [(_110, 12)] []",
    "BLACKBOX::RANGE [(_111, 4)] []",
    "EXPR [ (1, _111) (-1, _112) 5 ]",
    "BLACKBOX::RANGE [(_112, 4)] []",
    "EXPR [ (-2, _6, _108) (1, _6) (65536, _108) (-11, _110) (-1, _111) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(110))], q_c: 0 })], outputs: [Simple(Witness(113))]",
    "EXPR [ (1, _110, _113) (1, _114) -1 ]",
    "EXPR [ (1, _110, _114) 0 ]",
    "EXPR [ (2, _108, _110) (-65536, _108) (-1, _110) (-1, _115) 65536 ]",
    "EXPR [ (-1, _114) (-1, _116) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(111))], q_c: 0 })], outputs: [Simple(Witness(117))]",
    "EXPR [ (1, _111, _117) (1, _118) -1 ]",
    "EXPR [ (1, _111, _118) 0 ]",
    "EXPR [ (-2, _108, _111) (65536, _108) (1, _111) (-1, _119) 0 ]",
    "EXPR [ (-1, _118) (-1, _120) 1 ]",
    "EXPR [ (1, _119, _120) -4 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(6))], q_c: 131072 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 65536 })], outputs: [Simple(Witness(121)), Simple(Witness(122))]",
    "BLACKBOX::RANGE [(_121, 2)] []",
    "BLACKBOX::RANGE [(_122, 16)] []",
    "EXPR [ (-1, _6) (-65536, _121) (-1, _122) 131072 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: 32768 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 65536 })], outputs: [Simple(Witness(123)), Simple(Witness(124))]",
    "BLACKBOX::RANGE [(_123, 1)] []",
    "BLACKBOX::RANGE [(_124, 16)] []",
    "EXPR [ (1, _6) (-65536, _123) (-1, _124) 32768 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(122))], q_c: 32768 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 65536 })], outputs: [Simple(Witness(125)), Simple(Witness(126))]",
    "BLACKBOX::RANGE [(_125, 1)] []",
    "BLACKBOX::RANGE [(_126, 16)] []",
    "EXPR [ (1, _122) (-65536, _125) (-1, _126) 32768 ]",
    "EXPR [ (-1, _123, _125) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(122))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 32768 })], outputs: [Simple(Witness(127)), Simple(Witness(128))]",
    "BLACKBOX::RANGE [(_127, 1)] []",
    "BLACKBOX::RANGE [(_128, 15)] []",
    "EXPR [ (1, _122) (-32768, _127) (-1, _128) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(122), Witness(127))], linear_combinations: [(1, Witness(122)), (65536, Witness(127))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 11 })], outputs: [Simple(Witness(129)), Simple(Witness(130))]",
    "BLACKBOX::RANGE [(_129, 12)] []",
    "BLACKBOX::RANGE [(_130, 4)] []",
    "EXPR [ (1, _130) (-1, _131) 5 ]",
    "BLACKBOX::RANGE [(_131, 4)] []",
    "EXPR [ (-2, _122, _127) (1, _122) (65536, _127) (-11, _129) (-1, _130) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(129))], q_c: 0 })], outputs: [Simple(Witness(132))]",
    "EXPR [ (1, _129, _132) (1, _133) -1 ]",
    "EXPR [ (1, _129, _133) 0 ]",
    "EXPR [ (2, _127, _129) (-65536, _127) (-1, _129) (-1, _134) 65536 ]",
    "EXPR [ (-1, _133) (-1, _135) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(130))], q_c: 0 })], outputs: [Simple(Witness(136))]",
    "EXPR [ (1, _130, _136) (1, _137) -1 ]",
    "EXPR [ (1, _130, _137) 0 ]",
    "EXPR [ (-2, _127, _130) (65536, _127) (1, _130) (-1, _138) 0 ]",
    "EXPR [ (-1, _137) (-1, _139) 1 ]",
    "EXPR [ (1, _138, _139) -65532 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(7))], q_c: 2 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 65536 })], outputs: [Simple(Witness(140)), Simple(Witness(141))]",
    "BLACKBOX::RANGE [(_140, 1)] []",
    "BLACKBOX::RANGE [(_141, 16)] []",
    "EXPR [ (1, _7) (-65536, _140) (-1, _141) 2 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(7))], q_c: 32768 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 65536 })], outputs: [Simple(Witness(142)), Simple(Witness(143))]",
    "BLACKBOX::RANGE [(_142, 1)] []",
    "BLACKBOX::RANGE [(_143, 16)] []",
    "EXPR [ (1, _7) (-65536, _142) (-1, _143) 32768 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(141))], q_c: 32768 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 65536 })], outputs: [Simple(Witness(144)), Simple(Witness(145))]",
    "BLACKBOX::RANGE [(_144, 1)] []",
    "BLACKBOX::RANGE [(_145, 16)] []",
    "EXPR [ (1, _141) (-65536, _144) (-1, _145) 32768 ]",
    "EXPR [ (1, _142) (-1, _144) (-1, _146) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(146))], q_c: 0 })], outputs: [Simple(Witness(147))]",
    "EXPR [ (1, _146, _147) (1, _148) -1 ]",
    "EXPR [ (1, _146, _148) 0 ]",
    "EXPR [ (-1, _142, _148) (1, _142) (1, _148) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(141))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 32768 })], outputs: [Simple(Witness(149)), Simple(Witness(150))]",
    "BLACKBOX::RANGE [(_149, 1)] []",
    "BLACKBOX::RANGE [(_150, 15)] []",
    "EXPR [ (1, _141) (-32768, _149) (-1, _150) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 32768 })], outputs: [Simple(Witness(151)), Simple(Witness(152))]",
    "BLACKBOX::RANGE [(_151, 1)] []",
    "BLACKBOX::RANGE [(_152, 15)] []",
    "EXPR [ (1, _6) (-32768, _151) (-1, _152) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(141), Witness(149))], linear_combinations: [(1, Witness(141)), (65536, Witness(149))], q_c: 0 })], outputs: [Simple(Witness(153))]",
    "EXPR [ (-2, _141, _149) (1, _141) (65536, _149) (-1, _154) 0 ]",
    "EXPR [ (1, _153, _154) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(6), Witness(151))], linear_combinations: [(1, Witness(6)), (65536, Witness(151))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(154))], q_c: 0 })], outputs: [Simple(Witness(155)), Simple(Witness(156))]",
    "BLACKBOX::RANGE [(_155, 15)] []",
    "BLACKBOX::RANGE [(_156, 15)] []",
    "EXPR [ (1, _154) (-1, _156) (-1, _157) -1 ]",
    "BLACKBOX::RANGE [(_157, 15)] []",
    "EXPR [ (-2, _6, _151) (-1, _154, _155) (1, _6) (65536, _151) (-1, _156) 0 ]",
    "EXPR [ (-1, _155) (-1, _158) 32768 ]",
    "EXPR [ (-2, _149, _151) (1, _149) (1, _151) (-1, _159) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(155))], q_c: 0 })], outputs: [Simple(Witness(160))]",
    "EXPR [ (1, _155, _160) (1, _161) -1 ]",
    "EXPR [ (1, _155, _161) 0 ]",
    "EXPR [ (2, _158, _159) (1, _155) (-1, _162) 0 ]",
    "EXPR [ (-1, _161) (-1, _163) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(156))], q_c: 0 })], outputs: [Simple(Witness(164))]",
    "EXPR [ (1, _156, _164) (1, _165) -1 ]",
    "EXPR [ (1, _156, _165) 0 ]",
    "EXPR [ (-2, _151, _156) (65536, _151) (1, _156) (-1, _166) 0 ]",
    "EXPR [ (-1, _165) (-1, _167) 1 ]",
    "EXPR [ (-1, _166, _167) 4 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(141))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 32768 })], outputs: [Simple(Witness(168)), Simple(Witness(169))]",
    "BLACKBOX::RANGE [(_168, 1)] []",
    "BLACKBOX::RANGE [(_169, 15)] []",
    "EXPR [ (1, _141) (-32768, _168) (-1, _169) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(122))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 32768 })], outputs: [Simple(Witness(170)), Simple(Witness(171))]",
    "BLACKBOX::RANGE [(_170, 1)] []",
    "BLACKBOX::RANGE [(_171, 15)] []",
    "EXPR [ (1, _122) (-32768, _170) (-1, _171) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(141), Witness(168))], linear_combinations: [(1, Witness(141)), (65536, Witness(168))], q_c: 0 })], outputs: [Simple(Witness(172))]",
    "EXPR [ (-2, _141, _168) (1, _141) (65536, _168) (-1, _173) 0 ]",
    "EXPR [ (1, _172, _173) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(122), Witness(170))], linear_combinations: [(1, Witness(122)), (65536, Witness(170))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(173))], q_c: 0 })], outputs: [Simple(Witness(174)), Simple(Witness(175))]",
    "BLACKBOX::RANGE [(_174, 15)] []",
    "BLACKBOX::RANGE [(_175, 15)] []",
    "EXPR [ (1, _173) (-1, _175) (-1, _176) -1 ]",
    "BLACKBOX::RANGE [(_176, 15)] []",
    "EXPR [ (-2, _122, _170) (-1, _173, _174) (1, _122) (65536, _170) (-1, _175) 0 ]",
    "EXPR [ (-1, _174) (-1, _177) 32768 ]",
    "EXPR [ (-2, _168, _170) (1, _168) (1, _170) (-1, _178) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(174))], q_c: 0 })], outputs: [Simple(Witness(179))]",
    "EXPR [ (1, _174, _179) (1, _180) -1 ]",
    "EXPR [ (1, _174, _180) 0 ]",
    "EXPR [ (2, _177, _178) (1, _174) (-1, _181) 0 ]",
    "EXPR [ (-1, _180) (-1, _182) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(175))], q_c: 0 })], outputs: [Simple(Witness(183))]",
    "EXPR [ (1, _175, _183) (1, _184) -1 ]",
    "EXPR [ (1, _175, _184) 0 ]",
    "EXPR [ (-2, _170, _175) (65536, _170) (1, _175) (-1, _185) 0 ]",
    "EXPR [ (-1, _184) (-1, _186) 1 ]",
    "EXPR [ (-1, _185, _186) 65532 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "pZjNTiNLDIXfJWsWZVeVXZ5XuboaBQijSFFAGRjpCs2733LbJwwLZlHZcD4S6uP0j7s7ed89Hu7ffnw/np+ef+6+/fO+u78cT6fjj++n54f96/H5PF99/323w6/fXy+Hw3xp98f7c9XL/nI4v+6+nd9Op7vdr/3pbfujny/785av+8t8t9ztDufHmVP4dDwdnH7ffawuXy9lLpKrmVmugv7ZQF8bWuspaH3ctl7rwvouNdd3pRvXr2x/N+xA4bKwXvS63lb6S2esl5X12rD9Krqy3lquH4UX1o9r/7F0/ljB+WO0cv4MVfx/Wzl+VK4FqPDKHjDj2wREBdtAtLQT5qprB2q2ZJB2NejSVjAbDFyXOvD1XCZeOpk+deh2q0G+PBZ/vSRXu16Smy4ZFLcEbsUWDHUuS0NtJLcamJYMtV8Nrdxs6EuG/rEVIrcadG0/jI+tGHqrwerNhqUzql/novba1gztw7B0NDvVWw1CV4Mu7cne7CvDv/O3/cPx8ukhcadziu92Y/tp208qERTBETWiRfQIiQgHTcncAWRbcImgiGmZh5hrRIvoEdMyH1JYI0aEbVGnZd58KkVwRI2YlrmxtUdIhEaMCNuilQjyu8dMzqyZLbNnSqZmjkzzq+7drpdMyuTM6NVbRPTq0atHrx69evSS6CXZS7KXZC/JXpK9JHtJ9pLsJdlLs5dmL81eWrd/o7G/NHpp9NLopdFLo9eIXoMiOCIsIyzDO82BGZLpnebBHCPTIq1kUiZn+jbOA2wts2dKpmaOTIucz0MAAjDAncOhxYZTyT1HRfBK9qQyANmUqAAIwIBsS9QAHSAABQwAOjM6MzozOjM6+0ywj49PhV+KyOciQAEDYAk+H+wNfUICGFABDdABAlDAAFhCg7nB3GBuMDeYG8wN5gZzg7nB7OPDvu0+P6wODKiABugAAShgACzB5ykAZoFZYBaYBWaBWWAWmAVmhVlhVpgVZoVZYVaYFWaFWWH2WWM/AXza/CZGPm8BFdAAHSAABQyAJfjoBcBsMBvMBrPBbDAbzAazpZlLAfjVvThMcyWHCmiADhCAAgbAEnwGAwgAM8FMMPsM+gcL9hkMUMAAWMJ2P9qAAAyogAaAmWFmmBlmhrnCXGGuMFeYK8w+g9VviD6DtTkoYAAswWcwgAAMqIAG6ACYG8wN5gZzh7nD3GH2Gazb3bkBOkAAChgAS/AZDCAAA2AWmAVmgVlgFpgFZoVZYVaYFWaFWWFWmBVmhVlhHjAPmH0G6/Y04mZ1aIAOEIACBsASfAYDCMAAmA1mg9lgNpgNZktzLQVAAAZUQAN0gAAUMAAwE8wE8zaD/oH31/5y3N+fDvn14tPb+eGPbxtf/3vBO/g+8uXy/HB4fLsc/KFze28+hv4P",
  "file_map": {
    "50": {
      "source": "global NIBBLE_LENGTH: u32 = 16;\n\nstruct U4 {\n    inner: u8,\n}\n\nimpl U4 {\n    fn zero() -> U4 {\n        U4 { inner: 0 }\n    }\n\n    fn from_u8(x: u8) -> U4 {\n        U4 { inner: x % 16 }\n    }\n}\n\nimpl Eq for U4 {\n    fn eq(self, other: Self) -> bool {\n        self.inner == other.inner\n    }\n}\n\nfn compact_decode<let N: u32>(input: [u8; N], length: Field) -> ([U4; NIBBLE_LENGTH], Field) {\n    assert(2 * input.len() <= NIBBLE_LENGTH);\n    assert(length as u32 <= input.len());\n\n    let mut nibble = [U4::zero(); NIBBLE_LENGTH];\n\n    let first_nibble = U4::from_u8(input[0] >> 4);\n    let parity = first_nibble.inner as u1;\n\n    if parity == 1 {\n        nibble[0] = U4::from_u8(input[0] & 0x0f);\n        for i in 1..input.len() {\n            if i as u32 < length as u32 {\n                let x = input[i];\n                nibble[2 * i - 1] = U4::from_u8(x >> 4);\n                nibble[2 * i] = U4::from_u8(x & 0x0f);\n            }\n        }\n    } else {\n        for i in 0..2 {\n            if (i as u32) < length as u32 - 1 {\n                let x = input[i + 1];\n                nibble[2 * i] = U4::from_u8(x >> 4);\n                nibble[2 * i + 1] = U4::from_u8(x & 0x0f);\n            }\n        }\n    }\n\n    let out = (nibble, 2 * length + (parity as Field) - 2);\n\n    out\n}\n\nfn enc<let N: u32>(value: [u8; N], value_length: Field) -> ([u8; 32], Field) {\n    assert(value.len() as u8 >= value_length as u8);\n    let mut out_value = [0; 32];\n    if value_length == 0 {\n        let out = (out_value, value_length);\n        out\n    } else if value_length as u8 < 31 {\n        out_value[0] = 0x80 + value_length as u8;\n\n        for i in 1..value.len() {\n            out_value[i] = value[i - 1];\n        }\n\n        let out = (out_value, value_length + 1);\n\n        out\n    } else {\n        let out = (out_value, 32);\n        out\n    }\n}\n\nfn bitshift_literal_0() -> u64 {\n    let mut bits: u64 = 0;\n    bits |= 1 << 0;\n\n    bits\n}\nfn bitshift_literal_4() -> u64 {\n    let mut bits: u64 = 0;\n    bits |= 1 << 4;\n\n    bits\n}\nfn bitshift_variable(idx: u8) -> u64 {\n    let mut bits: u64 = 0;\n    bits |= 1 << idx;\n\n    bits\n}\n\nfn main(x: [u8; 5], z: Field, u: i16, v: i16) {\n    //Issue 1144\n    let (nib, len) = compact_decode(x, z);\n    assert(len == 5);\n    assert(\n        [nib[0], nib[1], nib[2], nib[3], nib[4]]\n            == [U4::from_u8(15), U4::from_u8(1), U4::from_u8(12), U4::from_u8(11), U4::from_u8(8)],\n    );\n    // Issue 1169\n    let val1 = [\n        0xb8, 0x8f, 0x61, 0xe6, 0xfb, 0xda, 0x83, 0xfb, 0xff, 0xfa, 0xbe, 0x36, 0x41, 0x12, 0x13,\n        0x74, 0x80, 0x39, 0x80, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00,\n    ];\n    let val1_length = 20;\n\n    let enc_val1 = enc(val1, val1_length);\n\n    assert(\n        enc_val1.0\n            == [\n                0x94, 0xb8, 0x8f, 0x61, 0xe6, 0xfb, 0xda, 0x83, 0xfb, 0xff, 0xfa, 0xbe, 0x36, 0x41,\n                0x12, 0x13, 0x74, 0x80, 0x39, 0x80, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n            ],\n    );\n    assert(enc_val1.1 == 21);\n    // Issue 2399\n    let result_0 = bitshift_literal_0();\n    assert(result_0 == 1);\n    let result_4 = bitshift_literal_4();\n    assert(result_4 == 16);\n    let result_0 = bitshift_variable(0);\n    assert(result_0 == 1);\n    let result_4 = bitshift_variable(4);\n    assert(result_4 == 16);\n\n    // Issue 6609\n    assert(u % -13 == 0);\n    assert(u % v == 0);\n    assert(u % -11 == 4);\n    assert(-u % -11 == -4);\n    assert(u % -11 == u % (v + 2));\n    assert(-u % -11 == -u % (v + 2));\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
