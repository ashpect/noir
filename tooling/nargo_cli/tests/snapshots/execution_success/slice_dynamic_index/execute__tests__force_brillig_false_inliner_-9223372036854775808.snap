---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _872",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 4294967290 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(1)), Simple(Witness(2))]",
    "BLACKBOX::RANGE [(_2, 32)] []",
    "EXPR [ (1, _0) (-4294967296, _1) (-1, _2) 4294967290 ]",
    "EXPR [ (-1, _1) 0 ]",
    "EXPR [ (-1, _3) 0 ]",
    "EXPR [ (-1, _4) 1 ]",
    "EXPR [ (-1, _5) 2 ]",
    "EXPR [ (-1, _6) 3 ]",
    "EXPR [ (-1, _7) 4 ]",
    "INIT (id: 0, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _0) (-1, _8) -1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _9) 0 ]) ",
    "EXPR [ (1, _9) -4 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 4294967287 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(10)), Simple(Witness(11))]",
    "BLACKBOX::RANGE [(_11, 32)] []",
    "EXPR [ (1, _0) (-4294967296, _10) (-1, _11) 4294967287 ]",
    "EXPR [ (-1, _10) 0 ]",
    "EXPR [ (1, _0) (-1, _12) -4 ]",
    "MEM (id: 0, read at: EXPR [ (1, _12) 0 ], value: EXPR [ (1, _13) 0 ]) ",
    "EXPR [ (1, _13) -1 ]",
    "INIT (id: 1, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "MEM (id: 1, write EXPR [ (1, _3) 0 ] at: EXPR [ (1, _12) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _14) 0 ]) ",
    "EXPR [ (1, _14) -4 ]",
    "MEM (id: 1, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _15) 0 ]) ",
    "EXPR [ (1, _15) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(16)), Simple(Witness(17))]",
    "BLACKBOX::RANGE [(_16, 222)] []",
    "BLACKBOX::RANGE [(_17, 32)] []",
    "EXPR [ (1, _8) (-4294967296, _16) (-1, _17) 0 ]",
    "EXPR [ (-1, _16) (-1, _18) 5096253676302562286669017222071363378443840053029366383258766538131 ]",
    "BLACKBOX::RANGE [(_18, 222)] []",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(16))], q_c: 5096253676302562286669017222071363378443840053029366383258766538131 })], outputs: [Simple(Witness(19))]",
    "EXPR [ (-1, _16, _19) (5096253676302562286669017222071363378443840053029366383258766538131, _19) (1, _20) -1 ]",
    "EXPR [ (-1, _16, _20) (5096253676302562286669017222071363378443840053029366383258766538131, _20) 0 ]",
    "EXPR [ (1, _17, _20) (1, _20, _20) (268435454, _20) (-1, _21) 0 ]",
    "BLACKBOX::RANGE [(_21, 32)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(17))], q_c: 4294967286 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(22)), Simple(Witness(23))]",
    "BLACKBOX::RANGE [(_22, 1)] []",
    "BLACKBOX::RANGE [(_23, 32)] []",
    "EXPR [ (1, _17) (-4294967296, _22) (-1, _23) 4294967286 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _22) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(24)), Simple(Witness(25))]",
    "BLACKBOX::RANGE [(_24, 1)] []",
    "BLACKBOX::RANGE [(_25, 33)] []",
    "EXPR [ (-1, _22) (1, _25) (-1, _26) 4294967296 ]",
    "BLACKBOX::RANGE [(_26, 33)] []",
    "EXPR [ (-1, _8, _22) (4294967296, _22, _24) (1, _22, _25) (1, _8) (-4294967291, _22) (-4294967296, _24) (-1, _25) 4294967291 ]",
    "EXPR [ (1, _22, _24) (-1, _24) 0 ]",
    "EXPR [ (-1, _8, _22) (1, _8) (-1, _27) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _27) 0 ], value: EXPR [ (1, _28) 0 ]) ",
    "EXPR [ (-1, _22, _28) (4, _22) (1, _28) -4 ]",
    "EXPR [ (-1, _8, _22) (1, _8) (-1, _29) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _29) 0 ], value: EXPR [ (1, _30) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _31) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _32) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _33) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _34) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _35) 0 ]) ",
    "INIT (id: 2, len: 5, witnesses: [_31, _32, _33, _34, _35])",
    "EXPR [ (-1, _22, _28) (2, _22) (1, _28) (-1, _640) 0 ]",
    "EXPR [ (1, _22, _30) (-1, _36) (1, _640) -2 ]",
    "MEM (id: 2, write EXPR [ (1, _36) 0 ] at: EXPR [ (1, _29) 0 ]) ",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _22) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967290 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(37)), Simple(Witness(38))]",
    "BLACKBOX::RANGE [(_37, 1)] []",
    "BLACKBOX::RANGE [(_38, 33)] []",
    "EXPR [ (-1, _22) (1, _38) (-1, _39) 4294967296 ]",
    "BLACKBOX::RANGE [(_39, 33)] []",
    "EXPR [ (-1, _8, _22) (4294967296, _22, _37) (1, _22, _38) (1, _8) (-4294967290, _22) (-4294967296, _37) (-1, _38) 4294967290 ]",
    "EXPR [ (1, _22, _37) (-1, _37) 0 ]",
    "EXPR [ (-1, _8, _22) (1, _8) (1, _22) (-1, _40) -1 ]",
    "MEM (id: 2, read at: EXPR [ (1, _40) 0 ], value: EXPR [ (1, _41) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _42) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _43) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _44) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _45) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _46) 0 ]) ",
    "INIT (id: 3, len: 5, witnesses: [_42, _43, _44, _45, _46])",
    "EXPR [ (1, _22, _41) (-1, _47) (1, _640) -2 ]",
    "MEM (id: 3, write EXPR [ (1, _47) 0 ] at: EXPR [ (1, _40) 0 ]) ",
    "EXPR [ (-3, _22) (-1, _48) 3 ]",
    "MEM (id: 3, read at: EXPR [ (1, _48) 0 ], value: EXPR [ (1, _49) 0 ]) ",
    "EXPR [ (-3, _22) (-1, _50) 3 ]",
    "MEM (id: 1, read at: EXPR [ (1, _50) 0 ], value: EXPR [ (1, _51) 0 ]) ",
    "EXPR [ (-4, _22) (-1, _52) 4 ]",
    "MEM (id: 3, read at: EXPR [ (1, _52) 0 ], value: EXPR [ (1, _53) 0 ]) ",
    "EXPR [ (-4, _22) (-1, _54) 4 ]",
    "MEM (id: 1, read at: EXPR [ (1, _54) 0 ], value: EXPR [ (1, _55) 0 ]) ",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _22) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(56)), Simple(Witness(57))]",
    "BLACKBOX::RANGE [(_56, 1)] []",
    "BLACKBOX::RANGE [(_57, 33)] []",
    "EXPR [ (1, _22) (1, _57) (-1, _58) 4294967295 ]",
    "BLACKBOX::RANGE [(_58, 33)] []",
    "EXPR [ (1, _8, _22) (-4294967296, _22, _56) (-1, _22, _57) (4294967291, _22) 0 ]",
    "EXPR [ (-1, _22, _56) 0 ]",
    "EXPR [ (1, _8, _22) (-1, _59) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _59) 0 ], value: EXPR [ (1, _60) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _61) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _62) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _63) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _64) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _65) 0 ]) ",
    "INIT (id: 4, len: 5, witnesses: [_61, _62, _63, _64, _65])",
    "EXPR [ (-1, _22, _60) (1, _60) (-1, _66) 0 ]",
    "MEM (id: 4, write EXPR [ (1, _66) 0 ] at: EXPR [ (1, _59) 0 ]) ",
    "EXPR [ (3, _22) (-1, _67) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _67) 0 ], value: EXPR [ (1, _68) 0 ]) ",
    "EXPR [ (-1, _22) (-1, _69) 1 ]",
    "EXPR [ (-1, _22, _49) (1, _22, _51) (1, _49) (-1, _70) 0 ]",
    "EXPR [ (4, _22) (-1, _71) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _71) 0 ], value: EXPR [ (1, _72) 0 ]) ",
    "EXPR [ (1, _22, _55) (-1, _650) 0 ]",
    "EXPR [ (-1, _22, _53) (1, _53) (-1, _73) (1, _650) 0 ]",
    "EXPR [ (1, _22, _68) (1, _69, _70) -2 ]",
    "EXPR [ (1, _22, _72) (-1, _653) 0 ]",
    "EXPR [ (1, _69, _73) (1, _653) -2 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(17))], q_c: 4294967306 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(74)), Simple(Witness(75))]",
    "BLACKBOX::RANGE [(_75, 32)] []",
    "EXPR [ (-1, _17) (-4294967296, _74) (-1, _75) 4294967306 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _74) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(76)), Simple(Witness(77))]",
    "BLACKBOX::RANGE [(_76, 1)] []",
    "BLACKBOX::RANGE [(_77, 33)] []",
    "EXPR [ (-1, _74) (1, _77) (-1, _78) 4294967296 ]",
    "BLACKBOX::RANGE [(_78, 33)] []",
    "EXPR [ (-1, _8, _74) (4294967296, _74, _76) (1, _74, _77) (1, _8) (-4294967291, _74) (-4294967296, _76) (-1, _77) 4294967291 ]",
    "EXPR [ (1, _74, _76) (-1, _76) 0 ]",
    "EXPR [ (-1, _8, _74) (1, _8) (-1, _79) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _79) 0 ], value: EXPR [ (1, _80) 0 ]) ",
    "EXPR [ (-1, _74, _80) (4, _74) (1, _80) -4 ]",
    "EXPR [ (-1, _8, _74) (1, _8) (-1, _81) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _81) 0 ], value: EXPR [ (1, _82) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _83) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _84) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _85) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _86) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _87) 0 ]) ",
    "INIT (id: 5, len: 5, witnesses: [_83, _84, _85, _86, _87])",
    "EXPR [ (-1, _74, _80) (2, _74) (1, _80) (-1, _658) 0 ]",
    "EXPR [ (1, _74, _82) (-1, _88) (1, _658) -2 ]",
    "MEM (id: 5, write EXPR [ (1, _88) 0 ] at: EXPR [ (1, _81) 0 ]) ",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _74) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967290 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(89)), Simple(Witness(90))]",
    "BLACKBOX::RANGE [(_89, 1)] []",
    "BLACKBOX::RANGE [(_90, 33)] []",
    "EXPR [ (-1, _74) (1, _90) (-1, _91) 4294967296 ]",
    "BLACKBOX::RANGE [(_91, 33)] []",
    "EXPR [ (-1, _8, _74) (4294967296, _74, _89) (1, _74, _90) (1, _8) (-4294967290, _74) (-4294967296, _89) (-1, _90) 4294967290 ]",
    "EXPR [ (1, _74, _89) (-1, _89) 0 ]",
    "EXPR [ (-1, _8, _74) (1, _8) (1, _74) (-1, _92) -1 ]",
    "MEM (id: 5, read at: EXPR [ (1, _92) 0 ], value: EXPR [ (1, _93) 0 ]) ",
    "EXPR [ (1, _74, _93) (-1, _94) (1, _658) -2 ]",
    "MEM (id: 5, write EXPR [ (1, _94) 0 ] at: EXPR [ (1, _92) 0 ]) ",
    "EXPR [ (-4, _74) (-1, _95) 4 ]",
    "MEM (id: 5, read at: EXPR [ (1, _95) 0 ], value: EXPR [ (1, _96) 0 ]) ",
    "EXPR [ (-4, _74) (-1, _97) 4 ]",
    "MEM (id: 1, read at: EXPR [ (1, _97) 0 ], value: EXPR [ (1, _98) 0 ]) ",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _74) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(99)), Simple(Witness(100))]",
    "BLACKBOX::RANGE [(_99, 1)] []",
    "BLACKBOX::RANGE [(_100, 33)] []",
    "EXPR [ (1, _74) (1, _100) (-1, _101) 4294967295 ]",
    "BLACKBOX::RANGE [(_101, 33)] []",
    "EXPR [ (1, _8, _74) (-4294967296, _74, _99) (-1, _74, _100) (4294967291, _74) 0 ]",
    "EXPR [ (-1, _74, _99) 0 ]",
    "EXPR [ (1, _8, _74) (-1, _102) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _102) 0 ], value: EXPR [ (1, _103) 0 ]) ",
    "EXPR [ (-1, _74, _103) (1, _103) (-1, _104) 0 ]",
    "MEM (id: 1, write EXPR [ (1, _104) 0 ] at: EXPR [ (1, _102) 0 ]) ",
    "EXPR [ (4, _74) (-1, _105) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _105) 0 ], value: EXPR [ (1, _106) 0 ]) ",
    "EXPR [ (-1, _74) (-1, _107) 1 ]",
    "EXPR [ (-1, _74, _96) (1, _74, _98) (1, _96) (-1, _108) 0 ]",
    "EXPR [ (1, _74, _106) (1, _107, _108) 0 ]",
    "EXPR [ (4, _69) (-1, _109) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _109) 0 ], value: EXPR [ (1, _110) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(12))], q_c: -1 })], outputs: [Simple(Witness(111))]",
    "EXPR [ (1, _12, _111) (-1, _111) (1, _112) -1 ]",
    "EXPR [ (1, _12, _112) (-1, _112) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _112, _69) (1, _69) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(113)), Simple(Witness(114))]",
    "BLACKBOX::RANGE [(_113, 1)] []",
    "BLACKBOX::RANGE [(_114, 33)] []",
    "EXPR [ (-1, _69, _112) (1, _69) (1, _114) (-1, _115) 4294967295 ]",
    "BLACKBOX::RANGE [(_115, 33)] []",
    "EXPR [ (4294967296, _113) (1, _114) (-1, _116) 0 ]",
    "EXPR [ (-1, _69, _112) (1, _69) (-1, _117) 0 ]",
    "EXPR [ (1, _8, _117) (-1, _116, _117) (4294967291, _117) 0 ]",
    "EXPR [ (-1, _113, _117) 0 ]",
    "EXPR [ (1, _8, _117) (-1, _118) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _118) 0 ], value: EXPR [ (1, _119) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _120) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _121) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _122) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _123) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _124) 0 ]) ",
    "INIT (id: 6, len: 5, witnesses: [_120, _121, _122, _123, _124])",
    "EXPR [ (1, _28, _117) (-1, _117, _119) (18, _117) (1, _119) (-1, _125) 0 ]",
    "MEM (id: 6, write EXPR [ (1, _125) 0 ] at: EXPR [ (1, _118) 0 ]) ",
    "EXPR [ (4, _117) (-1, _126) 0 ]",
    "MEM (id: 6, read at: EXPR [ (1, _126) 0 ], value: EXPR [ (1, _127) 0 ]) ",
    "EXPR [ (-1, _117) (-1, _128) 1 ]",
    "EXPR [ (1, _69, _110) (-1, _129) (1, _650) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: -5 })], outputs: [Simple(Witness(130))]",
    "EXPR [ (1, _8, _130) (-5, _130) (1, _131) -1 ]",
    "EXPR [ (1, _8, _131) (-5, _131) 0 ]",
    "EXPR [ (1, _69, _112) (-1, _132) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _132, _131) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(133)), Simple(Witness(134))]",
    "BLACKBOX::RANGE [(_133, 1)] []",
    "BLACKBOX::RANGE [(_134, 33)] []",
    "EXPR [ (1, _131, _132) (1, _134) (-1, _135) 4294967295 ]",
    "BLACKBOX::RANGE [(_135, 33)] []",
    "EXPR [ (4294967296, _133) (1, _134) (-1, _136) 0 ]",
    "EXPR [ (1, _131, _132) (-1, _137) 0 ]",
    "EXPR [ (1, _8, _137) (-1, _136, _137) (4294967291, _137) 0 ]",
    "EXPR [ (-1, _133, _137) 0 ]",
    "EXPR [ (1, _28, _137) (-24, _137) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _131, _132) (1, _132) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(138)), Simple(Witness(139))]",
    "BLACKBOX::RANGE [(_138, 1)] []",
    "BLACKBOX::RANGE [(_139, 33)] []",
    "EXPR [ (-1, _131, _132) (1, _132) (1, _139) (-1, _140) 4294967295 ]",
    "BLACKBOX::RANGE [(_140, 33)] []",
    "EXPR [ (4294967296, _138) (1, _139) (-1, _141) 0 ]",
    "EXPR [ (-1, _131, _132) (1, _132) (-1, _142) 0 ]",
    "EXPR [ (1, _8, _142) (-1, _141, _142) (4294967291, _142) 0 ]",
    "EXPR [ (-1, _138, _142) 0 ]",
    "EXPR [ (1, _8, _142) (-1, _143) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _143) 0 ], value: EXPR [ (1, _144) 0 ]) ",
    "EXPR [ (-1, _142, _144) (10, _142) (1, _144) (-1, _145) 0 ]",
    "MEM (id: 2, write EXPR [ (1, _145) 0 ] at: EXPR [ (1, _143) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _146) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _147) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _148) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _149) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _150) 0 ]) ",
    "EXPR [ (-1, _151) 15 ]",
    "EXPR [ (-1, _142) (-1, _152) 1 ]",
    "EXPR [ (-5, _22, _117) (-5, _69, _117) (5, _22) (5, _69) (5, _117) (-1, _153) 0 ]",
    "EXPR [ (1, _117, _127) (1, _128, _129) (-1, _154) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _132) 0 ]",
    "inputs: [Single(Expression { mul_terms: [(-1, Witness(152), Witness(153))], linear_combinations: [(-6, Witness(142))], q_c: 4294967300 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(155)), Simple(Witness(156))]",
    "BLACKBOX::RANGE [(_155, 1)] []",
    "BLACKBOX::RANGE [(_156, 33)] []",
    "EXPR [ (1, _132) (1, _156) (-1, _157) 4294967295 ]",
    "BLACKBOX::RANGE [(_157, 33)] []",
    "EXPR [ (-1, _152, _153) (-6, _142) (-1, _158) 4294967300 ]",
    "EXPR [ (-4294967296, _132, _155) (-1, _132, _156) (1, _132, _158) 0 ]",
    "EXPR [ (-1, _132, _155) 0 ]",
    "EXPR [ (1, _142, _150) (1, _152, _154) (-1, _159) 0 ]",
    "EXPR [ (1, _132, _159) (-10, _132) 0 ]",
    "EXPR [ (1, _152, _153) (6, _142) (-1, _160) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-1, Witness(69), Witness(160))], linear_combinations: [(-5, Witness(22))], q_c: 4294967300 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(161)), Simple(Witness(162))]",
    "BLACKBOX::RANGE [(_162, 32)] []",
    "EXPR [ (-1, _69, _160) (-5, _22) (-4294967296, _161) (-1, _162) 4294967300 ]",
    "EXPR [ (-1, _161) 0 ]",
    "EXPR [ (1, _69, _159) (1, _653) -10 ]",
    "EXPR [ (1, _69, _160) (5, _22) -6 ]",
    "EXPR [ (15, _69, _142) -15 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(12))], q_c: 4294967292 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(163)), Simple(Witness(164))]",
    "BLACKBOX::RANGE [(_164, 32)] []",
    "EXPR [ (1, _12) (-4294967296, _163) (-1, _164) 4294967292 ]",
    "EXPR [ (-1, _163) 0 ]",
    "EXPR [ (1, _12) (-1, _165) 1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _165) 0 ], value: EXPR [ (1, _166) 0 ]) ",
    "EXPR [ (1, _166) -2 ]",
    "INIT (id: 8, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "MEM (id: 8, write EXPR [ (1, _3) 0 ] at: EXPR [ (1, _165) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _167) 0 ]) ",
    "EXPR [ (1, _167) -4 ]",
    "MEM (id: 8, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _168) 0 ]) ",
    "EXPR [ (1, _168) 0 ]",
    "EXPR [ (1, _8, _69) (-1, _169) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _169) 0 ], value: EXPR [ (1, _170) 0 ]) ",
    "EXPR [ (1, _8, _69) (-1, _171) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _171) 0 ], value: EXPR [ (1, _172) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _173) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _174) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _175) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _176) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _177) 0 ]) ",
    "INIT (id: 9, len: 5, witnesses: [_173, _174, _175, _176, _177])",
    "EXPR [ (1, _69, _170) (-1, _69, _172) (-2, _69) (1, _172) (-1, _178) 0 ]",
    "MEM (id: 9, write EXPR [ (1, _178) 0 ] at: EXPR [ (1, _171) 0 ]) ",
    "EXPR [ (4, _69) (-1, _179) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _179) 0 ], value: EXPR [ (1, _180) 0 ]) ",
    "EXPR [ (4, _69) (-1, _181) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _181) 0 ], value: EXPR [ (1, _182) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(165))], q_c: -1 })], outputs: [Simple(Witness(183))]",
    "EXPR [ (1, _165, _183) (-1, _183) (1, _184) -1 ]",
    "EXPR [ (1, _165, _184) (-1, _184) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _69, _184) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(185)), Simple(Witness(186))]",
    "BLACKBOX::RANGE [(_185, 1)] []",
    "BLACKBOX::RANGE [(_186, 33)] []",
    "EXPR [ (1, _69, _184) (1, _186) (-1, _187) 4294967295 ]",
    "BLACKBOX::RANGE [(_187, 33)] []",
    "EXPR [ (4294967296, _185) (1, _186) (-1, _188) 0 ]",
    "EXPR [ (1, _69, _184) (-1, _189) 0 ]",
    "EXPR [ (1, _8, _189) (-1, _188, _189) (4294967291, _189) 0 ]",
    "EXPR [ (-1, _185, _189) 0 ]",
    "EXPR [ (1, _8, _189) (-1, _190) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _190) 0 ], value: EXPR [ (1, _191) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _192) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _193) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _194) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _195) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _196) 0 ]) ",
    "INIT (id: 10, len: 5, witnesses: [_192, _193, _194, _195, _196])",
    "EXPR [ (1, _170, _189) (-1, _189, _191) (18, _189) (1, _191) (-1, _197) 0 ]",
    "MEM (id: 10, write EXPR [ (1, _197) 0 ] at: EXPR [ (1, _190) 0 ]) ",
    "EXPR [ (4, _189) (-1, _198) 0 ]",
    "MEM (id: 10, read at: EXPR [ (1, _198) 0 ], value: EXPR [ (1, _199) 0 ]) ",
    "EXPR [ (-1, _189) (-1, _200) 1 ]",
    "EXPR [ (1, _22, _182) (1, _69, _180) (-1, _201) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: -4 })], outputs: [Simple(Witness(202))]",
    "EXPR [ (1, _8, _202) (-4, _202) (1, _203) -1 ]",
    "EXPR [ (1, _8, _203) (-4, _203) 0 ]",
    "EXPR [ (-1, _69, _184) (1, _69) (-1, _204) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _204, _203) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(205)), Simple(Witness(206))]",
    "BLACKBOX::RANGE [(_205, 1)] []",
    "BLACKBOX::RANGE [(_206, 33)] []",
    "EXPR [ (1, _203, _204) (1, _206) (-1, _207) 4294967295 ]",
    "BLACKBOX::RANGE [(_207, 33)] []",
    "EXPR [ (4294967296, _205) (1, _206) (-1, _208) 0 ]",
    "EXPR [ (1, _203, _204) (-1, _209) 0 ]",
    "EXPR [ (1, _8, _209) (-1, _208, _209) (4294967291, _209) 0 ]",
    "EXPR [ (-1, _205, _209) 0 ]",
    "EXPR [ (1, _8, _209) (-1, _210) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _210) 0 ], value: EXPR [ (1, _211) 0 ]) ",
    "EXPR [ (-1, _209, _211) (5, _209) (1, _211) (-1, _212) 0 ]",
    "MEM (id: 9, write EXPR [ (1, _212) 0 ] at: EXPR [ (1, _210) 0 ]) ",
    "EXPR [ (4, _209) (-1, _213) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _213) 0 ], value: EXPR [ (1, _214) 0 ]) ",
    "EXPR [ (-1, _209) (-1, _215) 1 ]",
    "EXPR [ (1, _189, _199) (1, _200, _201) (-1, _216) 0 ]",
    "EXPR [ (1, _209, _214) (1, _215, _216) (-1, _217) 0 ]",
    "EXPR [ (1, _204, _217) (-5, _204) 0 ]",
    "EXPR [ (1, _8, _22) (-1, _218) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _218) 0 ], value: EXPR [ (1, _219) 0 ]) ",
    "EXPR [ (-1, _22, _219) (1, _219) (-1, _220) 0 ]",
    "MEM (id: 8, write EXPR [ (1, _220) 0 ] at: EXPR [ (1, _218) 0 ]) ",
    "EXPR [ (4, _22) (-1, _221) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _221) 0 ], value: EXPR [ (1, _222) 0 ]) ",
    "EXPR [ (1, _22, _222) (1, _69, _217) -5 ]",
    "EXPR [ (1, _8, _69) (-1, _223) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _223) 0 ], value: EXPR [ (1, _224) 0 ]) ",
    "EXPR [ (1, _69, _224) (4, _22) -4 ]",
    "EXPR [ (1, _8, _69) (-1, _225) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _225) 0 ], value: EXPR [ (1, _226) 0 ]) ",
    "INIT (id: 11, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _69, _224) (-1, _69, _226) (-2, _69) (1, _226) (-1, _227) 0 ]",
    "MEM (id: 11, write EXPR [ (1, _227) 0 ] at: EXPR [ (1, _225) 0 ]) ",
    "EXPR [ (4, _69) (-1, _228) 0 ]",
    "MEM (id: 11, read at: EXPR [ (1, _228) 0 ], value: EXPR [ (1, _229) 0 ]) ",
    "EXPR [ (1, _8, _22) (-1, _230) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _230) 0 ], value: EXPR [ (1, _231) 0 ]) ",
    "EXPR [ (1, _22, _231) 0 ]",
    "EXPR [ (1, _69, _229) (4, _22) -2 ]",
    "INIT (id: 12, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _8, _69) (-1, _232) 0 ]",
    "MEM (id: 12, read at: EXPR [ (1, _232) 0 ], value: EXPR [ (1, _233) 0 ]) ",
    "EXPR [ (1, _69, _233) (4, _22) -4 ]",
    "EXPR [ (1, _8, _69) (-1, _234) 0 ]",
    "MEM (id: 12, read at: EXPR [ (1, _234) 0 ], value: EXPR [ (1, _235) 0 ]) ",
    "INIT (id: 13, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _69, _233) (-1, _69, _235) (-2, _69) (1, _235) (-1, _236) 0 ]",
    "MEM (id: 13, write EXPR [ (1, _236) 0 ] at: EXPR [ (1, _234) 0 ]) ",
    "MEM (id: 13, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _237) 0 ]) ",
    "EXPR [ (1, _8, _22) (-1, _238) 0 ]",
    "MEM (id: 12, read at: EXPR [ (1, _238) 0 ], value: EXPR [ (1, _239) 0 ]) ",
    "EXPR [ (1, _22, _239) 0 ]",
    "EXPR [ (1, _69, _237) (4, _22) -2 ]",
    "EXPR [ (1, _8, _107) (-1, _240) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _240) 0 ], value: EXPR [ (1, _241) 0 ]) ",
    "EXPR [ (1, _107, _241) 0 ]",
    "EXPR [ (1, _8, _74) (-1, _242) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _242) 0 ], value: EXPR [ (1, _243) 0 ]) ",
    "EXPR [ (1, _74, _243) (-4, _74) 0 ]",
    "EXPR [ (1, _8, _74) (-1, _244) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _244) 0 ], value: EXPR [ (1, _245) 0 ]) ",
    "INIT (id: 14, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _74, _243) (-1, _74, _245) (-2, _74) (1, _245) (-1, _246) 0 ]",
    "MEM (id: 14, write EXPR [ (1, _246) 0 ] at: EXPR [ (1, _244) 0 ]) ",
    "EXPR [ (4, _74) (-1, _247) 0 ]",
    "MEM (id: 14, read at: EXPR [ (1, _247) 0 ], value: EXPR [ (1, _248) 0 ]) ",
    "EXPR [ (1, _74, _248) (4, _107) -2 ]",
    "MEM (id: 11, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _249) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _250) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _251) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _252) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _253) 0 ]) ",
    "EXPR [ (-1, _254) 10 ]",
    "INIT (id: 15, len: 6, witnesses: [_249, _250, _251, _252, _253, _254])",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _69) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967290 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(255)), Simple(Witness(256))]",
    "BLACKBOX::RANGE [(_255, 1)] []",
    "BLACKBOX::RANGE [(_256, 33)] []",
    "EXPR [ (1, _69) (1, _256) (-1, _257) 4294967295 ]",
    "BLACKBOX::RANGE [(_257, 33)] []",
    "EXPR [ (1, _8, _69) (-4294967296, _69, _255) (-1, _69, _256) (4294967290, _69) 0 ]",
    "EXPR [ (-1, _69, _255) 0 ]",
    "EXPR [ (1, _8, _69) (-1, _258) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _258) 0 ], value: EXPR [ (1, _259) 0 ]) ",
    "EXPR [ (-1, _69, _259) (10, _69) (1, _259) (-1, _260) 0 ]",
    "MEM (id: 15, write EXPR [ (1, _260) 0 ] at: EXPR [ (1, _258) 0 ]) ",
    "EXPR [ (5, _69) (-1, _261) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _261) 0 ], value: EXPR [ (1, _262) 0 ]) ",
    "EXPR [ (1, _69, _262) (-10, _69) 0 ]",
    "EXPR [ (1, _8, _69) (-1, _263) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _263) 0 ], value: EXPR [ (1, _264) 0 ]) ",
    "EXPR [ (-1, _69, _264) (20, _69) (1, _264) (-1, _265) 0 ]",
    "MEM (id: 15, write EXPR [ (1, _265) 0 ] at: EXPR [ (1, _263) 0 ]) ",
    "EXPR [ (1, _8, _69) (-1, _266) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _266) 0 ], value: EXPR [ (1, _267) 0 ]) ",
    "EXPR [ (-1, _69, _267) (30, _69) (1, _267) (-1, _268) 0 ]",
    "MEM (id: 15, write EXPR [ (1, _268) 0 ] at: EXPR [ (1, _266) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _269) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _270) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _271) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _272) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _273) 0 ]) ",
    "EXPR [ (-1, _274) 5 ]",
    "MEM (id: 15, read at: EXPR [ (1, _274) 0 ], value: EXPR [ (1, _275) 0 ]) ",
    "EXPR [ (-1, _276) 11 ]",
    "EXPR [ (1, _69, _273) (-30, _69) 0 ]",
    "EXPR [ (-1, _277) 12 ]",
    "INIT (id: 17, len: 8, witnesses: [_277, _276, _269, _270, _271, _272, _273, _275])",
    "EXPR [ (1, _69, _273) (-30, _69) 0 ]",
    "EXPR [ (-1, _278) 7 ]",
    "MEM (id: 17, read at: EXPR [ (1, _278) 0 ], value: EXPR [ (1, _279) 0 ]) ",
    "INIT (id: 18, len: 8, witnesses: [_277, _276, _269, _270, _271, _272, _273, _275])",
    "EXPR [ (1, _69, _279) (-10, _69) 0 ]",
    "MEM (id: 18, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _280) 0 ]) ",
    "INIT (id: 19, len: 7, witnesses: [_276, _269, _270, _271, _272, _273, _275])",
    "EXPR [ (1, _69, _280) (-12, _69) 0 ]",
    "EXPR [ (1, _17, _69) (-2, _69) (-1, _281) 0 ]",
    "BLACKBOX::RANGE [(_281, 32)] []",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _69) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(281))], q_c: 4294967289 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(282)), Simple(Witness(283))]",
    "BLACKBOX::RANGE [(_282, 1)] []",
    "BLACKBOX::RANGE [(_283, 33)] []",
    "EXPR [ (1, _69) (1, _283) (-1, _284) 4294967295 ]",
    "BLACKBOX::RANGE [(_284, 33)] []",
    "EXPR [ (1, _69, _281) (-4294967296, _69, _282) (-1, _69, _283) (4294967289, _69) 0 ]",
    "EXPR [ (-1, _69, _282) 0 ]",
    "INIT (id: 20, len: 7, witnesses: [_3, _3, _3, _3, _3, _3, _3])",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551616 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(285)), Simple(Witness(286))]",
    "BLACKBOX::RANGE [(_285, 1)] []",
    "BLACKBOX::RANGE [(_286, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _285) (-1, _286) 18446744073709551616 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551615 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(287)), Simple(Witness(288))]",
    "BLACKBOX::RANGE [(_287, 1)] []",
    "BLACKBOX::RANGE [(_288, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _287) (-1, _288) 18446744073709551615 ]",
    "MEM (id: 19, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _289) 0 ]) ",
    "EXPR [ (1, _285, _287) (-1, _285) (-1, _290) 1 ]",
    "EXPR [ (-20, _285, _287) (1, _289, _290) (20, _285) (-1, _291) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _291) 0 ] at: EXPR [ (1, _3) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551617 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(292)), Simple(Witness(293))]",
    "BLACKBOX::RANGE [(_292, 1)] []",
    "BLACKBOX::RANGE [(_293, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _292) (-1, _293) 18446744073709551617 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551616 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(294)), Simple(Witness(295))]",
    "BLACKBOX::RANGE [(_294, 1)] []",
    "BLACKBOX::RANGE [(_295, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _294) (-1, _295) 18446744073709551616 ]",
    "EXPR [ (-1, _292) (-1, _296) 1 ]",
    "MEM (id: 19, read at: EXPR [ (1, _296) 0 ], value: EXPR [ (1, _297) 0 ]) ",
    "EXPR [ (1, _292, _294) (-1, _292) (-1, _298) 1 ]",
    "EXPR [ (-20, _292, _294) (1, _297, _298) (20, _292) (-1, _299) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _299) 0 ] at: EXPR [ (1, _4) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551618 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(300)), Simple(Witness(301))]",
    "BLACKBOX::RANGE [(_300, 1)] []",
    "BLACKBOX::RANGE [(_301, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _300) (-1, _301) 18446744073709551618 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551617 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(302)), Simple(Witness(303))]",
    "BLACKBOX::RANGE [(_302, 1)] []",
    "BLACKBOX::RANGE [(_303, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _302) (-1, _303) 18446744073709551617 ]",
    "EXPR [ (-1, _300) (-1, _304) 2 ]",
    "MEM (id: 19, read at: EXPR [ (1, _304) 0 ], value: EXPR [ (1, _305) 0 ]) ",
    "EXPR [ (1, _300, _302) (-1, _300) (-1, _306) 1 ]",
    "EXPR [ (-20, _300, _302) (1, _305, _306) (20, _300) (-1, _307) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _307) 0 ] at: EXPR [ (1, _5) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551619 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(308)), Simple(Witness(309))]",
    "BLACKBOX::RANGE [(_308, 1)] []",
    "BLACKBOX::RANGE [(_309, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _308) (-1, _309) 18446744073709551619 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551618 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(310)), Simple(Witness(311))]",
    "BLACKBOX::RANGE [(_310, 1)] []",
    "BLACKBOX::RANGE [(_311, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _310) (-1, _311) 18446744073709551618 ]",
    "EXPR [ (-1, _308) (-1, _312) 3 ]",
    "MEM (id: 19, read at: EXPR [ (1, _312) 0 ], value: EXPR [ (1, _313) 0 ]) ",
    "EXPR [ (1, _308, _310) (-1, _308) (-1, _314) 1 ]",
    "EXPR [ (-20, _308, _310) (1, _313, _314) (20, _308) (-1, _315) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _315) 0 ] at: EXPR [ (1, _6) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551620 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(316)), Simple(Witness(317))]",
    "BLACKBOX::RANGE [(_316, 1)] []",
    "BLACKBOX::RANGE [(_317, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _316) (-1, _317) 18446744073709551620 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551619 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(318)), Simple(Witness(319))]",
    "BLACKBOX::RANGE [(_318, 1)] []",
    "BLACKBOX::RANGE [(_319, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _318) (-1, _319) 18446744073709551619 ]",
    "EXPR [ (-1, _316) (-1, _320) 4 ]",
    "MEM (id: 19, read at: EXPR [ (1, _320) 0 ], value: EXPR [ (1, _321) 0 ]) ",
    "EXPR [ (1, _316, _318) (-1, _316) (-1, _322) 1 ]",
    "EXPR [ (-20, _316, _318) (1, _321, _322) (20, _316) (-1, _323) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _323) 0 ] at: EXPR [ (1, _7) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551621 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(324)), Simple(Witness(325))]",
    "BLACKBOX::RANGE [(_324, 1)] []",
    "BLACKBOX::RANGE [(_325, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _324) (-1, _325) 18446744073709551621 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551620 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(326)), Simple(Witness(327))]",
    "BLACKBOX::RANGE [(_326, 1)] []",
    "BLACKBOX::RANGE [(_327, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _326) (-1, _327) 18446744073709551620 ]",
    "EXPR [ (-1, _324) (-1, _328) 5 ]",
    "MEM (id: 19, read at: EXPR [ (1, _328) 0 ], value: EXPR [ (1, _329) 0 ]) ",
    "EXPR [ (1, _324, _326) (-1, _324) (-1, _330) 1 ]",
    "EXPR [ (-20, _324, _326) (1, _329, _330) (20, _324) (-1, _331) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _331) 0 ] at: EXPR [ (1, _274) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551622 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(332)), Simple(Witness(333))]",
    "BLACKBOX::RANGE [(_332, 1)] []",
    "BLACKBOX::RANGE [(_333, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _332) (-1, _333) 18446744073709551622 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(281))], q_c: 18446744073709551621 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(334)), Simple(Witness(335))]",
    "BLACKBOX::RANGE [(_334, 1)] []",
    "BLACKBOX::RANGE [(_335, 64)] []",
    "EXPR [ (-1, _281) (-18446744073709551616, _334) (-1, _335) 18446744073709551621 ]",
    "EXPR [ (-1, _332) (-1, _336) 6 ]",
    "MEM (id: 19, read at: EXPR [ (1, _336) 0 ], value: EXPR [ (1, _337) 0 ]) ",
    "EXPR [ (1, _332, _334) (-1, _332) (-1, _338) 1 ]",
    "EXPR [ (-1, _339) 6 ]",
    "EXPR [ (-20, _332, _334) (1, _337, _338) (20, _332) (-1, _340) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _340) 0 ] at: EXPR [ (1, _339) 0 ]) ",
    "EXPR [ (2, _69) (-1, _341) 0 ]",
    "MEM (id: 20, read at: EXPR [ (1, _341) 0 ], value: EXPR [ (1, _342) 0 ]) ",
    "EXPR [ (1, _69, _342) (-20, _69) 0 ]",
    "EXPR [ (6, _69) (-1, _343) 0 ]",
    "MEM (id: 20, read at: EXPR [ (1, _343) 0 ], value: EXPR [ (1, _344) 0 ]) ",
    "EXPR [ (1, _69, _344) (-30, _69) 0 ]",
    "EXPR [ (1, _17, _69) (-1, _69) (-1, _345) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _69) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(345))], q_c: 4294967289 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(346)), Simple(Witness(347))]",
    "BLACKBOX::RANGE [(_346, 1)] []",
    "BLACKBOX::RANGE [(_347, 33)] []",
    "EXPR [ (1, _69) (1, _347) (-1, _348) 4294967295 ]",
    "BLACKBOX::RANGE [(_348, 33)] []",
    "EXPR [ (1, _69, _345) (-4294967296, _69, _346) (-1, _69, _347) (4294967289, _69) 0 ]",
    "EXPR [ (-1, _69, _346) 0 ]",
    "MEM (id: 20, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _349) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _350) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _351) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _352) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _353) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _274) 0 ], value: EXPR [ (1, _354) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _339) 0 ], value: EXPR [ (1, _355) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _345) 0 ], value: EXPR [ (1, _356) 0 ]) ",
    "INIT (id: 21, len: 7, witnesses: [_349, _350, _351, _352, _353, _354, _355])",
    "MEM (id: 20, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _357) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(345))], q_c: 18446744073709551616 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(358)), Simple(Witness(359))]",
    "BLACKBOX::RANGE [(_358, 1)] []",
    "BLACKBOX::RANGE [(_359, 64)] []",
    "EXPR [ (-1, _345) (-18446744073709551616, _358) (-1, _359) 18446744073709551616 ]",
    "EXPR [ (-1, _349, _358) (1, _357, _358) (1, _349) (-1, _360) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _360) 0 ] at: EXPR [ (1, _3) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _361) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(345))], q_c: 18446744073709551617 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(362)), Simple(Witness(363))]",
    "BLACKBOX::RANGE [(_362, 1)] []",
    "BLACKBOX::RANGE [(_363, 64)] []",
    "EXPR [ (-1, _345) (-18446744073709551616, _362) (-1, _363) 18446744073709551617 ]",
    "EXPR [ (-1, _350, _362) (1, _361, _362) (1, _350) (-1, _364) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _364) 0 ] at: EXPR [ (1, _4) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _365) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(345))], q_c: 18446744073709551618 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(366)), Simple(Witness(367))]",
    "BLACKBOX::RANGE [(_366, 1)] []",
    "BLACKBOX::RANGE [(_367, 64)] []",
    "EXPR [ (-1, _345) (-18446744073709551616, _366) (-1, _367) 18446744073709551618 ]",
    "EXPR [ (-1, _351, _366) (1, _365, _366) (1, _351) (-1, _368) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _368) 0 ] at: EXPR [ (1, _5) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _369) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(345))], q_c: 18446744073709551619 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(370)), Simple(Witness(371))]",
    "BLACKBOX::RANGE [(_370, 1)] []",
    "BLACKBOX::RANGE [(_371, 64)] []",
    "EXPR [ (-1, _345) (-18446744073709551616, _370) (-1, _371) 18446744073709551619 ]",
    "EXPR [ (-1, _352, _370) (1, _369, _370) (1, _352) (-1, _372) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _372) 0 ] at: EXPR [ (1, _6) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _274) 0 ], value: EXPR [ (1, _373) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(345))], q_c: 18446744073709551620 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(374)), Simple(Witness(375))]",
    "BLACKBOX::RANGE [(_374, 1)] []",
    "BLACKBOX::RANGE [(_375, 64)] []",
    "EXPR [ (-1, _345) (-18446744073709551616, _374) (-1, _375) 18446744073709551620 ]",
    "EXPR [ (-1, _353, _374) (1, _373, _374) (1, _353) (-1, _376) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _376) 0 ] at: EXPR [ (1, _7) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _339) 0 ], value: EXPR [ (1, _377) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(345))], q_c: 18446744073709551621 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(378)), Simple(Witness(379))]",
    "BLACKBOX::RANGE [(_378, 1)] []",
    "BLACKBOX::RANGE [(_379, 64)] []",
    "EXPR [ (-1, _345) (-18446744073709551616, _378) (-1, _379) 18446744073709551621 ]",
    "EXPR [ (-1, _354, _378) (1, _377, _378) (1, _354) (-1, _380) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _380) 0 ] at: EXPR [ (1, _274) 0 ]) ",
    "EXPR [ (5, _69) (-1, _381) 0 ]",
    "MEM (id: 21, read at: EXPR [ (1, _381) 0 ], value: EXPR [ (1, _382) 0 ]) ",
    "EXPR [ (1, _69, _356) (-1, _69) 0 ]",
    "EXPR [ (5, _22, _69) (6, _69, _69) (6, _22) -6 ]",
    "EXPR [ (1, _69, _382) (20, _22) -30 ]",
    "EXPR [ (1, _8, _107) (-1, _383) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _383) 0 ], value: EXPR [ (1, _384) 0 ]) ",
    "INIT (id: 22, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (-1, _107, _384) (2, _107) (1, _384) (-1, _385) 0 ]",
    "MEM (id: 22, write EXPR [ (1, _385) 0 ] at: EXPR [ (1, _383) 0 ]) ",
    "MEM (id: 22, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _386) 0 ]) ",
    "MEM (id: 22, read at: EXPR [ (1, _107) 0 ], value: EXPR [ (1, _387) 0 ]) ",
    "EXPR [ (2, _107) (-1, _388) 0 ]",
    "MEM (id: 22, read at: EXPR [ (1, _388) 0 ], value: EXPR [ (1, _389) 0 ]) ",
    "EXPR [ (3, _107) (-1, _390) 0 ]",
    "MEM (id: 22, read at: EXPR [ (1, _390) 0 ], value: EXPR [ (1, _391) 0 ]) ",
    "EXPR [ (4, _107) (-1, _392) 0 ]",
    "MEM (id: 22, read at: EXPR [ (1, _392) 0 ], value: EXPR [ (1, _393) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _394) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _395) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _396) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _397) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _398) 0 ]) ",
    "EXPR [ (1, _107, _387) (1, _74) (-1, _399) 0 ]",
    "EXPR [ (1, _107, _389) (2, _74) (-1, _400) 0 ]",
    "EXPR [ (1, _107, _391) (3, _74) (-1, _401) 0 ]",
    "EXPR [ (1, _107, _393) (4, _74) (-1, _402) 0 ]",
    "EXPR [ (5, _74, _107) (5, _107, _107) (6, _74) -6 ]",
    "EXPR [ (10, _74) -10 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: -20 })], outputs: [Simple(Witness(403))]",
    "EXPR [ (1, _8, _403) (-20, _403) (1, _404) -1 ]",
    "EXPR [ (1, _8, _404) (-20, _404) 0 ]",
    "EXPR [ (1, _74, _394) (1, _107, _386) (-1, _405) 0 ]",
    "EXPR [ (1, _74, _395) (1, _107, _399) (-1, _406) 0 ]",
    "EXPR [ (1, _74, _396) (1, _107, _400) (-1, _407) 0 ]",
    "EXPR [ (1, _74, _397) (1, _107, _401) (-1, _408) 0 ]",
    "EXPR [ (1, _74, _398) (1, _107, _402) (-1, _409) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(404))], q_c: -1 })], outputs: [Simple(Witness(410))]",
    "EXPR [ (1, _404, _410) (-1, _410) (1, _411) -1 ]",
    "EXPR [ (1, _404, _411) (-1, _411) 0 ]",
    "EXPR [ (20, _404) (-1, _413) 0 ]",
    "INIT (id: 24, len: 8, witnesses: [_405, _406, _407, _408, _409, _254, _413, _151])",
    "EXPR [ (1, _404) (-1, _414) 6 ]",
    "MEM (id: 24, write EXPR [ (1, _151) 0 ] at: EXPR [ (1, _414) 0 ]) ",
    "MEM (id: 24, read at: EXPR [ (1, _339) 0 ], value: EXPR [ (1, _415) 0 ]) ",
    "EXPR [ (1, _404) 0 ]",
    "EXPR [ (1, _411, _413) (-1, _411, _415) (1, _415) -15 ]",
    "EXPR [ (1, _8) (-1, _12) (-1, _416) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: 0 })], outputs: [Simple(Witness(417))]",
    "EXPR [ (1, _416, _417) (1, _418) -1 ]",
    "EXPR [ (1, _416, _418) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (-1, _418) 1 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(419)), Simple(Witness(420))]",
    "BLACKBOX::RANGE [(_419, 1)] []",
    "BLACKBOX::RANGE [(_420, 33)] []",
    "EXPR [ (-1, _418) (1, _420) (-1, _421) 4294967296 ]",
    "BLACKBOX::RANGE [(_421, 33)] []",
    "EXPR [ (-1, _8, _418) (4294967296, _418, _419) (1, _418, _420) (1, _8) (-4294967291, _418) (-4294967296, _419) (-1, _420) 4294967291 ]",
    "EXPR [ (1, _418, _419) (-1, _419) 0 ]",
    "EXPR [ (-1, _8, _418) (1, _8) (-1, _422) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _422) 0 ], value: EXPR [ (1, _423) 0 ]) ",
    "INIT (id: 25, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _418, _423) (-50, _418) (-1, _424) 50 ]",
    "MEM (id: 25, write EXPR [ (1, _424) 0 ] at: EXPR [ (1, _422) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _425) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _426) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _427) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _428) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _429) 0 ]) ",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _418) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(430)), Simple(Witness(431))]",
    "BLACKBOX::RANGE [(_430, 1)] []",
    "BLACKBOX::RANGE [(_431, 33)] []",
    "EXPR [ (1, _418) (1, _431) (-1, _432) 4294967295 ]",
    "BLACKBOX::RANGE [(_432, 33)] []",
    "EXPR [ (1, _8, _418) (-1, _758) 0 ]",
    "EXPR [ (-4294967296, _418, _430) (-1, _418, _431) (4294967291, _418) (1, _758) 0 ]",
    "EXPR [ (-1, _418, _430) 0 ]",
    "EXPR [ (1, _8, _418) (-1, _433) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _433) 0 ], value: EXPR [ (1, _434) 0 ]) ",
    "EXPR [ (1, _8, _418) (-1, _435) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _435) 0 ], value: EXPR [ (1, _436) 0 ]) ",
    "INIT (id: 28, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _418, _434) (-1, _418, _436) (-2, _418) (1, _436) (-1, _437) 0 ]",
    "MEM (id: 28, write EXPR [ (1, _437) 0 ] at: EXPR [ (1, _435) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _438) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _439) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _440) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _441) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _442) 0 ]) ",
    "EXPR [ (-1, _418) (-1, _443) 1 ]",
    "EXPR [ (-1, _418, _426) (1, _418) (1, _426) (-1, _444) 0 ]",
    "EXPR [ (-1, _418, _427) (2, _418) (1, _427) (-1, _445) 0 ]",
    "EXPR [ (-1, _418, _428) (3, _418) (1, _428) (-1, _446) 0 ]",
    "EXPR [ (-1, _418, _429) (4, _418) (1, _429) (-1, _447) 0 ]",
    "EXPR [ (2, _418, _418) (-3, _418) (-1, _448) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(448))], q_c: 0 })], outputs: [Simple(Witness(449))]",
    "EXPR [ (1, _448, _449) (1, _450) -1 ]",
    "EXPR [ (1, _448, _450) 0 ]",
    "EXPR [ (-1, _418, _425) (1, _418, _438) (1, _425) (-1, _452) 0 ]",
    "EXPR [ (1, _418, _439) (1, _443, _444) (-1, _453) 0 ]",
    "EXPR [ (1, _418, _440) (1, _443, _445) (-1, _454) 0 ]",
    "EXPR [ (1, _418, _441) (1, _443, _446) (-1, _455) 0 ]",
    "EXPR [ (1, _418, _442) (1, _443, _447) (-1, _456) 0 ]",
    "EXPR [ (-1, _12, _418) (1, _12) (-1, _457) (1, _758) 0 ]",
    "EXPR [ (-1, _8, _418) (1, _8) (-1, _458) 0 ]",
    "EXPR [ (-1, _459) 30 ]",
    "INIT (id: 30, len: 8, witnesses: [_452, _453, _454, _455, _456, _457, _458, _459])",
    "EXPR [ (2, _418, _418) (-3, _418) (-1, _460) 7 ]",
    "MEM (id: 30, write EXPR [ (1, _459) 0 ] at: EXPR [ (1, _460) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _461) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _462) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _463) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _464) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _465) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _274) 0 ], value: EXPR [ (1, _466) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _339) 0 ], value: EXPR [ (1, _467) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _278) 0 ], value: EXPR [ (1, _468) 0 ]) ",
    "EXPR [ (2, _418, _418) (-3, _418) 0 ]",
    "EXPR [ (1, _450, _452) (-1, _450, _461) (1, _461) (-1, _469) 0 ]",
    "EXPR [ (1, _450, _453) (-1, _450, _462) (1, _462) (-1, _470) 0 ]",
    "EXPR [ (1, _450, _454) (-1, _450, _463) (1, _463) (-1, _471) 0 ]",
    "EXPR [ (1, _450, _455) (-1, _450, _464) (1, _464) (-1, _472) 0 ]",
    "EXPR [ (1, _450, _456) (-1, _450, _465) (1, _465) (-1, _473) 0 ]",
    "EXPR [ (1, _450, _457) (-1, _450, _466) (1, _466) (-1, _474) 0 ]",
    "EXPR [ (1, _450, _458) (-1, _450, _467) (1, _467) (-1, _475) 0 ]",
    "EXPR [ (-1, _450, _468) (30, _450) (1, _468) (-1, _476) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(404))], q_c: -1 })], outputs: [Simple(Witness(477))]",
    "EXPR [ (1, _404, _477) (-1, _477) (1, _478) -1 ]",
    "EXPR [ (1, _404, _478) (-1, _478) 0 ]",
    "EXPR [ (1, _404) (-1, _479) 9 ]",
    "BLACKBOX::RANGE [(_479, 32)] []",
    "INIT (id: 31, len: 10, witnesses: [_469, _470, _471, _472, _473, _474, _475, _476, _413, _151])",
    "EXPR [ (1, _404) (-1, _480) 8 ]",
    "MEM (id: 31, write EXPR [ (1, _151) 0 ] at: EXPR [ (1, _480) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _481) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _482) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _483) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _484) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _485) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _274) 0 ], value: EXPR [ (1, _486) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _339) 0 ], value: EXPR [ (1, _487) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _278) 0 ], value: EXPR [ (1, _488) 0 ]) ",
    "EXPR [ (-1, _489) 8 ]",
    "MEM (id: 31, read at: EXPR [ (1, _489) 0 ], value: EXPR [ (1, _490) 0 ]) ",
    "EXPR [ (-1, _491) 9 ]",
    "MEM (id: 31, read at: EXPR [ (1, _491) 0 ], value: EXPR [ (1, _492) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(479))], q_c: -10 })], outputs: [Simple(Witness(493))]",
    "EXPR [ (1, _479, _493) (-10, _493) (1, _494) -1 ]",
    "EXPR [ (1, _479, _494) (-10, _494) 0 ]",
    "EXPR [ (-1, _404, _479) (-1, _404) (1, _479) (-1, _495) 1 ]",
    "BLACKBOX::RANGE [(_495, 32)] []",
    "EXPR [ (1, _469, _478) (-1, _478, _481) (1, _481) (-1, _496) 0 ]",
    "EXPR [ (1, _470, _478) (-1, _478, _482) (1, _482) (-1, _497) 0 ]",
    "EXPR [ (1, _471, _478) (-1, _478, _483) (1, _483) (-1, _498) 0 ]",
    "EXPR [ (1, _472, _478) (-1, _478, _484) (1, _484) (-1, _499) 0 ]",
    "EXPR [ (1, _473, _478) (-1, _478, _485) (1, _485) (-1, _500) 0 ]",
    "EXPR [ (1, _474, _478) (-1, _478, _486) (1, _486) (-1, _501) 0 ]",
    "EXPR [ (1, _475, _478) (-1, _478, _487) (1, _487) (-1, _502) 0 ]",
    "EXPR [ (1, _476, _478) (-1, _478, _488) (1, _488) (-1, _503) 0 ]",
    "EXPR [ (1, _413, _478) (-1, _478, _490) (1, _490) (-1, _504) 0 ]",
    "EXPR [ (-1, _478, _492) (15, _478) (1, _492) (-1, _505) 0 ]",
    "EXPR [ (-1, _506) 50 ]",
    "INIT (id: 32, len: 11, witnesses: [_496, _497, _498, _499, _500, _501, _502, _503, _504, _505, _506])",
    "EXPR [ (-1, _404, _479) (1, _479) (-1, _507) 0 ]",
    "MEM (id: 32, read at: EXPR [ (1, _507) 0 ], value: EXPR [ (1, _508) 0 ]) ",
    "EXPR [ (1, _404, _508) (-50, _404) (-1, _509) 50 ]",
    "MEM (id: 32, write EXPR [ (1, _509) 0 ] at: EXPR [ (1, _507) 0 ]) ",
    "MEM (id: 32, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _510) 0 ]) ",
    "EXPR [ (-1, _404) (-1, _511) 1 ]",
    "MEM (id: 32, read at: EXPR [ (1, _511) 0 ], value: EXPR [ (1, _512) 0 ]) ",
    "EXPR [ (-2, _404) (-1, _513) 2 ]",
    "MEM (id: 32, read at: EXPR [ (1, _513) 0 ], value: EXPR [ (1, _514) 0 ]) ",
    "EXPR [ (-3, _404) (-1, _515) 3 ]",
    "MEM (id: 32, read at: EXPR [ (1, _515) 0 ], value: EXPR [ (1, _516) 0 ]) ",
    "EXPR [ (-4, _404) (-1, _517) 4 ]",
    "MEM (id: 32, read at: EXPR [ (1, _517) 0 ], value: EXPR [ (1, _518) 0 ]) ",
    "EXPR [ (-5, _404) (-1, _519) 5 ]",
    "MEM (id: 32, read at: EXPR [ (1, _519) 0 ], value: EXPR [ (1, _520) 0 ]) ",
    "EXPR [ (-6, _404) (-1, _521) 6 ]",
    "MEM (id: 32, read at: EXPR [ (1, _521) 0 ], value: EXPR [ (1, _522) 0 ]) ",
    "EXPR [ (-7, _404) (-1, _523) 7 ]",
    "MEM (id: 32, read at: EXPR [ (1, _523) 0 ], value: EXPR [ (1, _524) 0 ]) ",
    "EXPR [ (-8, _404) (-1, _525) 8 ]",
    "MEM (id: 32, read at: EXPR [ (1, _525) 0 ], value: EXPR [ (1, _526) 0 ]) ",
    "EXPR [ (-9, _404) (-1, _527) 9 ]",
    "MEM (id: 32, read at: EXPR [ (1, _527) 0 ], value: EXPR [ (1, _528) 0 ]) ",
    "EXPR [ (-10, _404) (-1, _529) 10 ]",
    "MEM (id: 32, read at: EXPR [ (1, _529) 0 ], value: EXPR [ (1, _530) 0 ]) ",
    "EXPR [ (-1, _404) (-1, _531) 1 ]",
    "EXPR [ (1, _494, _496) (-1, _494, _510) (1, _510) (-1, _532) 0 ]",
    "EXPR [ (1, _494, _497) (-1, _494, _512) (1, _512) (-1, _533) 0 ]",
    "EXPR [ (1, _494, _498) (-1, _494, _514) (1, _514) (-1, _534) 0 ]",
    "EXPR [ (1, _494, _499) (-1, _494, _516) (1, _516) (-1, _535) 0 ]",
    "EXPR [ (1, _494, _500) (-1, _494, _518) (1, _518) (-1, _536) 0 ]",
    "EXPR [ (1, _494, _501) (-1, _494, _520) (1, _520) (-1, _537) 0 ]",
    "EXPR [ (1, _494, _502) (-1, _494, _522) (1, _522) (-1, _538) 0 ]",
    "EXPR [ (1, _494, _503) (-1, _494, _524) (1, _524) (-1, _539) 0 ]",
    "EXPR [ (1, _494, _504) (-1, _494, _526) (1, _526) (-1, _540) 0 ]",
    "EXPR [ (1, _494, _505) (-1, _494, _528) (1, _528) (-1, _541) 0 ]",
    "EXPR [ (-1, _494, _530) (50, _494) (1, _530) (-1, _542) 0 ]",
    "EXPR [ (1, _404, _479) (-1, _825) 0 ]",
    "EXPR [ (-1, _404, _495) (-1, _826) 0 ]",
    "EXPR [ (1, _495) (-1, _543) (1, _825) (1, _826) -11 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(543))], q_c: 0 })], outputs: [Simple(Witness(544))]",
    "EXPR [ (1, _543, _544) (1, _545) -1 ]",
    "EXPR [ (1, _543, _545) 0 ]",
    "EXPR [ (1, _404, _496) (1, _531, _532) (-1, _547) 0 ]",
    "EXPR [ (1, _404, _497) (1, _531, _533) (-1, _548) 0 ]",
    "EXPR [ (1, _404, _498) (1, _531, _534) (-1, _549) 0 ]",
    "EXPR [ (1, _404, _499) (1, _531, _535) (-1, _550) 0 ]",
    "EXPR [ (1, _404, _500) (1, _531, _536) (-1, _551) 0 ]",
    "EXPR [ (1, _404, _501) (1, _531, _537) (-1, _552) 0 ]",
    "EXPR [ (1, _404, _502) (1, _531, _538) (-1, _553) 0 ]",
    "EXPR [ (1, _404, _503) (1, _531, _539) (-1, _554) 0 ]",
    "EXPR [ (1, _404, _504) (1, _531, _540) (-1, _555) 0 ]",
    "EXPR [ (1, _404, _505) (1, _531, _541) (-1, _556) 0 ]",
    "EXPR [ (1, _531, _542) (-1, _557) 0 ]",
    "EXPR [ (-1, _558) 60 ]",
    "INIT (id: 33, len: 12, witnesses: [_547, _548, _549, _550, _551, _552, _553, _554, _555, _556, _557, _558])",
    "EXPR [ (1, _495) (-1, _559) (1, _825) (1, _826) 0 ]",
    "MEM (id: 33, write EXPR [ (1, _558) 0 ] at: EXPR [ (1, _559) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _560) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _561) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _562) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _563) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _564) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _274) 0 ], value: EXPR [ (1, _565) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _339) 0 ], value: EXPR [ (1, _566) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _278) 0 ], value: EXPR [ (1, _567) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _489) 0 ], value: EXPR [ (1, _568) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _491) 0 ], value: EXPR [ (1, _569) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _254) 0 ], value: EXPR [ (1, _570) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _276) 0 ], value: EXPR [ (1, _571) 0 ]) ",
    "EXPR [ (1, _495) (1, _825) (1, _826) -10 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967285 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(572)), Simple(Witness(573))]",
    "BLACKBOX::RANGE [(_573, 32)] []",
    "EXPR [ (1, _8) (-4294967296, _572) (-1, _573) 4294967285 ]",
    "EXPR [ (-1, _572) 0 ]",
    "EXPR [ (1, _545, _547) (-1, _545, _560) (1, _560) (-1, _574) 0 ]",
    "EXPR [ (1, _545, _548) (-1, _545, _561) (1, _561) (-1, _575) 0 ]",
    "EXPR [ (1, _545, _549) (-1, _545, _562) (1, _562) (-1, _576) 0 ]",
    "EXPR [ (1, _545, _550) (-1, _545, _563) (1, _563) (-1, _577) 0 ]",
    "EXPR [ (1, _545, _551) (-1, _545, _564) (1, _564) (-1, _578) 0 ]",
    "EXPR [ (1, _545, _552) (-1, _545, _565) (1, _565) (-1, _579) 0 ]",
    "EXPR [ (1, _545, _553) (-1, _545, _566) (1, _566) (-1, _580) 0 ]",
    "EXPR [ (1, _545, _554) (-1, _545, _567) (1, _567) (-1, _581) 0 ]",
    "EXPR [ (1, _545, _555) (-1, _545, _568) (1, _568) (-1, _582) 0 ]",
    "EXPR [ (1, _545, _556) (-1, _545, _569) (1, _569) (-1, _583) 0 ]",
    "EXPR [ (1, _545, _557) (-1, _545, _570) (1, _570) (-1, _584) 0 ]",
    "EXPR [ (-1, _545, _571) (60, _545) (1, _571) (-1, _585) 0 ]",
    "INIT (id: 34, len: 12, witnesses: [_574, _575, _576, _577, _578, _579, _580, _581, _582, _583, _584, _585])",
    "MEM (id: 34, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _586) 0 ]) ",
    "EXPR [ (1, _586) -50 ]",
    "EXPR [ (1, _581) -30 ]",
    "EXPR [ (1, _582) -15 ]",
    "EXPR [ (1, _583) -50 ]",
    "EXPR [ (1, _584) -60 ]",
    "EXPR [ (1, _8, _443) (-1, _587) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _587) 0 ], value: EXPR [ (1, _588) 0 ]) ",
    "EXPR [ (-1, _443, _588) (5, _443) (1, _588) (-1, _589) 0 ]",
    "MEM (id: 0, write EXPR [ (1, _589) 0 ] at: EXPR [ (1, _587) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _590) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _591) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _592) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _593) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _594) 0 ]) ",
    "INIT (id: 36, len: 7, witnesses: [_590, _591, _592, _593, _594, _12, _8])",
    "MEM (id: 36, read at: EXPR [ (1, _339) 0 ], value: EXPR [ (1, _595) 0 ]) ",
    "EXPR [ (-1, _8, _443) (1, _443, _595) 0 ]",
    "EXPR [ (1, _443, _591) (1, _418) (-1, _596) 0 ]",
    "EXPR [ (1, _443, _592) (2, _418) (-1, _597) 0 ]",
    "EXPR [ (1, _443, _593) (3, _418) (-1, _598) 0 ]",
    "EXPR [ (1, _443, _594) (4, _418) (-1, _599) 0 ]",
    "EXPR [ (5, _418, _443) (-1, _871) 0 ]",
    "EXPR [ (6, _443, _443) (-1, _872) 0 ]",
    "EXPR [ (6, _418) (-1, _600) (1, _871) (1, _872) -6 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(600))], q_c: 0 })], outputs: [Simple(Witness(601))]",
    "EXPR [ (1, _600, _601) (1, _602) -1 ]",
    "EXPR [ (1, _600, _602) 0 ]",
    "EXPR [ (1, _443, _590) (-1, _604) 0 ]",
    "EXPR [ (1, _443, _596) (1, _418) (-1, _605) 0 ]",
    "EXPR [ (1, _443, _597) (2, _418) (-1, _606) 0 ]",
    "EXPR [ (1, _443, _598) (3, _418) (-1, _607) 0 ]",
    "EXPR [ (1, _443, _599) (4, _418) (-1, _608) 0 ]",
    "EXPR [ (1, _12, _443) (-1, _609) (1, _758) 0 ]",
    "INIT (id: 38, len: 7, witnesses: [_604, _605, _606, _607, _608, _609, _459])",
    "EXPR [ (6, _418) (-1, _610) (1, _871) (1, _872) 0 ]",
    "MEM (id: 38, write EXPR [ (1, _459) 0 ] at: EXPR [ (1, _610) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _611) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _612) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _613) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _614) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _615) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _274) 0 ], value: EXPR [ (1, _616) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _339) 0 ], value: EXPR [ (1, _617) 0 ]) ",
    "EXPR [ (6, _418) (1, _871) (1, _872) -6 ]",
    "EXPR [ (1, _602, _604) (-1, _602, _611) (1, _611) (-1, _618) 0 ]",
    "EXPR [ (1, _602, _605) (-1, _602, _612) (1, _612) (-1, _619) 0 ]",
    "EXPR [ (1, _602, _606) (-1, _602, _613) (1, _613) (-1, _620) 0 ]",
    "EXPR [ (1, _602, _607) (-1, _602, _614) (1, _614) (-1, _621) 0 ]",
    "EXPR [ (1, _602, _608) (-1, _602, _615) (1, _615) (-1, _622) 0 ]",
    "EXPR [ (1, _602, _609) (-1, _602, _616) (1, _616) (-1, _623) 0 ]",
    "EXPR [ (-1, _602, _617) (30, _602) (1, _617) (-1, _624) 0 ]",
    "EXPR [ (1, _404, _618) (1, _531, _618) (-1, _625) 0 ]",
    "EXPR [ (1, _404, _619) (1, _531, _619) (-1, _626) 0 ]",
    "EXPR [ (1, _404, _620) (1, _531, _620) (-1, _627) 0 ]",
    "EXPR [ (1, _404, _621) (1, _531, _621) (-1, _628) 0 ]",
    "EXPR [ (1, _404, _622) (1, _531, _622) (-1, _629) 0 ]",
    "EXPR [ (1, _404, _623) (1, _531, _623) (-1, _630) 0 ]",
    "EXPR [ (1, _404, _624) (1, _531, _624) (-1, _631) 0 ]",
    "INIT (id: 39, len: 8, witnesses: [_625, _626, _627, _628, _629, _630, _631, _413])",
    "EXPR [ (8, _404) (7, _531) (-1, _632) -1 ]",
    "MEM (id: 39, read at: EXPR [ (1, _632) 0 ], value: EXPR [ (1, _633) 0 ]) ",
    "INIT (id: 40, len: 8, witnesses: [_625, _626, _627, _628, _629, _630, _631, _413])",
    "EXPR [ (1, _633) -30 ]",
    "EXPR [ (1, _632) (-1, _634) -1 ]",
    "MEM (id: 40, read at: EXPR [ (1, _634) 0 ], value: EXPR [ (1, _635) 0 ]) ",
    "EXPR [ (-1, _12) (1, _635) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "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",
  "file_map": {
    "50": {
      "source": "fn main(x: Field) {\n    // The parameters to this function must come directly from witness values (inputs to main).\n    regression_dynamic_slice_index(x - 1, x - 4);\n}\n\nfn regression_dynamic_slice_index(x: Field, y: Field) {\n    let mut slice = &[];\n    for i in 0..5 {\n        slice = slice.push_back(i as Field);\n    }\n    assert(slice.len() == 5);\n\n    dynamic_slice_index_set_if(slice, x, y);\n    dynamic_slice_index_set_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_if(slice, x, y + 1);\n    dynamic_slice_index_if(slice, x);\n    dynamic_array_index_if([0, 1, 2, 3, 4], x);\n    dynamic_slice_index_else(slice, x);\n\n    dynamic_slice_merge_if(slice, x);\n    dynamic_slice_merge_else(slice, x);\n    dynamic_slice_merge_two_ifs(slice, x);\n    dynamic_slice_merge_mutate_between_ifs(slice, x, y);\n    dynamic_slice_merge_push_then_pop(slice, x, y);\n}\n\nfn dynamic_slice_index_set_if(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[3] == 2);\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_index_set_else(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 > 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 0);\n}\n// This tests the case of missing a store instruction in the else branch\n// of merging slices\nfn dynamic_slice_index_if(mut slice: [Field], x: Field) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    } else {\n        assert(slice[x] == 0);\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_array_index_if(mut array: [Field; 5], x: Field) {\n    if x as u32 < 10 {\n        assert(array[x] == 4);\n        array[x] = array[x] - 2;\n    } else {\n        assert(array[x] == 0);\n    }\n    assert(array[4] == 2);\n}\n// This tests the case of missing a store instruction in the then branch\n// of merging slices\nfn dynamic_slice_index_else(mut slice: [Field], x: Field) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_merge_if(mut slice: [Field], x: Field) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n\n        slice = slice.push_back(10);\n        // Having an array set here checks whether we appropriately\n        // handle a slice length that is not yet resolving to a constant\n        // during flattening\n        slice[x] = 10;\n        assert(slice[slice.len() - 1] == 10);\n        assert(slice.len() == 6);\n\n        slice[x] = 20;\n        slice[x] = slice[x] + 10;\n\n        slice = slice.push_front(11);\n        assert(slice[0] == 11);\n        assert(slice.len() == 7);\n        assert(slice[5] == 30);\n\n        slice = slice.push_front(12);\n        assert(slice[0] == 12);\n        assert(slice.len() == 8);\n        assert(slice[6] == 30);\n\n        let (popped_slice, last_elem) = slice.pop_back();\n        assert(last_elem == 10);\n        assert(popped_slice.len() == 7);\n\n        let (first_elem, rest_of_slice) = popped_slice.pop_front();\n        assert(first_elem == 12);\n        assert(rest_of_slice.len() == 6);\n\n        slice = rest_of_slice.insert(x as u32 - 2, 20);\n        assert(slice[2] == 20);\n        assert(slice[6] == 30);\n        assert(slice.len() == 7);\n\n        let (removed_slice, removed_elem) = slice.remove(x as u32 - 1);\n        // The deconstructed tuple assigns to the slice but is not seen outside of the if statement\n        // without a direct assignment\n        slice = removed_slice;\n\n        assert(removed_elem == 1);\n        assert(slice.len() == 6);\n    } else {\n        assert(slice[x] == 0);\n        slice = slice.push_back(20);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 30);\n}\n\nfn dynamic_slice_merge_else(mut slice: [Field], x: Field) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_else(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        if y != 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 5 {\n                // We should not hit this case\n                assert(slice[x] == 22);\n            } else {\n                slice[x] = 10;\n                slice = slice.push_back(15);\n                assert(slice.len() == 6);\n            }\n            assert(slice[4] == 10);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 10);\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_if(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 2);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[2] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        // TODO: this panics as we have a load for the slice in flattening\n        if y == 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 4 {\n                slice[x] = 5;\n            }\n            assert(slice[4] == 5);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 5);\n}\n\nfn dynamic_slice_merge_two_ifs(mut slice: [Field], x: Field) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 8);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_merge_mutate_between_ifs(mut slice: [Field], x: Field, y: Field) {\n    if x != y {\n        slice[x] = 50;\n        slice = slice.push_back(y);\n        slice = slice.push_back(x);\n    } else {\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(x);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 8);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    if x != 20 {\n        slice = slice.push_back(50);\n    }\n\n    slice = slice.push_back(60);\n    assert(slice.len() == 11);\n    assert(slice[x] == 50);\n    assert(slice[slice.len() - 4] == 30);\n    assert(slice[slice.len() - 3] == 15);\n    assert(slice[slice.len() - 2] == 50);\n    assert(slice[slice.len() - 1] == 60);\n}\n\nfn dynamic_slice_merge_push_then_pop(mut slice: [Field], x: Field, y: Field) {\n    if x != y {\n        slice[x] = 5;\n        slice = slice.push_back(y);\n        slice = slice.push_back(x);\n        assert(slice.len() == 7);\n\n        let (popped_slice, elem) = slice.pop_back();\n        assert(slice.len() == 7);\n        assert(elem == x);\n        slice = popped_slice;\n    } else {\n        slice = slice.push_back(x);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 7);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    let (slice, elem) = slice.pop_back();\n    assert(elem == 30);\n\n    let (_, elem) = slice.pop_back();\n    assert(elem == y);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
