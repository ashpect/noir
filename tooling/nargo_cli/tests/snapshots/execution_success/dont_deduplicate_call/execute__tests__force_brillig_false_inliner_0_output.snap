---
source: tooling/nargo_cli/tests/execute.rs
expression: "&format!(\"success: {:?}\\nexit_code: {}\\n----- stdout -----\\n{}\\n----- stderr -----\\n{}\",\noutput.status.success(), output.status.code().unwrap_or(!0), stdout, stderr)"
---
success: true
exit_code: 0
----- stdout -----

----- stderr -----
bug: Input to Brillig function is in a separate subgraph to output
  ┌─ src/main.nr:9:18
  │
9 │         let x2 = foo(x);
  │                  ------ There is no path from the output of this Brillig call to either return values or inputs of the circuit, which creates an independent subgraph. This is quite likely a soundness vulnerability
  │
  = Call stack:
    1. src/main.nr:9:18

bug: Brillig function call isn't properly covered by a manual constraint
  ┌─ src/main.nr:6:18
  │
6 │             x1 = foo(x);
  │                  ------ This Brillig call's inputs and its return values haven't been sufficiently constrained. This should be done to prevent potential soundness vulnerabilities
  │
  = Call stack:
    1. src/main.nr:6:18
